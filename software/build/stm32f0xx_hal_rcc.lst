ARM GAS  /tmp/ccNk2H3C.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32f0xx_hal_rcc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  18              		.align	2
  19              		.global	HAL_RCC_DeInit
  20              		.code	16
  21              		.thumb_func
  23              	HAL_RCC_DeInit:
  24              	.LFB34:
  25              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @file    stm32f0xx_hal_rcc.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *       
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, USART, TIM, USB FS, etc..)
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                       ##### RCC Limitations #####
ARM GAS  /tmp/ccNk2H3C.s 			page 2


  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *      without specific prior written permission.
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ******************************************************************************  
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** */
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #include "stm32f0xx_hal.h"
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @addtogroup STM32F0xx_HAL_Driver
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC RCC
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** * @brief RCC HAL module driver
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
ARM GAS  /tmp/ccNk2H3C.s 			page 3


  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  * @{
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  */
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim    
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (HSE, HSI, HSI14, HSI48, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       AHB and APB1).
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the PLL as System clock source.
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSI14 (high-speed internal), 14 MHz factory-trimmed RC used directly to clock 
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the ADC peripheral.
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/ccNk2H3C.s 			page 4


 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source.
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) PLL (clocked by HSI, HSI48 or HSE), featuring different output clocks:
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The first output is used to generate the high speed system clock (up to 48 MHz)
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The second output is used to generate the clock for the USB FS (48 MHz)
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        (++) The third output may be used to generate the clock for the TIM, I2C and USART 
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             peripherals (up to 48 MHz)
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M0 NMI 
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           HSE and PLL.
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) clock is derived
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) For the STM32F0xx devices, the maximum frequency of the SYSCLK, HCLK and PCLK1 is 48 MHz,
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           prefetch is disabled.
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /*
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           | Latency       | SYSCLK clock frequency (MHz)  |
ARM GAS  /tmp/ccNk2H3C.s 			page 5


 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |---------------|-------------------------------|
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           +-----------------------------------------------+
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - HSE and PLL OFF
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - AHB, APB1 prescaler set to 1.
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - All interrupts disabled
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - Peripheral clocks
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
  26              		.loc 1 226 0
  27              		.cfi_startproc
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set HSION bit, HSITRIM[4:0] bits to the reset value*/
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION | RCC_CR_HSITRIM_4); 
  28              		.loc 1 228 0
  29 0000 0C4B     		ldr	r3, .L2
  30 0002 1968     		ldr	r1, [r3]
  31 0004 8122     		mov	r2, #129
  32 0006 0A43     		orr	r2, r1
  33 0008 1A60     		str	r2, [r3]
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0] and MCOSEL[2:0] bits */
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE | RCC_CFGR_MCO);
  34              		.loc 1 231 0
  35 000a 5968     		ldr	r1, [r3, #4]
  36 000c 0A4A     		ldr	r2, .L2+4
  37 000e 0A40     		and	r2, r1
  38 0010 5A60     		str	r2, [r3, #4]
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
  39              		.loc 1 234 0
  40 0012 1968     		ldr	r1, [r3]
  41 0014 094A     		ldr	r2, .L2+8
  42 0016 0A40     		and	r2, r1
  43 0018 1A60     		str	r2, [r3]
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
  44              		.loc 1 237 0
  45 001a 1968     		ldr	r1, [r3]
  46 001c 084A     		ldr	r2, .L2+12
  47 001e 0A40     		and	r2, r1
  48 0020 1A60     		str	r2, [r3]
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
ARM GAS  /tmp/ccNk2H3C.s 			page 6


 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR register */
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  49              		.loc 1 240 0
  50 0022 0022     		mov	r2, #0
  51 0024 5A60     		str	r2, [r3, #4]
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR2 register */
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
  52              		.loc 1 243 0
  53 0026 DA62     		str	r2, [r3, #44]
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Reset CFGR3 register */
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
  54              		.loc 1 246 0
  55 0028 1A63     		str	r2, [r3, #48]
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Disable all interrupts */
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
  56              		.loc 1 249 0
  57 002a 9A60     		str	r2, [r3, #8]
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  58              		.loc 1 252 0
  59 002c 054A     		ldr	r2, .L2+16
  60 002e 064B     		ldr	r3, .L2+20
  61 0030 1A60     		str	r2, [r3]
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
  62              		.loc 1 253 0
  63              		@ sp needed
  64 0032 7047     		bx	lr
  65              	.L3:
  66              		.align	2
  67              	.L2:
  68 0034 00100240 		.word	1073876992
  69 0038 0CF8FFF0 		.word	-251660276
  70 003c FFFFF6FE 		.word	-17367041
  71 0040 FFFFFBFF 		.word	-262145
  72 0044 00127A00 		.word	8000000
  73 0048 00000000 		.word	SystemCoreClock
  74              		.cfi_endproc
  75              	.LFE34:
  77              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  78              		.align	2
  79              		.global	HAL_RCC_OscConfig
  80              		.code	16
  81              		.thumb_func
  83              	HAL_RCC_OscConfig:
  84              	.LFB35:
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
ARM GAS  /tmp/ccNk2H3C.s 			page 7


 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
  85              		.loc 1 270 0
  86              		.cfi_startproc
  87              	.LVL0:
  88 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  89              	.LCFI0:
  90              		.cfi_def_cfa_offset 20
  91              		.cfi_offset 4, -20
  92              		.cfi_offset 5, -16
  93              		.cfi_offset 6, -12
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 4F46     		mov	r7, r9
  97 0004 4646     		mov	r6, r8
  98 0006 C0B4     		push	{r6, r7}
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 28
 101              		.cfi_offset 8, -28
 102              		.cfi_offset 9, -24
 103 0008 83B0     		sub	sp, sp, #12
 104              	.LCFI2:
 105              		.cfi_def_cfa_offset 40
 106 000a 041C     		mov	r4, r0
 107              	.LVL1:
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 108              		.loc 1 278 0
 109 000c 0068     		ldr	r0, [r0]
 110              	.LVL2:
 111 000e C007     		lsl	r0, r0, #31
 112 0010 6CD5     		bpl	.L5
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 113              		.loc 1 284 0
 114 0012 B74B     		ldr	r3, .L92
 115 0014 5B68     		ldr	r3, [r3, #4]
 116 0016 0C22     		mov	r2, #12
 117 0018 1340     		and	r3, r2
 118 001a 042B     		cmp	r3, #4
ARM GAS  /tmp/ccNk2H3C.s 			page 8


 119 001c 0DD0     		beq	.L6
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 120              		.loc 1 285 0
 121 001e B44B     		ldr	r3, .L92
 122 0020 5B68     		ldr	r3, [r3, #4]
 123 0022 1340     		and	r3, r2
 124 0024 082B     		cmp	r3, #8
 125 0026 10D1     		bne	.L7
 126              		.loc 1 285 0 is_stmt 0 discriminator 1
 127 0028 B14B     		ldr	r3, .L92
 128 002a 5B68     		ldr	r3, [r3, #4]
 129 002c C022     		mov	r2, #192
 130 002e 5202     		lsl	r2, r2, #9
 131 0030 1A40     		and	r2, r3
 132 0032 8023     		mov	r3, #128
 133 0034 5B02     		lsl	r3, r3, #9
 134 0036 9A42     		cmp	r2, r3
 135 0038 07D1     		bne	.L7
 136              	.L6:
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 137              		.loc 1 287 0 is_stmt 1
 138 003a AD4B     		ldr	r3, .L92
 139 003c 1B68     		ldr	r3, [r3]
 140 003e 9903     		lsl	r1, r3, #14
 141 0040 54D5     		bpl	.L5
 142              		.loc 1 287 0 is_stmt 0 discriminator 1
 143 0042 6268     		ldr	r2, [r4, #4]
 144 0044 002A     		cmp	r2, #0
 145 0046 51D1     		bne	.L5
 146 0048 62E2     		b	.L70
 147              	.L7:
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 148              		.loc 1 295 0 is_stmt 1
 149 004a 6368     		ldr	r3, [r4, #4]
 150 004c 012B     		cmp	r3, #1
 151 004e 06D1     		bne	.L9
 152              		.loc 1 295 0 is_stmt 0 discriminator 1
 153 0050 A74B     		ldr	r3, .L92
 154 0052 1968     		ldr	r1, [r3]
 155 0054 8022     		mov	r2, #128
 156 0056 5202     		lsl	r2, r2, #9
 157 0058 0A43     		orr	r2, r1
 158 005a 1A60     		str	r2, [r3]
 159 005c 22E0     		b	.L10
 160              	.L9:
 161              		.loc 1 295 0 discriminator 2
 162 005e 002B     		cmp	r3, #0
 163 0060 09D1     		bne	.L11
 164              		.loc 1 295 0 discriminator 1
ARM GAS  /tmp/ccNk2H3C.s 			page 9


 165 0062 A34B     		ldr	r3, .L92
 166 0064 1968     		ldr	r1, [r3]
 167 0066 A34A     		ldr	r2, .L92+4
 168 0068 0A40     		and	r2, r1
 169 006a 1A60     		str	r2, [r3]
 170 006c 1968     		ldr	r1, [r3]
 171 006e A24A     		ldr	r2, .L92+8
 172 0070 0A40     		and	r2, r1
 173 0072 1A60     		str	r2, [r3]
 174 0074 16E0     		b	.L10
 175              	.L11:
 176              		.loc 1 295 0 discriminator 2
 177 0076 052B     		cmp	r3, #5
 178 0078 0BD1     		bne	.L12
 179              		.loc 1 295 0 discriminator 1
 180 007a 9D4B     		ldr	r3, .L92
 181 007c 1968     		ldr	r1, [r3]
 182 007e 8022     		mov	r2, #128
 183 0080 D202     		lsl	r2, r2, #11
 184 0082 0A43     		orr	r2, r1
 185 0084 1A60     		str	r2, [r3]
 186 0086 1968     		ldr	r1, [r3]
 187 0088 8022     		mov	r2, #128
 188 008a 5202     		lsl	r2, r2, #9
 189 008c 0A43     		orr	r2, r1
 190 008e 1A60     		str	r2, [r3]
 191 0090 08E0     		b	.L10
 192              	.L12:
 193              		.loc 1 295 0 discriminator 2
 194 0092 974B     		ldr	r3, .L92
 195 0094 1968     		ldr	r1, [r3]
 196 0096 974A     		ldr	r2, .L92+4
 197 0098 0A40     		and	r2, r1
 198 009a 1A60     		str	r2, [r3]
 199 009c 1968     		ldr	r1, [r3]
 200 009e 964A     		ldr	r2, .L92+8
 201 00a0 0A40     		and	r2, r1
 202 00a2 1A60     		str	r2, [r3]
 203              	.L10:
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Check the HSE State */
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 204              		.loc 1 299 0 is_stmt 1
 205 00a4 6368     		ldr	r3, [r4, #4]
 206 00a6 002B     		cmp	r3, #0
 207 00a8 10D0     		beq	.L13
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 208              		.loc 1 302 0
 209 00aa FFF7FEFF 		bl	HAL_GetTick
 210              	.LVL3:
 211 00ae 071C     		mov	r7, r0
 212              	.LVL4:
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is ready */
ARM GAS  /tmp/ccNk2H3C.s 			page 10


 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 213              		.loc 1 305 0
 214 00b0 8F4E     		ldr	r6, .L92
 215 00b2 8025     		mov	r5, #128
 216 00b4 AD02     		lsl	r5, r5, #10
 217 00b6 05E0     		b	.L14
 218              	.LVL5:
 219              	.L15:
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 220              		.loc 1 307 0
 221 00b8 FFF7FEFF 		bl	HAL_GetTick
 222              	.LVL6:
 223 00bc C31B     		sub	r3, r0, r7
 224 00be 642B     		cmp	r3, #100
 225 00c0 00D9     		bls	.LCB190
 226 00c2 27E2     		b	.L71	@long jump
 227              	.LCB190:
 228              	.L14:
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 229              		.loc 1 305 0 discriminator 1
 230 00c4 3368     		ldr	r3, [r6]
 231 00c6 2B42     		tst	r3, r5
 232 00c8 F6D0     		beq	.L15
 233 00ca 0FE0     		b	.L5
 234              	.LVL7:
 235              	.L13:
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 236              		.loc 1 316 0
 237 00cc FFF7FEFF 		bl	HAL_GetTick
 238              	.LVL8:
 239 00d0 071C     		mov	r7, r0
 240              	.LVL9:
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 241              		.loc 1 319 0
 242 00d2 874E     		ldr	r6, .L92
 243 00d4 8025     		mov	r5, #128
 244 00d6 AD02     		lsl	r5, r5, #10
 245 00d8 05E0     		b	.L16
 246              	.LVL10:
 247              	.L17:
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 248              		.loc 1 321 0
 249 00da FFF7FEFF 		bl	HAL_GetTick
 250              	.LVL11:
 251 00de C31B     		sub	r3, r0, r7
ARM GAS  /tmp/ccNk2H3C.s 			page 11


 252 00e0 642B     		cmp	r3, #100
 253 00e2 00D9     		bls	.LCB218
 254 00e4 18E2     		b	.L72	@long jump
 255              	.LCB218:
 256              	.L16:
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 257              		.loc 1 319 0 discriminator 1
 258 00e6 3368     		ldr	r3, [r6]
 259 00e8 2B42     		tst	r3, r5
 260 00ea F6D1     		bne	.L17
 261              	.LVL12:
 262              	.L5:
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 263              		.loc 1 330 0
 264 00ec 2068     		ldr	r0, [r4]
 265 00ee 8007     		lsl	r0, r0, #30
 266 00f0 57D5     		bpl	.L18
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 267              		.loc 1 337 0
 268 00f2 7F4B     		ldr	r3, .L92
 269 00f4 5B68     		ldr	r3, [r3, #4]
 270 00f6 0C22     		mov	r2, #12
 271 00f8 1A42     		tst	r2, r3
 272 00fa 0DD0     		beq	.L19
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 273              		.loc 1 338 0
 274 00fc 7C4B     		ldr	r3, .L92
 275 00fe 5B68     		ldr	r3, [r3, #4]
 276 0100 1340     		and	r3, r2
 277 0102 082B     		cmp	r3, #8
 278 0104 19D1     		bne	.L20
 279              		.loc 1 338 0 is_stmt 0 discriminator 1
 280 0106 7A4B     		ldr	r3, .L92
 281 0108 5A68     		ldr	r2, [r3, #4]
 282 010a C023     		mov	r3, #192
 283 010c 5B02     		lsl	r3, r3, #9
 284 010e 1A40     		and	r2, r3
 285 0110 8023     		mov	r3, #128
 286 0112 1B02     		lsl	r3, r3, #8
 287 0114 9A42     		cmp	r2, r3
 288 0116 10D1     		bne	.L20
 289              	.L19:
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
ARM GAS  /tmp/ccNk2H3C.s 			page 12


 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 290              		.loc 1 341 0 is_stmt 1
 291 0118 754B     		ldr	r3, .L92
 292 011a 1B68     		ldr	r3, [r3]
 293 011c 9907     		lsl	r1, r3, #30
 294 011e 03D5     		bpl	.L21
 295              		.loc 1 341 0 is_stmt 0 discriminator 1
 296 0120 E268     		ldr	r2, [r4, #12]
 297 0122 012A     		cmp	r2, #1
 298 0124 00D0     		beq	.LCB264
 299 0126 F9E1     		b	.L73	@long jump
 300              	.LCB264:
 301              	.L21:
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 302              		.loc 1 349 0 is_stmt 1 discriminator 2
 303 0128 714B     		ldr	r3, .L92
 304 012a 1A68     		ldr	r2, [r3]
 305 012c F821     		mov	r1, #248
 306 012e 8A43     		bic	r2, r1
 307 0130 2069     		ldr	r0, [r4, #16]
 308 0132 C100     		lsl	r1, r0, #3
 309 0134 0A43     		orr	r2, r1
 310 0136 1A60     		str	r2, [r3]
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 311              		.loc 1 341 0 discriminator 2
 312 0138 33E0     		b	.L18
 313              	.L20:
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI State */
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 314              		.loc 1 355 0
 315 013a E168     		ldr	r1, [r4, #12]
 316 013c 0029     		cmp	r1, #0
 317 013e 1CD0     		beq	.L22
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 318              		.loc 1 358 0
 319 0140 6B4B     		ldr	r3, .L92
 320 0142 1968     		ldr	r1, [r3]
 321 0144 0122     		mov	r2, #1
 322 0146 0A43     		orr	r2, r1
 323 0148 1A60     		str	r2, [r3]
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
ARM GAS  /tmp/ccNk2H3C.s 			page 13


 324              		.loc 1 361 0
 325 014a FFF7FEFF 		bl	HAL_GetTick
 326              	.LVL13:
 327 014e 071C     		mov	r7, r0
 328              	.LVL14:
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is ready */
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 329              		.loc 1 364 0
 330 0150 674E     		ldr	r6, .L92
 331 0152 0225     		mov	r5, #2
 332 0154 05E0     		b	.L23
 333              	.LVL15:
 334              	.L24:
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 335              		.loc 1 366 0
 336 0156 FFF7FEFF 		bl	HAL_GetTick
 337              	.LVL16:
 338 015a C31B     		sub	r3, r0, r7
 339 015c 022B     		cmp	r3, #2
 340 015e 00D9     		bls	.LCB305
 341 0160 DEE1     		b	.L74	@long jump
 342              	.LCB305:
 343              	.L23:
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 344              		.loc 1 364 0 discriminator 1
 345 0162 3368     		ldr	r3, [r6]
 346 0164 1D42     		tst	r5, r3
 347 0166 F6D0     		beq	.L24
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                 
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 348              		.loc 1 373 0
 349 0168 614B     		ldr	r3, .L92
 350 016a 1A68     		ldr	r2, [r3]
 351 016c F821     		mov	r1, #248
 352 016e 8A43     		bic	r2, r1
 353 0170 2069     		ldr	r0, [r4, #16]
 354 0172 C100     		lsl	r1, r0, #3
 355 0174 0A43     		orr	r2, r1
 356 0176 1A60     		str	r2, [r3]
 357 0178 13E0     		b	.L18
 358              	.LVL17:
 359              	.L22:
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 360              		.loc 1 378 0
 361 017a 5D4B     		ldr	r3, .L92
 362 017c 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccNk2H3C.s 			page 14


 363 017e 0121     		mov	r1, #1
 364 0180 8A43     		bic	r2, r1
 365 0182 1A60     		str	r2, [r3]
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 366              		.loc 1 381 0
 367 0184 FFF7FEFF 		bl	HAL_GetTick
 368              	.LVL18:
 369 0188 071C     		mov	r7, r0
 370              	.LVL19:
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 371              		.loc 1 384 0
 372 018a 594E     		ldr	r6, .L92
 373 018c 0225     		mov	r5, #2
 374 018e 05E0     		b	.L25
 375              	.LVL20:
 376              	.L26:
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 377              		.loc 1 386 0
 378 0190 FFF7FEFF 		bl	HAL_GetTick
 379              	.LVL21:
 380 0194 C31B     		sub	r3, r0, r7
 381 0196 022B     		cmp	r3, #2
 382 0198 00D9     		bls	.LCB347
 383 019a C3E1     		b	.L75	@long jump
 384              	.LCB347:
 385              	.L25:
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 386              		.loc 1 384 0 discriminator 1
 387 019c 3368     		ldr	r3, [r6]
 388 019e 1D42     		tst	r5, r3
 389 01a0 F6D1     		bne	.L26
 390              	.LVL22:
 391              	.L18:
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 392              		.loc 1 395 0
 393 01a2 2168     		ldr	r1, [r4]
 394 01a4 0907     		lsl	r1, r1, #28
 395 01a6 2BD5     		bpl	.L27
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSI State */
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
ARM GAS  /tmp/ccNk2H3C.s 			page 15


 396              		.loc 1 401 0
 397 01a8 E269     		ldr	r2, [r4, #28]
 398 01aa 002A     		cmp	r2, #0
 399 01ac 14D0     		beq	.L28
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 400              		.loc 1 404 0
 401 01ae 504B     		ldr	r3, .L92
 402 01b0 596A     		ldr	r1, [r3, #36]
 403 01b2 0122     		mov	r2, #1
 404 01b4 0A43     		orr	r2, r1
 405 01b6 5A62     		str	r2, [r3, #36]
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 406              		.loc 1 407 0
 407 01b8 FFF7FEFF 		bl	HAL_GetTick
 408              	.LVL23:
 409 01bc 071C     		mov	r7, r0
 410              	.LVL24:
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 411              		.loc 1 410 0
 412 01be 4C4E     		ldr	r6, .L92
 413 01c0 0225     		mov	r5, #2
 414 01c2 05E0     		b	.L29
 415              	.LVL25:
 416              	.L30:
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 417              		.loc 1 412 0
 418 01c4 FFF7FEFF 		bl	HAL_GetTick
 419              	.LVL26:
 420 01c8 C31B     		sub	r3, r0, r7
 421 01ca 022B     		cmp	r3, #2
 422 01cc 00D9     		bls	.LCB387
 423 01ce ABE1     		b	.L76	@long jump
 424              	.LCB387:
 425              	.L29:
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 426              		.loc 1 410 0 discriminator 1
 427 01d0 736A     		ldr	r3, [r6, #36]
 428 01d2 1D42     		tst	r5, r3
 429 01d4 F6D0     		beq	.L30
 430 01d6 13E0     		b	.L27
 431              	.LVL27:
 432              	.L28:
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
ARM GAS  /tmp/ccNk2H3C.s 			page 16


 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 433              		.loc 1 421 0
 434 01d8 454B     		ldr	r3, .L92
 435 01da 5A6A     		ldr	r2, [r3, #36]
 436 01dc 0121     		mov	r1, #1
 437 01de 8A43     		bic	r2, r1
 438 01e0 5A62     		str	r2, [r3, #36]
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 439              		.loc 1 424 0
 440 01e2 FFF7FEFF 		bl	HAL_GetTick
 441              	.LVL28:
 442 01e6 071C     		mov	r7, r0
 443              	.LVL29:
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 444              		.loc 1 427 0
 445 01e8 414E     		ldr	r6, .L92
 446 01ea 0225     		mov	r5, #2
 447 01ec 05E0     		b	.L31
 448              	.LVL30:
 449              	.L32:
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 450              		.loc 1 429 0
 451 01ee FFF7FEFF 		bl	HAL_GetTick
 452              	.LVL31:
 453 01f2 C31B     		sub	r3, r0, r7
 454 01f4 022B     		cmp	r3, #2
 455 01f6 00D9     		bls	.LCB419
 456 01f8 98E1     		b	.L77	@long jump
 457              	.LCB419:
 458              	.L31:
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 459              		.loc 1 427 0 discriminator 1
 460 01fa 736A     		ldr	r3, [r6, #36]
 461 01fc 1D42     		tst	r5, r3
 462 01fe F6D1     		bne	.L32
 463              	.LVL32:
 464              	.L27:
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 465              		.loc 1 437 0
 466 0200 2368     		ldr	r3, [r4]
 467 0202 5B07     		lsl	r3, r3, #29
 468 0204 00D4     		bmi	.LCB433
 469 0206 8FE0     		b	.L33	@long jump
 470              	.LCB433:
 471              	.LVL33:
ARM GAS  /tmp/ccNk2H3C.s 			page 17


 472              	.LBB2:
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 473              		.loc 1 446 0
 474 0208 394B     		ldr	r3, .L92
 475 020a DB69     		ldr	r3, [r3, #28]
 476 020c D800     		lsl	r0, r3, #3
 477 020e 0CD4     		bmi	.L78
 478              	.LBB3:
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 479              		.loc 1 448 0
 480 0210 374B     		ldr	r3, .L92
 481 0212 D969     		ldr	r1, [r3, #28]
 482 0214 8022     		mov	r2, #128
 483 0216 5205     		lsl	r2, r2, #21
 484 0218 1143     		orr	r1, r2
 485 021a D961     		str	r1, [r3, #28]
 486 021c DB69     		ldr	r3, [r3, #28]
 487 021e 1A40     		and	r2, r3
 488 0220 0192     		str	r2, [sp, #4]
 489 0222 019B     		ldr	r3, [sp, #4]
 490              	.LVL34:
 491              	.LBE3:
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pwrclkchanged = SET;
 492              		.loc 1 449 0
 493 0224 0121     		mov	r1, #1
 494 0226 8846     		mov	r8, r1
 495 0228 01E0     		b	.L34
 496              	.LVL35:
 497              	.L78:
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 498              		.loc 1 439 0
 499 022a 0022     		mov	r2, #0
 500 022c 9046     		mov	r8, r2
 501              	.LVL36:
 502              	.L34:
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 503              		.loc 1 452 0
 504 022e 334B     		ldr	r3, .L92+12
 505 0230 1B68     		ldr	r3, [r3]
 506 0232 D805     		lsl	r0, r3, #23
 507 0234 15D4     		bmi	.L35
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 508              		.loc 1 455 0
 509 0236 314B     		ldr	r3, .L92+12
ARM GAS  /tmp/ccNk2H3C.s 			page 18


 510 0238 1968     		ldr	r1, [r3]
 511 023a 8022     		mov	r2, #128
 512 023c 5200     		lsl	r2, r2, #1
 513 023e 0A43     		orr	r2, r1
 514 0240 1A60     		str	r2, [r3]
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 515              		.loc 1 458 0
 516 0242 FFF7FEFF 		bl	HAL_GetTick
 517              	.LVL37:
 518 0246 071C     		mov	r7, r0
 519              	.LVL38:
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 520              		.loc 1 460 0
 521 0248 2C4E     		ldr	r6, .L92+12
 522 024a 8025     		mov	r5, #128
 523 024c 6D00     		lsl	r5, r5, #1
 524 024e 05E0     		b	.L36
 525              	.LVL39:
 526              	.L37:
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 527              		.loc 1 462 0
 528 0250 FFF7FEFF 		bl	HAL_GetTick
 529              	.LVL40:
 530 0254 C31B     		sub	r3, r0, r7
 531 0256 642B     		cmp	r3, #100
 532 0258 00D9     		bls	.LCB496
 533 025a 69E1     		b	.L79	@long jump
 534              	.LCB496:
 535              	.L36:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 536              		.loc 1 460 0 discriminator 1
 537 025c 3368     		ldr	r3, [r6]
 538 025e 2B42     		tst	r3, r5
 539 0260 F6D0     		beq	.L37
 540              	.LVL41:
 541              	.L35:
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 542              		.loc 1 470 0
 543 0262 A368     		ldr	r3, [r4, #8]
 544 0264 012B     		cmp	r3, #1
 545 0266 05D1     		bne	.L38
 546              		.loc 1 470 0 is_stmt 0 discriminator 1
 547 0268 214B     		ldr	r3, .L92
 548 026a 196A     		ldr	r1, [r3, #32]
 549 026c 0122     		mov	r2, #1
 550 026e 0A43     		orr	r2, r1
ARM GAS  /tmp/ccNk2H3C.s 			page 19


 551 0270 1A62     		str	r2, [r3, #32]
 552 0272 20E0     		b	.L39
 553              	.L38:
 554              		.loc 1 470 0 discriminator 2
 555 0274 002B     		cmp	r3, #0
 556 0276 09D1     		bne	.L40
 557              		.loc 1 470 0 discriminator 1
 558 0278 1D4B     		ldr	r3, .L92
 559 027a 1A6A     		ldr	r2, [r3, #32]
 560 027c 0121     		mov	r1, #1
 561 027e 8A43     		bic	r2, r1
 562 0280 1A62     		str	r2, [r3, #32]
 563 0282 1A6A     		ldr	r2, [r3, #32]
 564 0284 0421     		mov	r1, #4
 565 0286 8A43     		bic	r2, r1
 566 0288 1A62     		str	r2, [r3, #32]
 567 028a 14E0     		b	.L39
 568              	.L40:
 569              		.loc 1 470 0 discriminator 2
 570 028c 052B     		cmp	r3, #5
 571 028e 09D1     		bne	.L41
 572              		.loc 1 470 0 discriminator 1
 573 0290 174B     		ldr	r3, .L92
 574 0292 196A     		ldr	r1, [r3, #32]
 575 0294 0422     		mov	r2, #4
 576 0296 0A43     		orr	r2, r1
 577 0298 1A62     		str	r2, [r3, #32]
 578 029a 196A     		ldr	r1, [r3, #32]
 579 029c 0122     		mov	r2, #1
 580 029e 0A43     		orr	r2, r1
 581 02a0 1A62     		str	r2, [r3, #32]
 582 02a2 08E0     		b	.L39
 583              	.L41:
 584              		.loc 1 470 0 discriminator 2
 585 02a4 124B     		ldr	r3, .L92
 586 02a6 1A6A     		ldr	r2, [r3, #32]
 587 02a8 0121     		mov	r1, #1
 588 02aa 8A43     		bic	r2, r1
 589 02ac 1A62     		str	r2, [r3, #32]
 590 02ae 1A6A     		ldr	r2, [r3, #32]
 591 02b0 0421     		mov	r1, #4
 592 02b2 8A43     		bic	r2, r1
 593 02b4 1A62     		str	r2, [r3, #32]
 594              	.L39:
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the LSE State */
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 595              		.loc 1 472 0 is_stmt 1
 596 02b6 A168     		ldr	r1, [r4, #8]
 597 02b8 0029     		cmp	r1, #0
 598 02ba 11D0     		beq	.L42
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 599              		.loc 1 475 0
 600 02bc FFF7FEFF 		bl	HAL_GetTick
 601              	.LVL42:
 602 02c0 8146     		mov	r9, r0
ARM GAS  /tmp/ccNk2H3C.s 			page 20


 603              	.LVL43:
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 604              		.loc 1 478 0
 605 02c2 0B4E     		ldr	r6, .L92
 606 02c4 0225     		mov	r5, #2
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 607              		.loc 1 480 0
 608 02c6 0E4F     		ldr	r7, .L92+16
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 609              		.loc 1 478 0
 610 02c8 06E0     		b	.L43
 611              	.LVL44:
 612              	.L44:
 613              		.loc 1 480 0
 614 02ca FFF7FEFF 		bl	HAL_GetTick
 615              	.LVL45:
 616 02ce 4A46     		mov	r2, r9
 617 02d0 831A     		sub	r3, r0, r2
 618 02d2 BB42     		cmp	r3, r7
 619 02d4 00D9     		bls	.LCB579
 620 02d6 2DE1     		b	.L80	@long jump
 621              	.LCB579:
 622              	.L43:
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 623              		.loc 1 478 0 discriminator 1
 624 02d8 336A     		ldr	r3, [r6, #32]
 625 02da 1D42     		tst	r5, r3
 626 02dc F5D0     		beq	.L44
 627 02de 1BE0     		b	.L45
 628              	.LVL46:
 629              	.L42:
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 630              		.loc 1 489 0
 631 02e0 FFF7FEFF 		bl	HAL_GetTick
 632              	.LVL47:
 633 02e4 8146     		mov	r9, r0
 634              	.LVL48:
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 635              		.loc 1 492 0
 636 02e6 024E     		ldr	r6, .L92
 637 02e8 0225     		mov	r5, #2
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 638              		.loc 1 494 0
ARM GAS  /tmp/ccNk2H3C.s 			page 21


 639 02ea 054F     		ldr	r7, .L92+16
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 640              		.loc 1 492 0
 641 02ec 11E0     		b	.L46
 642              	.L93:
 643 02ee C046     		.align	2
 644              	.L92:
 645 02f0 00100240 		.word	1073876992
 646 02f4 FFFFFEFF 		.word	-65537
 647 02f8 FFFFFBFF 		.word	-262145
 648 02fc 00700040 		.word	1073770496
 649 0300 88130000 		.word	5000
 650              	.LVL49:
 651              	.L47:
 652              		.loc 1 494 0
 653 0304 FFF7FEFF 		bl	HAL_GetTick
 654              	.LVL50:
 655 0308 4946     		mov	r1, r9
 656 030a 431A     		sub	r3, r0, r1
 657 030c BB42     		cmp	r3, r7
 658 030e 00D9     		bls	.LCB618
 659 0310 12E1     		b	.L81	@long jump
 660              	.LCB618:
 661              	.L46:
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 662              		.loc 1 492 0 discriminator 1
 663 0312 336A     		ldr	r3, [r6, #32]
 664 0314 1D42     		tst	r5, r3
 665 0316 F5D1     		bne	.L47
 666              	.L45:
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 667              		.loc 1 502 0
 668 0318 4246     		mov	r2, r8
 669 031a 012A     		cmp	r2, #1
 670 031c 04D1     		bne	.L33
 671              	.LVL51:
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 672              		.loc 1 504 0
 673 031e 934B     		ldr	r3, .L94
 674 0320 D969     		ldr	r1, [r3, #28]
 675 0322 934A     		ldr	r2, .L94+4
 676              	.LVL52:
 677 0324 0A40     		and	r2, r1
 678 0326 DA61     		str	r2, [r3, #28]
 679              	.LVL53:
 680              	.L33:
 681              	.LBE2:
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
ARM GAS  /tmp/ccNk2H3C.s 			page 22


 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI14 Configuration --------------------------*/
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 682              		.loc 1 509 0
 683 0328 2368     		ldr	r3, [r4]
 684 032a DB06     		lsl	r3, r3, #27
 685 032c 4AD5     		bpl	.L48
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the HSI14 State */
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 686              		.loc 1 516 0
 687 032e 6369     		ldr	r3, [r4, #20]
 688 0330 012B     		cmp	r3, #1
 689 0332 20D1     		bne	.L49
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 690              		.loc 1 519 0
 691 0334 8D4B     		ldr	r3, .L94
 692 0336 596B     		ldr	r1, [r3, #52]
 693 0338 0422     		mov	r2, #4
 694 033a 0A43     		orr	r2, r1
 695 033c 5A63     		str	r2, [r3, #52]
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable the Internal High Speed oscillator (HSI). */
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_ENABLE();
 696              		.loc 1 522 0
 697 033e 596B     		ldr	r1, [r3, #52]
 698 0340 0122     		mov	r2, #1
 699 0342 0A43     		orr	r2, r1
 700 0344 5A63     		str	r2, [r3, #52]
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 701              		.loc 1 525 0
 702 0346 FFF7FEFF 		bl	HAL_GetTick
 703              	.LVL54:
 704 034a 071C     		mov	r7, r0
 705              	.LVL55:
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 706              		.loc 1 528 0
 707 034c 874E     		ldr	r6, .L94
 708 034e 0225     		mov	r5, #2
 709 0350 05E0     		b	.L50
 710              	.LVL56:
 711              	.L51:
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 712              		.loc 1 530 0
 713 0352 FFF7FEFF 		bl	HAL_GetTick
 714              	.LVL57:
ARM GAS  /tmp/ccNk2H3C.s 			page 23


 715 0356 C31B     		sub	r3, r0, r7
 716 0358 022B     		cmp	r3, #2
 717 035a 00D9     		bls	.LCB676
 718 035c EEE0     		b	.L82	@long jump
 719              	.LCB676:
 720              	.L50:
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 721              		.loc 1 528 0 discriminator 1
 722 035e 736B     		ldr	r3, [r6, #52]
 723 0360 1D42     		tst	r5, r3
 724 0362 F6D0     		beq	.L51
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }      
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       } 
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 725              		.loc 1 537 0
 726 0364 814B     		ldr	r3, .L94
 727 0366 5A6B     		ldr	r2, [r3, #52]
 728 0368 F821     		mov	r1, #248
 729 036a 8A43     		bic	r2, r1
 730 036c A069     		ldr	r0, [r4, #24]
 731 036e C100     		lsl	r1, r0, #3
 732 0370 0A43     		orr	r2, r1
 733 0372 5A63     		str	r2, [r3, #52]
 734 0374 26E0     		b	.L48
 735              	.LVL58:
 736              	.L49:
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 737              		.loc 1 539 0
 738 0376 0533     		add	r3, r3, #5
 739 0378 0CD1     		bne	.L52
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Enable ADC control of the Internal High Speed oscillator HSI14 */
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_ENABLE();
 740              		.loc 1 542 0
 741 037a 7C4B     		ldr	r3, .L94
 742 037c 5A6B     		ldr	r2, [r3, #52]
 743 037e 0421     		mov	r1, #4
 744 0380 8A43     		bic	r2, r1
 745 0382 5A63     		str	r2, [r3, #52]
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 746              		.loc 1 545 0
 747 0384 5A6B     		ldr	r2, [r3, #52]
 748 0386 F821     		mov	r1, #248
 749 0388 8A43     		bic	r2, r1
 750 038a A069     		ldr	r0, [r4, #24]
 751 038c C100     		lsl	r1, r0, #3
 752 038e 0A43     		orr	r2, r1
 753 0390 5A63     		str	r2, [r3, #52]
 754 0392 17E0     		b	.L48
 755              	.L52:
ARM GAS  /tmp/ccNk2H3C.s 			page 24


 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable ADC control of the Internal High Speed oscillator HSI14 */
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14ADC_DISABLE();
 756              		.loc 1 550 0
 757 0394 754B     		ldr	r3, .L94
 758 0396 596B     		ldr	r1, [r3, #52]
 759 0398 0422     		mov	r2, #4
 760 039a 0A43     		orr	r2, r1
 761 039c 5A63     		str	r2, [r3, #52]
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Disable the Internal High Speed oscillator (HSI). */
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       __HAL_RCC_HSI14_DISABLE();
 762              		.loc 1 553 0
 763 039e 5A6B     		ldr	r2, [r3, #52]
 764 03a0 0121     		mov	r1, #1
 765 03a2 8A43     		bic	r2, r1
 766 03a4 5A63     		str	r2, [r3, #52]
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Get Start Tick */
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 767              		.loc 1 556 0
 768 03a6 FFF7FEFF 		bl	HAL_GetTick
 769              	.LVL59:
 770 03aa 071C     		mov	r7, r0
 771              	.LVL60:
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Wait till HSI is ready */  
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 772              		.loc 1 559 0
 773 03ac 6F4E     		ldr	r6, .L94
 774 03ae 0225     		mov	r5, #2
 775 03b0 05E0     		b	.L53
 776              	.LVL61:
 777              	.L54:
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 778              		.loc 1 561 0
 779 03b2 FFF7FEFF 		bl	HAL_GetTick
 780              	.LVL62:
 781 03b6 C31B     		sub	r3, r0, r7
 782 03b8 022B     		cmp	r3, #2
 783 03ba 00D9     		bls	.LCB742
 784 03bc C0E0     		b	.L83	@long jump
 785              	.LCB742:
 786              	.L53:
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 787              		.loc 1 559 0 discriminator 1
 788 03be 736B     		ldr	r3, [r6, #52]
 789 03c0 1D42     		tst	r5, r3
 790 03c2 F6D1     		bne	.L54
 791              	.LVL63:
 792              	.L48:
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
ARM GAS  /tmp/ccNk2H3C.s 			page 25


 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*----------------------------- HSI48 Configuration --------------------------*/
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 793              		.loc 1 571 0
 794 03c4 2168     		ldr	r1, [r4]
 795 03c6 8906     		lsl	r1, r1, #26
 796 03c8 48D5     		bpl	.L55
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check the parameters */
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* When the HSI48 is used as system clock it is not allowed to be disabled */
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 797              		.loc 1 577 0
 798 03ca 684B     		ldr	r3, .L94
 799 03cc 5B68     		ldr	r3, [r3, #4]
 800 03ce 0C22     		mov	r2, #12
 801 03d0 1340     		and	r3, r2
 802 03d2 0C2B     		cmp	r3, #12
 803 03d4 0BD0     		beq	.L56
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSC
 804              		.loc 1 578 0 discriminator 1
 805 03d6 654B     		ldr	r3, .L94
 806 03d8 5B68     		ldr	r3, [r3, #4]
 807 03da 1340     		and	r3, r2
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI48) ||
 808              		.loc 1 577 0 discriminator 1
 809 03dc 082B     		cmp	r3, #8
 810 03de 0FD1     		bne	.L57
 811              		.loc 1 578 0
 812 03e0 624B     		ldr	r3, .L94
 813 03e2 5A68     		ldr	r2, [r3, #4]
 814 03e4 C023     		mov	r3, #192
 815 03e6 5B02     		lsl	r3, r3, #9
 816 03e8 1A40     		and	r2, r3
 817 03ea 9A42     		cmp	r2, r3
 818 03ec 08D1     		bne	.L57
 819              	.L56:
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET) && (RCC_OscInitStruct->HSI48State != RCC_
 820              		.loc 1 580 0
 821 03ee 5F4B     		ldr	r3, .L94
 822 03f0 5B6B     		ldr	r3, [r3, #52]
 823 03f2 DA03     		lsl	r2, r3, #15
 824 03f4 32D5     		bpl	.L55
 825              		.loc 1 580 0 is_stmt 0 discriminator 1
 826 03f6 236A     		ldr	r3, [r4, #32]
 827 03f8 012B     		cmp	r3, #1
 828 03fa 00D0     		beq	.LCB785
 829 03fc A2E0     		b	.L84	@long jump
 830              	.LCB785:
 831 03fe 2DE0     		b	.L55
 832              	.L57:
ARM GAS  /tmp/ccNk2H3C.s 			page 26


 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 State */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 833              		.loc 1 588 0 is_stmt 1
 834 0400 206A     		ldr	r0, [r4, #32]
 835 0402 0028     		cmp	r0, #0
 836 0404 16D0     		beq	.L58
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI48). */
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_ENABLE();
 837              		.loc 1 591 0
 838 0406 594B     		ldr	r3, .L94
 839 0408 596B     		ldr	r1, [r3, #52]
 840 040a 8022     		mov	r2, #128
 841 040c 5202     		lsl	r2, r2, #9
 842 040e 0A43     		orr	r2, r1
 843 0410 5A63     		str	r2, [r3, #52]
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 844              		.loc 1 594 0
 845 0412 FFF7FEFF 		bl	HAL_GetTick
 846              	.LVL64:
 847 0416 071C     		mov	r7, r0
 848              	.LVL65:
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 849              		.loc 1 597 0
 850 0418 544E     		ldr	r6, .L94
 851 041a 8025     		mov	r5, #128
 852 041c 6D02     		lsl	r5, r5, #9
 853 041e 05E0     		b	.L59
 854              	.LVL66:
 855              	.L60:
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 856              		.loc 1 599 0
 857 0420 FFF7FEFF 		bl	HAL_GetTick
 858              	.LVL67:
 859 0424 C31B     		sub	r3, r0, r7
 860 0426 022B     		cmp	r3, #2
 861 0428 00D9     		bls	.LCB817
 862 042a 8DE0     		b	.L85	@long jump
 863              	.LCB817:
 864              	.L59:
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 865              		.loc 1 597 0 discriminator 1
 866 042c 736B     		ldr	r3, [r6, #52]
 867 042e 2B42     		tst	r3, r5
 868 0430 F6D0     		beq	.L60
 869 0432 13E0     		b	.L55
ARM GAS  /tmp/ccNk2H3C.s 			page 27


 870              	.LVL68:
 871              	.L58:
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         } 
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI48). */
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_HSI48_DISABLE();
 872              		.loc 1 608 0
 873 0434 4D4B     		ldr	r3, .L94
 874 0436 596B     		ldr	r1, [r3, #52]
 875 0438 4E4A     		ldr	r2, .L94+8
 876 043a 0A40     		and	r2, r1
 877 043c 5A63     		str	r2, [r3, #52]
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 878              		.loc 1 611 0
 879 043e FFF7FEFF 		bl	HAL_GetTick
 880              	.LVL69:
 881 0442 071C     		mov	r7, r0
 882              	.LVL70:
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till HSI48 is ready */  
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 883              		.loc 1 614 0
 884 0444 494E     		ldr	r6, .L94
 885 0446 8025     		mov	r5, #128
 886 0448 6D02     		lsl	r5, r5, #9
 887 044a 04E0     		b	.L61
 888              	.LVL71:
 889              	.L62:
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 890              		.loc 1 616 0
 891 044c FFF7FEFF 		bl	HAL_GetTick
 892              	.LVL72:
 893 0450 C31B     		sub	r3, r0, r7
 894 0452 022B     		cmp	r3, #2
 895 0454 7AD8     		bhi	.L86
 896              	.L61:
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != RESET)
 897              		.loc 1 614 0 discriminator 1
 898 0456 736B     		ldr	r3, [r6, #52]
 899 0458 2B42     		tst	r3, r5
 900 045a F7D1     		bne	.L62
 901              	.LVL73:
 902              	.L55:
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
ARM GAS  /tmp/ccNk2H3C.s 			page 28


 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****        
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 903              		.loc 1 629 0
 904 045c 636A     		ldr	r3, [r4, #36]
 905 045e 002B     		cmp	r3, #0
 906 0460 76D0     		beq	.L87
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 907              		.loc 1 632 0
 908 0462 424A     		ldr	r2, .L94
 909 0464 5268     		ldr	r2, [r2, #4]
 910 0466 0C21     		mov	r1, #12
 911 0468 0A40     		and	r2, r1
 912 046a 082A     		cmp	r2, #8
 913 046c 72D0     		beq	.L88
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     { 
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 914              		.loc 1 634 0
 915 046e 022B     		cmp	r3, #2
 916 0470 38D1     		bne	.L63
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Check the parameters */
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 917              		.loc 1 642 0
 918 0472 3E4B     		ldr	r3, .L94
 919 0474 1968     		ldr	r1, [r3]
 920 0476 404A     		ldr	r2, .L94+12
 921 0478 0A40     		and	r2, r1
 922 047a 1A60     		str	r2, [r3]
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 923              		.loc 1 645 0
 924 047c FFF7FEFF 		bl	HAL_GetTick
 925              	.LVL74:
 926 0480 071C     		mov	r7, r0
 927              	.LVL75:
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 928              		.loc 1 648 0
 929 0482 3A4E     		ldr	r6, .L94
 930 0484 8025     		mov	r5, #128
 931 0486 AD04     		lsl	r5, r5, #18
 932 0488 04E0     		b	.L64
 933              	.LVL76:
ARM GAS  /tmp/ccNk2H3C.s 			page 29


 934              	.L65:
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 935              		.loc 1 650 0
 936 048a FFF7FEFF 		bl	HAL_GetTick
 937              	.LVL77:
 938 048e C31B     		sub	r3, r0, r7
 939 0490 022B     		cmp	r3, #2
 940 0492 61D8     		bhi	.L89
 941              	.L64:
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 942              		.loc 1 648 0 discriminator 1
 943 0494 3368     		ldr	r3, [r6]
 944 0496 2B42     		tst	r3, r5
 945 0498 F7D1     		bne	.L65
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 946              		.loc 1 657 0
 947 049a 344B     		ldr	r3, .L94
 948 049c DA6A     		ldr	r2, [r3, #44]
 949 049e 0F21     		mov	r1, #15
 950 04a0 8A43     		bic	r2, r1
 951 04a2 216B     		ldr	r1, [r4, #48]
 952 04a4 0A43     		orr	r2, r1
 953 04a6 DA62     		str	r2, [r3, #44]
 954 04a8 5968     		ldr	r1, [r3, #4]
 955 04aa 344A     		ldr	r2, .L94+16
 956 04ac 1140     		and	r1, r2
 957 04ae E06A     		ldr	r0, [r4, #44]
 958 04b0 A26A     		ldr	r2, [r4, #40]
 959 04b2 0243     		orr	r2, r0
 960 04b4 0A43     		orr	r2, r1
 961 04b6 5A60     		str	r2, [r3, #4]
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Enable the main PLL. */
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 962              		.loc 1 661 0
 963 04b8 1968     		ldr	r1, [r3]
 964 04ba 8022     		mov	r2, #128
 965 04bc 5204     		lsl	r2, r2, #17
 966 04be 0A43     		orr	r2, r1
 967 04c0 1A60     		str	r2, [r3]
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 968              		.loc 1 664 0
 969 04c2 FFF7FEFF 		bl	HAL_GetTick
 970              	.LVL78:
 971 04c6 061C     		mov	r6, r0
 972              	.LVL79:
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
ARM GAS  /tmp/ccNk2H3C.s 			page 30


 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is ready */
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 973              		.loc 1 667 0
 974 04c8 284D     		ldr	r5, .L94
 975 04ca 8024     		mov	r4, #128
 976              	.LVL80:
 977 04cc A404     		lsl	r4, r4, #18
 978 04ce 04E0     		b	.L66
 979              	.LVL81:
 980              	.L67:
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 981              		.loc 1 669 0
 982 04d0 FFF7FEFF 		bl	HAL_GetTick
 983              	.LVL82:
 984 04d4 831B     		sub	r3, r0, r6
 985 04d6 022B     		cmp	r3, #2
 986 04d8 40D8     		bhi	.L90
 987              	.L66:
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 988              		.loc 1 667 0 discriminator 1
 989 04da 2B68     		ldr	r3, [r5]
 990 04dc 2342     		tst	r3, r4
 991 04de F7D0     		beq	.L67
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Disable the main PLL. */
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****  
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Get Start Tick */
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           {
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           }
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 992              		.loc 1 699 0
 993 04e0 0020     		mov	r0, #0
 994 04e2 3EE0     		b	.L8
ARM GAS  /tmp/ccNk2H3C.s 			page 31


 995              	.LVL83:
 996              	.L63:
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 997              		.loc 1 678 0
 998 04e4 214B     		ldr	r3, .L94
 999 04e6 1968     		ldr	r1, [r3]
 1000 04e8 234A     		ldr	r2, .L94+12
 1001 04ea 0A40     		and	r2, r1
 1002 04ec 1A60     		str	r2, [r3]
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1003              		.loc 1 681 0
 1004 04ee FFF7FEFF 		bl	HAL_GetTick
 1005              	.LVL84:
 1006 04f2 061C     		mov	r6, r0
 1007              	.LVL85:
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1008              		.loc 1 684 0
 1009 04f4 1D4D     		ldr	r5, .L94
 1010 04f6 8024     		mov	r4, #128
 1011              	.LVL86:
 1012 04f8 A404     		lsl	r4, r4, #18
 1013 04fa 04E0     		b	.L68
 1014              	.LVL87:
 1015              	.L69:
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1016              		.loc 1 686 0
 1017 04fc FFF7FEFF 		bl	HAL_GetTick
 1018              	.LVL88:
 1019 0500 831B     		sub	r3, r0, r6
 1020 0502 022B     		cmp	r3, #2
 1021 0504 2CD8     		bhi	.L91
 1022              	.L68:
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1023              		.loc 1 684 0 discriminator 1
 1024 0506 2B68     		ldr	r3, [r5]
 1025 0508 2342     		tst	r3, r4
 1026 050a F7D1     		bne	.L69
 1027              		.loc 1 699 0
 1028 050c 0020     		mov	r0, #0
 1029 050e 28E0     		b	.L8
 1030              	.LVL89:
 1031              	.L70:
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1032              		.loc 1 289 0
 1033 0510 0120     		mov	r0, #1
 1034 0512 26E0     		b	.L8
 1035              	.LVL90:
 1036              	.L71:
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1037              		.loc 1 309 0
 1038 0514 0320     		mov	r0, #3
 1039 0516 24E0     		b	.L8
 1040              	.L72:
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1041              		.loc 1 323 0
 1042 0518 0320     		mov	r0, #3
 1043 051a 22E0     		b	.L8
ARM GAS  /tmp/ccNk2H3C.s 			page 32


 1044              	.LVL91:
 1045              	.L73:
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1046              		.loc 1 343 0
 1047 051c 0120     		mov	r0, #1
 1048 051e 20E0     		b	.L8
 1049              	.LVL92:
 1050              	.L74:
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1051              		.loc 1 368 0
 1052 0520 0320     		mov	r0, #3
 1053 0522 1EE0     		b	.L8
 1054              	.L75:
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1055              		.loc 1 388 0
 1056 0524 0320     		mov	r0, #3
 1057 0526 1CE0     		b	.L8
 1058              	.L76:
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1059              		.loc 1 414 0
 1060 0528 0320     		mov	r0, #3
 1061 052a 1AE0     		b	.L8
 1062              	.L77:
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1063              		.loc 1 431 0
 1064 052c 0320     		mov	r0, #3
 1065 052e 18E0     		b	.L8
 1066              	.LVL93:
 1067              	.L79:
 1068              	.LBB4:
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1069              		.loc 1 464 0
 1070 0530 0320     		mov	r0, #3
 1071 0532 16E0     		b	.L8
 1072              	.LVL94:
 1073              	.L80:
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1074              		.loc 1 482 0
 1075 0534 0320     		mov	r0, #3
 1076 0536 14E0     		b	.L8
 1077              	.LVL95:
 1078              	.L81:
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1079              		.loc 1 496 0
 1080 0538 0320     		mov	r0, #3
 1081 053a 12E0     		b	.L8
 1082              	.LVL96:
 1083              	.L82:
 1084              	.LBE4:
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1085              		.loc 1 532 0
 1086 053c 0320     		mov	r0, #3
 1087 053e 10E0     		b	.L8
 1088              	.L83:
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1089              		.loc 1 563 0
 1090 0540 0320     		mov	r0, #3
ARM GAS  /tmp/ccNk2H3C.s 			page 33


 1091 0542 0EE0     		b	.L8
 1092              	.LVL97:
 1093              	.L84:
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1094              		.loc 1 582 0
 1095 0544 0120     		mov	r0, #1
 1096 0546 0CE0     		b	.L8
 1097              	.LVL98:
 1098              	.L85:
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1099              		.loc 1 601 0
 1100 0548 0320     		mov	r0, #3
 1101 054a 0AE0     		b	.L8
 1102              	.L86:
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1103              		.loc 1 618 0
 1104 054c 0320     		mov	r0, #3
 1105 054e 08E0     		b	.L8
 1106              	.LVL99:
 1107              	.L87:
 1108              		.loc 1 699 0
 1109 0550 0020     		mov	r0, #0
 1110 0552 06E0     		b	.L8
 1111              	.L88:
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 1112              		.loc 1 695 0
 1113 0554 0120     		mov	r0, #1
 1114 0556 04E0     		b	.L8
 1115              	.LVL100:
 1116              	.L89:
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1117              		.loc 1 652 0
 1118 0558 0320     		mov	r0, #3
 1119 055a 02E0     		b	.L8
 1120              	.LVL101:
 1121              	.L90:
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1122              		.loc 1 671 0
 1123 055c 0320     		mov	r0, #3
 1124 055e 00E0     		b	.L8
 1125              	.L91:
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1126              		.loc 1 688 0
 1127 0560 0320     		mov	r0, #3
 1128              	.LVL102:
 1129              	.L8:
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1130              		.loc 1 700 0
 1131 0562 03B0     		add	sp, sp, #12
 1132              		@ sp needed
 1133 0564 0CBC     		pop	{r2, r3}
 1134 0566 9046     		mov	r8, r2
 1135 0568 9946     		mov	r9, r3
 1136 056a F0BD     		pop	{r4, r5, r6, r7, pc}
 1137              	.L95:
 1138              		.align	2
 1139              	.L94:
ARM GAS  /tmp/ccNk2H3C.s 			page 34


 1140 056c 00100240 		.word	1073876992
 1141 0570 FFFFFFEF 		.word	-268435457
 1142 0574 FFFFFEFF 		.word	-65537
 1143 0578 FFFFFFFE 		.word	-16777217
 1144 057c FF7FC2FF 		.word	-4030465
 1145              		.cfi_endproc
 1146              	.LFE35:
 1148              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1149              		.align	2
 1150              		.global	HAL_RCC_MCOConfig
 1151              		.code	16
 1152              		.thumb_func
 1154              	HAL_RCC_MCOConfig:
 1155              	.LFB37:
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         currently used as system clock source.
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HAL status
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     (HCLK) of the device. */
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
ARM GAS  /tmp/ccNk2H3C.s 			page 35


 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI48 is selected as System Clock Source */
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI48 ready flag */
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
ARM GAS  /tmp/ccNk2H3C.s 			page 36


 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Get Start Tick */
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI48)
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         {
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         }
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }      
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }    
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {    
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
ARM GAS  /tmp/ccNk2H3C.s 			page 37


 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }    
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @}
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @verbatim   
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   ===============================================================================  
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     [..]
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     frequencies.
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endverbatim
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @{
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
ARM GAS  /tmp/ccNk2H3C.s 			page 38


 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @if STM32F042x6
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F048xx
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F071xB
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F072xB
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F078xx
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F091xC
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elseif STM32F098xx
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48       HSI48 selected as MCO clock
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030x6
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F030xC
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F031x6
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F038xx
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070x6
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @elif STM32F070xB
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   @endif
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
ARM GAS  /tmp/ccNk2H3C.s 			page 39


 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI14       HSI14 selected as MCO clock
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1156              		.loc 1 986 0
 1157              		.cfi_startproc
 1158              	.LVL103:
 1159 0000 70B5     		push	{r4, r5, r6, lr}
 1160              	.LCFI3:
 1161              		.cfi_def_cfa_offset 16
 1162              		.cfi_offset 4, -16
 1163              		.cfi_offset 5, -12
 1164              		.cfi_offset 6, -8
 1165              		.cfi_offset 14, -4
 1166 0002 86B0     		sub	sp, sp, #24
 1167              	.LCFI4:
 1168              		.cfi_def_cfa_offset 40
 1169 0004 0E1C     		mov	r6, r1
 1170 0006 151C     		mov	r5, r2
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1171              		.loc 1 995 0
 1172 0008 0223     		mov	r3, #2
 1173 000a 0293     		str	r3, [sp, #8]
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1174              		.loc 1 996 0
 1175 000c 0323     		mov	r3, #3
 1176 000e 0493     		str	r3, [sp, #16]
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1177              		.loc 1 997 0
 1178 0010 0023     		mov	r3, #0
 1179 0012 0393     		str	r3, [sp, #12]
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1180              		.loc 1 998 0
 1181 0014 8022     		mov	r2, #128
 1182              	.LVL104:
 1183 0016 5200     		lsl	r2, r2, #1
 1184 0018 0192     		str	r2, [sp, #4]
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
ARM GAS  /tmp/ccNk2H3C.s 			page 40


 1185              		.loc 1 999 0
 1186 001a 0593     		str	r3, [sp, #20]
 1187              	.LBB5:
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* MCO1 Clock Enable */
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1188              		.loc 1 1002 0
 1189 001c 0B4C     		ldr	r4, .L97
 1190 001e 6269     		ldr	r2, [r4, #20]
 1191 0020 8023     		mov	r3, #128
 1192 0022 9B02     		lsl	r3, r3, #10
 1193 0024 1A43     		orr	r2, r3
 1194 0026 6261     		str	r2, [r4, #20]
 1195 0028 6269     		ldr	r2, [r4, #20]
 1196 002a 1340     		and	r3, r2
 1197 002c 0093     		str	r3, [sp]
 1198 002e 009B     		ldr	r3, [sp]
 1199              	.LBE5:
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1200              		.loc 1 1004 0
 1201 0030 9020     		mov	r0, #144
 1202              	.LVL105:
 1203 0032 C005     		lsl	r0, r0, #23
 1204 0034 01A9     		add	r1, sp, #4
 1205              	.LVL106:
 1206 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 1207              	.LVL107:
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Configure the MCO clock source */
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1208              		.loc 1 1007 0
 1209 003a 6268     		ldr	r2, [r4, #4]
 1210 003c 044B     		ldr	r3, .L97+4
 1211 003e 1340     		and	r3, r2
 1212 0040 2E43     		orr	r6, r5
 1213              	.LVL108:
 1214 0042 1D1C     		mov	r5, r3
 1215              	.LVL109:
 1216 0044 3543     		orr	r5, r6
 1217 0046 6560     		str	r5, [r4, #4]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1218              		.loc 1 1008 0
 1219 0048 06B0     		add	sp, sp, #24
 1220              		@ sp needed
 1221 004a 70BD     		pop	{r4, r5, r6, pc}
 1222              	.L98:
 1223              		.align	2
 1224              	.L97:
 1225 004c 00100240 		.word	1073876992
 1226 0050 FFFFFF80 		.word	-2130706433
 1227              		.cfi_endproc
 1228              	.LFE37:
 1230              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1231              		.align	2
 1232              		.global	HAL_RCC_EnableCSS
 1233              		.code	16
ARM GAS  /tmp/ccNk2H3C.s 			page 41


 1234              		.thumb_func
 1236              	HAL_RCC_EnableCSS:
 1237              	.LFB38:
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         the Cortex-M0 NMI (Non-Maskable Interrupt) exception vector.  
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1238              		.loc 1 1020 0
 1239              		.cfi_startproc
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 1240              		.loc 1 1021 0
 1241 0000 034B     		ldr	r3, .L100
 1242 0002 1968     		ldr	r1, [r3]
 1243 0004 8022     		mov	r2, #128
 1244 0006 1203     		lsl	r2, r2, #12
 1245 0008 0A43     		orr	r2, r1
 1246 000a 1A60     		str	r2, [r3]
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1247              		.loc 1 1022 0
 1248              		@ sp needed
 1249 000c 7047     		bx	lr
 1250              	.L101:
 1251 000e C046     		.align	2
 1252              	.L100:
 1253 0010 00100240 		.word	1073876992
 1254              		.cfi_endproc
 1255              	.LFE38:
 1257              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1258              		.align	2
 1259              		.global	HAL_RCC_DisableCSS
 1260              		.code	16
 1261              		.thumb_func
 1263              	HAL_RCC_DisableCSS:
 1264              	.LFB39:
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1265              		.loc 1 1029 0
 1266              		.cfi_startproc
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_CSSON) ;
 1267              		.loc 1 1030 0
 1268 0000 024B     		ldr	r3, .L103
 1269 0002 1968     		ldr	r1, [r3]
 1270 0004 024A     		ldr	r2, .L103+4
 1271 0006 0A40     		and	r2, r1
ARM GAS  /tmp/ccNk2H3C.s 			page 42


 1272 0008 1A60     		str	r2, [r3]
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1273              		.loc 1 1031 0
 1274              		@ sp needed
 1275 000a 7047     		bx	lr
 1276              	.L104:
 1277              		.align	2
 1278              	.L103:
 1279 000c 00100240 		.word	1073876992
 1280 0010 FFFFF7FF 		.word	-524289
 1281              		.cfi_endproc
 1282              	.LFE39:
 1284              		.global	__aeabi_uidiv
 1285              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1286              		.align	2
 1287              		.global	HAL_RCC_GetSysClockFreq
 1288              		.code	16
 1289              		.thumb_func
 1291              	HAL_RCC_GetSysClockFreq:
 1292              	.LFB40:
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         constant and the selected clock source:
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or depending on STM32F0xxxx devices either a value based
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           on HSI_VALUE divided by 2 or HSI_VALUE divided by PREDIV factor(*) multiplied by the 
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           PLL factor.
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *               in voltage and temperature.
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f0xx_hal_conf.h file (default value
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                have wrong result.
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *                  
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         value for HSE crystal.
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *           
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval SYSCLK frequency
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1293              		.loc 1 1065 0
 1294              		.cfi_startproc
 1295 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccNk2H3C.s 			page 43


 1296              	.LCFI5:
 1297              		.cfi_def_cfa_offset 8
 1298              		.cfi_offset 4, -8
 1299              		.cfi_offset 14, -4
 1300 0002 88B0     		sub	sp, sp, #32
 1301              	.LCFI6:
 1302              		.cfi_def_cfa_offset 40
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 1303              		.loc 1 1066 0
 1304 0004 1E4C     		ldr	r4, .L113
 1305 0006 04A8     		add	r0, sp, #16
 1306 0008 211C     		mov	r1, r4
 1307 000a 1022     		mov	r2, #16
 1308 000c FFF7FEFF 		bl	memcpy
 1309              	.LVL110:
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                          10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 1310              		.loc 1 1068 0
 1311 0010 211C     		mov	r1, r4
 1312 0012 1031     		add	r1, r1, #16
 1313 0014 6846     		mov	r0, sp
 1314 0016 1022     		mov	r2, #16
 1315 0018 FFF7FEFF 		bl	memcpy
 1316              	.LVL111:
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                                            9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1317              		.loc 1 1074 0
 1318 001c 194B     		ldr	r3, .L113+4
 1319 001e 5B68     		ldr	r3, [r3, #4]
 1320              	.LVL112:
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1321              		.loc 1 1077 0
 1322 0020 0C22     		mov	r2, #12
 1323 0022 1A40     		and	r2, r3
 1324 0024 082A     		cmp	r2, #8
 1325 0026 03D0     		beq	.L107
 1326 0028 0C2A     		cmp	r2, #12
 1327 002a 25D0     		beq	.L112
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1328              		.loc 1 1081 0
 1329 002c 1648     		ldr	r0, .L113+8
 1330 002e 24E0     		b	.L108
 1331              	.L107:
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER
ARM GAS  /tmp/ccNk2H3C.s 			page 44


 1332              		.loc 1 1086 0
 1333 0030 9A02     		lsl	r2, r3, #10
 1334 0032 120F     		lsr	r2, r2, #28
 1335 0034 04A9     		add	r1, sp, #16
 1336 0036 8C5C     		ldrb	r4, [r1, r2]
 1337              	.LVL113:
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BIT
 1338              		.loc 1 1087 0
 1339 0038 124A     		ldr	r2, .L113+4
 1340 003a D26A     		ldr	r2, [r2, #44]
 1341 003c 0F21     		mov	r1, #15
 1342 003e 0A40     		and	r2, r1
 1343 0040 6846     		mov	r0, sp
 1344 0042 815C     		ldrb	r1, [r0, r2]
 1345              	.LVL114:
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 1346              		.loc 1 1088 0
 1347 0044 C022     		mov	r2, #192
 1348 0046 5202     		lsl	r2, r2, #9
 1349 0048 1340     		and	r3, r2
 1350              	.LVL115:
 1351 004a 8022     		mov	r2, #128
 1352 004c 5202     		lsl	r2, r2, #9
 1353 004e 9342     		cmp	r3, r2
 1354 0050 04D1     		bne	.L109
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 1355              		.loc 1 1091 0
 1356 0052 0D48     		ldr	r0, .L113+8
 1357 0054 FFF7FEFF 		bl	__aeabi_uidiv
 1358              	.LVL116:
 1359 0058 6043     		mul	r0, r4
 1360              	.LVL117:
 1361 005a 0EE0     		b	.L108
 1362              	.LVL118:
 1363              	.L109:
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI48_PREDIV)
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSI48)
 1364              		.loc 1 1094 0
 1365 005c C022     		mov	r2, #192
 1366 005e 5202     		lsl	r2, r2, #9
 1367 0060 9342     		cmp	r3, r2
 1368 0062 04D1     		bne	.L111
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI48 used as PLL clock source : PLLCLK = HSI48/PREDIV * PLLMUL */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSI48_VALUE / prediv) * pllmul;
 1369              		.loc 1 1097 0
 1370 0064 0948     		ldr	r0, .L113+12
 1371 0066 FFF7FEFF 		bl	__aeabi_uidiv
 1372              	.LVL119:
 1373 006a 6043     		mul	r0, r4
 1374              	.LVL120:
 1375 006c 05E0     		b	.L108
 1376              	.LVL121:
 1377              	.L111:
ARM GAS  /tmp/ccNk2H3C.s 			page 45


1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI48_PREDIV */
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       else
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       {
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) 
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (HSI_VALUE / prediv) * pllmul;
 1378              		.loc 1 1104 0
 1379 006e 0648     		ldr	r0, .L113+8
 1380 0070 FFF7FEFF 		bl	__aeabi_uidiv
 1381              	.LVL122:
 1382 0074 6043     		mul	r0, r4
 1383              	.LVL123:
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #else
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         pllclk = (uint32_t)((HSI_VALUE >> 1U) * pllmul);
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       }
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = pllclk;
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
 1384              		.loc 1 1111 0
 1385 0076 00E0     		b	.L108
 1386              	.LVL124:
 1387              	.L112:
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_CFGR_SWS_HSI48)
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI48:    /* HSI48 used as system clock source */
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI48_VALUE;
 1388              		.loc 1 1116 0
 1389 0078 0448     		ldr	r0, .L113+12
 1390              	.LVL125:
 1391              	.L108:
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_CFGR_SWS_HSI48 */
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     default: /* HSI used as system clock */
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     {
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       break;
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     }
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return sysclockfreq;
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1392              		.loc 1 1128 0
 1393 007a 08B0     		add	sp, sp, #32
 1394              		@ sp needed
 1395 007c 10BD     		pop	{r4, pc}
 1396              	.L114:
 1397 007e C046     		.align	2
 1398              	.L113:
 1399 0080 00000000 		.word	.LANCHOR0
 1400 0084 00100240 		.word	1073876992
 1401 0088 00127A00 		.word	8000000
 1402 008c 006CDC02 		.word	48000000
 1403              		.cfi_endproc
ARM GAS  /tmp/ccNk2H3C.s 			page 46


 1404              	.LFE40:
 1406              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1407              		.align	2
 1408              		.global	HAL_RCC_ClockConfig
 1409              		.code	16
 1410              		.thumb_func
 1412              	HAL_RCC_ClockConfig:
 1413              	.LFB36:
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1414              		.loc 1 726 0
 1415              		.cfi_startproc
 1416              	.LVL126:
 1417 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1418              	.LCFI7:
 1419              		.cfi_def_cfa_offset 24
 1420              		.cfi_offset 3, -24
 1421              		.cfi_offset 4, -20
 1422              		.cfi_offset 5, -16
 1423              		.cfi_offset 6, -12
 1424              		.cfi_offset 7, -8
 1425              		.cfi_offset 14, -4
 1426 0002 4F46     		mov	r7, r9
 1427 0004 4646     		mov	r6, r8
 1428 0006 C0B4     		push	{r6, r7}
 1429              	.LCFI8:
 1430              		.cfi_def_cfa_offset 32
 1431              		.cfi_offset 8, -32
 1432              		.cfi_offset 9, -28
 1433 0008 051C     		mov	r5, r0
 1434 000a 0C1C     		mov	r4, r1
 1435              	.LVL127:
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 1436              		.loc 1 739 0
 1437 000c 664B     		ldr	r3, .L153
 1438 000e 1B68     		ldr	r3, [r3]
 1439 0010 0122     		mov	r2, #1
 1440 0012 1340     		and	r3, r2
 1441 0014 8B42     		cmp	r3, r1
 1442 0016 09D2     		bcs	.L116
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1443              		.loc 1 742 0
 1444 0018 634B     		ldr	r3, .L153
 1445 001a 1968     		ldr	r1, [r3]
 1446              	.LVL128:
 1447 001c 9143     		bic	r1, r2
 1448 001e 2143     		orr	r1, r4
 1449 0020 1960     		str	r1, [r3]
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 1450              		.loc 1 746 0
 1451 0022 1B68     		ldr	r3, [r3]
 1452 0024 1A40     		and	r2, r3
 1453 0026 A242     		cmp	r2, r4
 1454 0028 00D0     		beq	.LCB1449
 1455 002a A5E0     		b	.L136	@long jump
 1456              	.LCB1449:
 1457              	.L116:
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
ARM GAS  /tmp/ccNk2H3C.s 			page 47


 1458              		.loc 1 753 0
 1459 002c 2968     		ldr	r1, [r5]
 1460 002e 8907     		lsl	r1, r1, #30
 1461 0030 06D5     		bpl	.L118
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1462              		.loc 1 756 0
 1463 0032 5E4B     		ldr	r3, .L153+4
 1464 0034 5A68     		ldr	r2, [r3, #4]
 1465 0036 F021     		mov	r1, #240
 1466 0038 8A43     		bic	r2, r1
 1467 003a A968     		ldr	r1, [r5, #8]
 1468 003c 0A43     		orr	r2, r1
 1469 003e 5A60     		str	r2, [r3, #4]
 1470              	.L118:
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1471              		.loc 1 760 0
 1472 0040 2A68     		ldr	r2, [r5]
 1473 0042 D207     		lsl	r2, r2, #31
 1474 0044 6FD5     		bpl	.L119
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1475              		.loc 1 765 0
 1476 0046 6B68     		ldr	r3, [r5, #4]
 1477 0048 012B     		cmp	r3, #1
 1478 004a 04D1     		bne	.L120
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1479              		.loc 1 768 0
 1480 004c 574A     		ldr	r2, .L153+4
 1481 004e 1268     		ldr	r2, [r2]
 1482 0050 9103     		lsl	r1, r2, #14
 1483 0052 13D4     		bmi	.L121
 1484 0054 92E0     		b	.L137
 1485              	.L120:
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1486              		.loc 1 774 0
 1487 0056 022B     		cmp	r3, #2
 1488 0058 04D1     		bne	.L122
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1489              		.loc 1 777 0
 1490 005a 544A     		ldr	r2, .L153+4
 1491 005c 1268     		ldr	r2, [r2]
 1492 005e 9101     		lsl	r1, r2, #6
 1493 0060 0CD4     		bmi	.L121
 1494 0062 8DE0     		b	.L138
 1495              	.L122:
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 1496              		.loc 1 784 0
 1497 0064 032B     		cmp	r3, #3
 1498 0066 04D1     		bne	.L123
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == RESET)
 1499              		.loc 1 787 0
 1500 0068 504A     		ldr	r2, .L153+4
 1501 006a 526B     		ldr	r2, [r2, #52]
 1502 006c D103     		lsl	r1, r2, #15
 1503 006e 05D4     		bmi	.L121
 1504 0070 88E0     		b	.L139
 1505              	.L123:
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
ARM GAS  /tmp/ccNk2H3C.s 			page 48


 1506              		.loc 1 797 0
 1507 0072 4E4A     		ldr	r2, .L153+4
 1508 0074 1268     		ldr	r2, [r2]
 1509 0076 9107     		lsl	r1, r2, #30
 1510 0078 00D4     		bmi	.LCB1515
 1511 007a 85E0     		b	.L140	@long jump
 1512              	.LCB1515:
 1513              	.L121:
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1514              		.loc 1 802 0
 1515 007c 4B4A     		ldr	r2, .L153+4
 1516 007e 5168     		ldr	r1, [r2, #4]
 1517 0080 0320     		mov	r0, #3
 1518              	.LVL129:
 1519 0082 8143     		bic	r1, r0
 1520 0084 0B43     		orr	r3, r1
 1521 0086 5360     		str	r3, [r2, #4]
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1522              		.loc 1 805 0
 1523 0088 FFF7FEFF 		bl	HAL_GetTick
 1524              	.LVL130:
 1525 008c 061C     		mov	r6, r0
 1526              	.LVL131:
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1527              		.loc 1 807 0
 1528 008e 6B68     		ldr	r3, [r5, #4]
 1529 0090 012B     		cmp	r3, #1
 1530 0092 11D1     		bne	.L146
 1531 0094 05E0     		b	.L124
 1532              	.LVL132:
 1533              	.L126:
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1534              		.loc 1 811 0
 1535 0096 FFF7FEFF 		bl	HAL_GetTick
 1536              	.LVL133:
 1537 009a 801B     		sub	r0, r0, r6
 1538 009c 4845     		cmp	r0, r9
 1539 009e 05D9     		bls	.L147
 1540 00a0 74E0     		b	.L141
 1541              	.LVL134:
 1542              	.L124:
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 1543              		.loc 1 809 0 discriminator 1
 1544 00a2 424A     		ldr	r2, .L153+4
 1545 00a4 9046     		mov	r8, r2
 1546 00a6 0C27     		mov	r7, #12
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1547              		.loc 1 811 0 discriminator 1
 1548 00a8 414B     		ldr	r3, .L153+8
 1549 00aa 9946     		mov	r9, r3
 1550              	.LVL135:
 1551              	.L147:
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 1552              		.loc 1 809 0 discriminator 1
 1553 00ac 4146     		mov	r1, r8
 1554 00ae 4B68     		ldr	r3, [r1, #4]
 1555 00b0 3B40     		and	r3, r7
ARM GAS  /tmp/ccNk2H3C.s 			page 49


 1556 00b2 042B     		cmp	r3, #4
 1557 00b4 EFD1     		bne	.L126
 1558 00b6 36E0     		b	.L119
 1559              	.LVL136:
 1560              	.L146:
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1561              		.loc 1 817 0
 1562 00b8 022B     		cmp	r3, #2
 1563 00ba 11D1     		bne	.L148
 1564 00bc 05E0     		b	.L127
 1565              	.LVL137:
 1566              	.L129:
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1567              		.loc 1 821 0
 1568 00be FFF7FEFF 		bl	HAL_GetTick
 1569              	.LVL138:
 1570 00c2 801B     		sub	r0, r0, r6
 1571 00c4 4845     		cmp	r0, r9
 1572 00c6 05D9     		bls	.L149
 1573 00c8 62E0     		b	.L142
 1574              	.LVL139:
 1575              	.L127:
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1576              		.loc 1 819 0 discriminator 1
 1577 00ca 384A     		ldr	r2, .L153+4
 1578 00cc 9046     		mov	r8, r2
 1579 00ce 0C27     		mov	r7, #12
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1580              		.loc 1 821 0 discriminator 1
 1581 00d0 374B     		ldr	r3, .L153+8
 1582 00d2 9946     		mov	r9, r3
 1583              	.LVL140:
 1584              	.L149:
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1585              		.loc 1 819 0 discriminator 1
 1586 00d4 4146     		mov	r1, r8
 1587 00d6 4B68     		ldr	r3, [r1, #4]
 1588 00d8 3B40     		and	r3, r7
 1589 00da 082B     		cmp	r3, #8
 1590 00dc EFD1     		bne	.L129
 1591 00de 22E0     		b	.L119
 1592              	.LVL141:
 1593              	.L148:
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI48)
 1594              		.loc 1 828 0
 1595 00e0 032B     		cmp	r3, #3
 1596 00e2 17D1     		bne	.L150
 1597 00e4 05E0     		b	.L130
 1598              	.LVL142:
 1599              	.L132:
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1600              		.loc 1 832 0
 1601 00e6 FFF7FEFF 		bl	HAL_GetTick
 1602              	.LVL143:
 1603 00ea 801B     		sub	r0, r0, r6
 1604 00ec 4845     		cmp	r0, r9
 1605 00ee 05D9     		bls	.L151
ARM GAS  /tmp/ccNk2H3C.s 			page 50


 1606 00f0 50E0     		b	.L143
 1607              	.LVL144:
 1608              	.L130:
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI48)
 1609              		.loc 1 830 0 discriminator 1
 1610 00f2 2E4A     		ldr	r2, .L153+4
 1611 00f4 9046     		mov	r8, r2
 1612 00f6 0C27     		mov	r7, #12
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1613              		.loc 1 832 0 discriminator 1
 1614 00f8 2D4B     		ldr	r3, .L153+8
 1615 00fa 9946     		mov	r9, r3
 1616              	.LVL145:
 1617              	.L151:
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI48)
 1618              		.loc 1 830 0 discriminator 1
 1619 00fc 4146     		mov	r1, r8
 1620 00fe 4B68     		ldr	r3, [r1, #4]
 1621 0100 3B40     		and	r3, r7
 1622 0102 0C2B     		cmp	r3, #12
 1623 0104 EFD1     		bne	.L132
 1624 0106 0EE0     		b	.L119
 1625              	.L133:
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1626              		.loc 1 843 0
 1627 0108 FFF7FEFF 		bl	HAL_GetTick
 1628              	.LVL146:
 1629 010c 801B     		sub	r0, r0, r6
 1630 010e 4845     		cmp	r0, r9
 1631 0110 05D9     		bls	.L152
 1632 0112 41E0     		b	.L144
 1633              	.LVL147:
 1634              	.L150:
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 1635              		.loc 1 841 0 discriminator 1
 1636 0114 254A     		ldr	r2, .L153+4
 1637 0116 9046     		mov	r8, r2
 1638 0118 0C27     		mov	r7, #12
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1639              		.loc 1 843 0 discriminator 1
 1640 011a 254B     		ldr	r3, .L153+8
 1641 011c 9946     		mov	r9, r3
 1642              	.LVL148:
 1643              	.L152:
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 1644              		.loc 1 841 0 discriminator 1
 1645 011e 4146     		mov	r1, r8
 1646 0120 4B68     		ldr	r3, [r1, #4]
 1647 0122 1F42     		tst	r7, r3
 1648 0124 F0D1     		bne	.L133
 1649              	.LVL149:
 1650              	.L119:
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 1651              		.loc 1 851 0
 1652 0126 204B     		ldr	r3, .L153
 1653 0128 1B68     		ldr	r3, [r3]
 1654 012a 0122     		mov	r2, #1
ARM GAS  /tmp/ccNk2H3C.s 			page 51


 1655 012c 1340     		and	r3, r2
 1656 012e A342     		cmp	r3, r4
 1657 0130 08D9     		bls	.L134
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1658              		.loc 1 854 0
 1659 0132 1D4B     		ldr	r3, .L153
 1660 0134 1968     		ldr	r1, [r3]
 1661 0136 9143     		bic	r1, r2
 1662 0138 2143     		orr	r1, r4
 1663 013a 1960     		str	r1, [r3]
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 1664              		.loc 1 858 0
 1665 013c 1B68     		ldr	r3, [r3]
 1666 013e 1A40     		and	r2, r3
 1667 0140 A242     		cmp	r2, r4
 1668 0142 2BD1     		bne	.L145
 1669              	.L134:
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1670              		.loc 1 865 0
 1671 0144 2A68     		ldr	r2, [r5]
 1672 0146 5207     		lsl	r2, r2, #29
 1673 0148 06D5     		bpl	.L135
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 1674              		.loc 1 868 0
 1675 014a 184B     		ldr	r3, .L153+4
 1676 014c 5968     		ldr	r1, [r3, #4]
 1677 014e 194A     		ldr	r2, .L153+12
 1678 0150 0A40     		and	r2, r1
 1679 0152 E968     		ldr	r1, [r5, #12]
 1680 0154 0A43     		orr	r2, r1
 1681 0156 5A60     		str	r2, [r3, #4]
 1682              	.L135:
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 1683              		.loc 1 872 0
 1684 0158 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1685              	.LVL150:
 1686 015c 134B     		ldr	r3, .L153+4
 1687 015e 5B68     		ldr	r3, [r3, #4]
 1688 0160 1B06     		lsl	r3, r3, #24
 1689 0162 1B0F     		lsr	r3, r3, #28
 1690 0164 144A     		ldr	r2, .L153+16
 1691 0166 D35C     		ldrb	r3, [r2, r3]
 1692 0168 D840     		lsr	r0, r0, r3
 1693 016a 144B     		ldr	r3, .L153+20
 1694 016c 1860     		str	r0, [r3]
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 1695              		.loc 1 875 0
 1696 016e 0020     		mov	r0, #0
 1697 0170 FFF7FEFF 		bl	HAL_InitTick
 1698              	.LVL151:
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return HAL_OK;
 1699              		.loc 1 877 0
 1700 0174 0020     		mov	r0, #0
 1701 0176 12E0     		b	.L117
 1702              	.LVL152:
 1703              	.L136:
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
ARM GAS  /tmp/ccNk2H3C.s 			page 52


 1704              		.loc 1 748 0
 1705 0178 0120     		mov	r0, #1
 1706              	.LVL153:
 1707 017a 10E0     		b	.L117
 1708              	.LVL154:
 1709              	.L137:
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1710              		.loc 1 770 0
 1711 017c 0120     		mov	r0, #1
 1712              	.LVL155:
 1713 017e 0EE0     		b	.L117
 1714              	.LVL156:
 1715              	.L138:
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1716              		.loc 1 779 0
 1717 0180 0120     		mov	r0, #1
 1718              	.LVL157:
 1719 0182 0CE0     		b	.L117
 1720              	.LVL158:
 1721              	.L139:
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1722              		.loc 1 789 0
 1723 0184 0120     		mov	r0, #1
 1724              	.LVL159:
 1725 0186 0AE0     		b	.L117
 1726              	.LVL160:
 1727              	.L140:
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****         return HAL_ERROR;
 1728              		.loc 1 799 0
 1729 0188 0120     		mov	r0, #1
 1730              	.LVL161:
 1731 018a 08E0     		b	.L117
 1732              	.LVL162:
 1733              	.L141:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1734              		.loc 1 813 0
 1735 018c 0320     		mov	r0, #3
 1736 018e 06E0     		b	.L117
 1737              	.L142:
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1738              		.loc 1 823 0
 1739 0190 0320     		mov	r0, #3
 1740 0192 04E0     		b	.L117
 1741              	.L143:
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1742              		.loc 1 834 0
 1743 0194 0320     		mov	r0, #3
 1744 0196 02E0     		b	.L117
 1745              	.L144:
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1746              		.loc 1 845 0
 1747 0198 0320     		mov	r0, #3
 1748 019a 00E0     		b	.L117
 1749              	.LVL163:
 1750              	.L145:
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****       return HAL_ERROR;
 1751              		.loc 1 860 0
ARM GAS  /tmp/ccNk2H3C.s 			page 53


 1752 019c 0120     		mov	r0, #1
 1753              	.L117:
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1754              		.loc 1 878 0
 1755              		@ sp needed
 1756              	.LVL164:
 1757              	.LVL165:
 1758 019e 0CBC     		pop	{r2, r3}
 1759 01a0 9046     		mov	r8, r2
 1760 01a2 9946     		mov	r9, r3
 1761 01a4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1762              	.L154:
 1763 01a6 C046     		.align	2
 1764              	.L153:
 1765 01a8 00200240 		.word	1073881088
 1766 01ac 00100240 		.word	1073876992
 1767 01b0 88130000 		.word	5000
 1768 01b4 FFF8FFFF 		.word	-1793
 1769 01b8 00000000 		.word	AHBPrescTable
 1770 01bc 00000000 		.word	SystemCoreClock
 1771              		.cfi_endproc
 1772              	.LFE36:
 1774              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1775              		.align	2
 1776              		.global	HAL_RCC_GetHCLKFreq
 1777              		.code	16
 1778              		.thumb_func
 1780              	HAL_RCC_GetHCLKFreq:
 1781              	.LFB41:
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * 
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         and updated within this function
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval HCLK frequency
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1782              		.loc 1 1140 0
 1783              		.cfi_startproc
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return SystemCoreClock;
 1784              		.loc 1 1141 0
 1785 0000 014B     		ldr	r3, .L156
 1786 0002 1868     		ldr	r0, [r3]
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1787              		.loc 1 1142 0
 1788              		@ sp needed
 1789 0004 7047     		bx	lr
 1790              	.L157:
 1791 0006 C046     		.align	2
 1792              	.L156:
 1793 0008 00000000 		.word	SystemCoreClock
 1794              		.cfi_endproc
 1795              	.LFE41:
ARM GAS  /tmp/ccNk2H3C.s 			page 54


 1797              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1798              		.align	2
 1799              		.global	HAL_RCC_GetPCLK1Freq
 1800              		.code	16
 1801              		.thumb_func
 1803              	HAL_RCC_GetPCLK1Freq:
 1804              	.LFB42:
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval PCLK1 frequency
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1805              		.loc 1 1151 0
 1806              		.cfi_startproc
 1807 0000 08B5     		push	{r3, lr}
 1808              	.LCFI9:
 1809              		.cfi_def_cfa_offset 8
 1810              		.cfi_offset 3, -8
 1811              		.cfi_offset 14, -4
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNU
 1812              		.loc 1 1153 0
 1813 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1814              	.LVL166:
 1815 0006 044B     		ldr	r3, .L159
 1816 0008 5B68     		ldr	r3, [r3, #4]
 1817 000a 5B05     		lsl	r3, r3, #21
 1818 000c 5B0F     		lsr	r3, r3, #29
 1819 000e 034A     		ldr	r2, .L159+4
 1820 0010 D35C     		ldrb	r3, [r2, r3]
 1821 0012 D840     		lsr	r0, r0, r3
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }    
 1822              		.loc 1 1154 0
 1823              		@ sp needed
 1824 0014 08BD     		pop	{r3, pc}
 1825              	.L160:
 1826 0016 C046     		.align	2
 1827              	.L159:
 1828 0018 00100240 		.word	1073876992
 1829 001c 00000000 		.word	APBPrescTable
 1830              		.cfi_endproc
 1831              	.LFE42:
 1833              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1834              		.align	2
 1835              		.global	HAL_RCC_GetOscConfig
 1836              		.code	16
 1837              		.thumb_func
 1839              	HAL_RCC_GetOscConfig:
 1840              	.LFB43:
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
ARM GAS  /tmp/ccNk2H3C.s 			page 55


1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * will be configured.
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 1841              		.loc 1 1164 0
 1842              		.cfi_startproc
 1843              	.LVL167:
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_HSI14;
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType |= RCC_OSCILLATORTYPE_HSI48;
 1844              		.loc 1 1172 0
 1845 0000 3F23     		mov	r3, #63
 1846 0002 0360     		str	r3, [r0]
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1847              		.loc 1 1177 0
 1848 0004 2F4B     		ldr	r3, .L176
 1849 0006 1B68     		ldr	r3, [r3]
 1850 0008 5A03     		lsl	r2, r3, #13
 1851 000a 02D5     		bpl	.L162
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1852              		.loc 1 1179 0
 1853 000c 0523     		mov	r3, #5
 1854 000e 4360     		str	r3, [r0, #4]
 1855 0010 08E0     		b	.L163
 1856              	.L162:
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 1857              		.loc 1 1181 0
 1858 0012 2C4B     		ldr	r3, .L176
 1859 0014 1B68     		ldr	r3, [r3]
 1860 0016 DA03     		lsl	r2, r3, #15
 1861 0018 02D5     		bpl	.L164
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 1862              		.loc 1 1183 0
 1863 001a 0123     		mov	r3, #1
 1864 001c 4360     		str	r3, [r0, #4]
 1865 001e 01E0     		b	.L163
 1866              	.L164:
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 1867              		.loc 1 1187 0
 1868 0020 0023     		mov	r3, #0
ARM GAS  /tmp/ccNk2H3C.s 			page 56


 1869 0022 4360     		str	r3, [r0, #4]
 1870              	.L163:
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 1871              		.loc 1 1191 0
 1872 0024 274B     		ldr	r3, .L176
 1873 0026 1B68     		ldr	r3, [r3]
 1874 0028 DA07     		lsl	r2, r3, #31
 1875 002a 02D5     		bpl	.L165
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1876              		.loc 1 1193 0
 1877 002c 0123     		mov	r3, #1
 1878 002e C360     		str	r3, [r0, #12]
 1879 0030 01E0     		b	.L166
 1880              	.L165:
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 1881              		.loc 1 1197 0
 1882 0032 0023     		mov	r3, #0
 1883 0034 C360     		str	r3, [r0, #12]
 1884              	.L166:
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR &RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_B
 1885              		.loc 1 1200 0
 1886 0036 234B     		ldr	r3, .L176
 1887 0038 1A68     		ldr	r2, [r3]
 1888 003a 1206     		lsl	r2, r2, #24
 1889 003c D20E     		lsr	r2, r2, #27
 1890 003e 0261     		str	r2, [r0, #16]
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1891              		.loc 1 1203 0
 1892 0040 1B6A     		ldr	r3, [r3, #32]
 1893 0042 5A07     		lsl	r2, r3, #29
 1894 0044 02D5     		bpl	.L167
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1895              		.loc 1 1205 0
 1896 0046 0523     		mov	r3, #5
 1897 0048 8360     		str	r3, [r0, #8]
 1898 004a 08E0     		b	.L168
 1899              	.L167:
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 1900              		.loc 1 1207 0
 1901 004c 1D4B     		ldr	r3, .L176
 1902 004e 1B6A     		ldr	r3, [r3, #32]
 1903 0050 DA07     		lsl	r2, r3, #31
 1904 0052 02D5     		bpl	.L169
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccNk2H3C.s 			page 57


1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 1905              		.loc 1 1209 0
 1906 0054 0123     		mov	r3, #1
 1907 0056 8360     		str	r3, [r0, #8]
 1908 0058 01E0     		b	.L168
 1909              	.L169:
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 1910              		.loc 1 1213 0
 1911 005a 0023     		mov	r3, #0
 1912 005c 8360     		str	r3, [r0, #8]
 1913              	.L168:
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 1914              		.loc 1 1217 0
 1915 005e 194B     		ldr	r3, .L176
 1916 0060 5B6A     		ldr	r3, [r3, #36]
 1917 0062 DA07     		lsl	r2, r3, #31
 1918 0064 02D5     		bpl	.L170
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1919              		.loc 1 1219 0
 1920 0066 0123     		mov	r3, #1
 1921 0068 C361     		str	r3, [r0, #28]
 1922 006a 01E0     		b	.L171
 1923              	.L170:
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 1924              		.loc 1 1223 0
 1925 006c 0023     		mov	r3, #0
 1926 006e C361     		str	r3, [r0, #28]
 1927              	.L171:
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI14 configuration -----------------------------------------------*/
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR2 & RCC_CR2_HSI14ON) == RCC_CR2_HSI14ON)
 1928              		.loc 1 1227 0
 1929 0070 144B     		ldr	r3, .L176
 1930 0072 5B6B     		ldr	r3, [r3, #52]
 1931 0074 DA07     		lsl	r2, r3, #31
 1932 0076 02D5     		bpl	.L172
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_ON;
 1933              		.loc 1 1229 0
 1934 0078 0123     		mov	r3, #1
 1935 007a 4361     		str	r3, [r0, #20]
 1936 007c 01E0     		b	.L173
 1937              	.L172:
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
ARM GAS  /tmp/ccNk2H3C.s 			page 58


1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->HSI14State = RCC_HSI_OFF;
 1938              		.loc 1 1233 0
 1939 007e 0023     		mov	r3, #0
 1940 0080 4361     		str	r3, [r0, #20]
 1941              	.L173:
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI14CalibrationValue = (uint32_t)((RCC->CR2 & RCC_CR2_HSI14TRIM) >> RCC_HSI14
 1942              		.loc 1 1236 0
 1943 0082 104B     		ldr	r3, .L176
 1944 0084 5A6B     		ldr	r2, [r3, #52]
 1945 0086 1206     		lsl	r2, r2, #24
 1946 0088 D20E     		lsr	r2, r2, #27
 1947 008a 8261     		str	r2, [r0, #24]
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #if defined(RCC_HSI48_SUPPORT)
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HSI48 configuration if any-----------------------------------------*/
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->HSI48State = __HAL_RCC_GET_HSI48_STATE();
 1948              		.loc 1 1240 0
 1949 008c 5A6B     		ldr	r2, [r3, #52]
 1950 008e D203     		lsl	r2, r2, #15
 1951 0090 D20F     		lsr	r2, r2, #31
 1952 0092 0262     		str	r2, [r0, #32]
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** #endif /* RCC_HSI48_SUPPORT */
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 1953              		.loc 1 1244 0
 1954 0094 1B68     		ldr	r3, [r3]
 1955 0096 DA01     		lsl	r2, r3, #7
 1956 0098 02D5     		bpl	.L174
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 1957              		.loc 1 1246 0
 1958 009a 0223     		mov	r3, #2
 1959 009c 4362     		str	r3, [r0, #36]
 1960 009e 01E0     		b	.L175
 1961              	.L174:
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   else
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 1962              		.loc 1 1250 0
 1963 00a0 0123     		mov	r3, #1
 1964 00a2 4362     		str	r3, [r0, #36]
 1965              	.L175:
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 1966              		.loc 1 1252 0
 1967 00a4 074B     		ldr	r3, .L176
 1968 00a6 5968     		ldr	r1, [r3, #4]
 1969 00a8 C022     		mov	r2, #192
 1970 00aa 5202     		lsl	r2, r2, #9
 1971 00ac 0A40     		and	r2, r1
 1972 00ae 8262     		str	r2, [r0, #40]
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 1973              		.loc 1 1253 0
ARM GAS  /tmp/ccNk2H3C.s 			page 59


 1974 00b0 5968     		ldr	r1, [r3, #4]
 1975 00b2 F022     		mov	r2, #240
 1976 00b4 9203     		lsl	r2, r2, #14
 1977 00b6 0A40     		and	r2, r1
 1978 00b8 C262     		str	r2, [r0, #44]
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
 1979              		.loc 1 1254 0
 1980 00ba DB6A     		ldr	r3, [r3, #44]
 1981 00bc 0F22     		mov	r2, #15
 1982 00be 1340     		and	r3, r2
 1983 00c0 0363     		str	r3, [r0, #48]
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 1984              		.loc 1 1255 0
 1985              		@ sp needed
 1986 00c2 7047     		bx	lr
 1987              	.L177:
 1988              		.align	2
 1989              	.L176:
 1990 00c4 00100240 		.word	1073876992
 1991              		.cfi_endproc
 1992              	.LFE43:
 1994              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 1995              		.align	2
 1996              		.global	HAL_RCC_GetClockConfig
 1997              		.code	16
 1998              		.thumb_func
 2000              	HAL_RCC_GetClockConfig:
 2001              	.LFB44:
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * RCC configuration registers.
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * contains the current clock configuration.
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2002              		.loc 1 1266 0
 2003              		.cfi_startproc
 2004              	.LVL168:
 2005 0000 10B5     		push	{r4, lr}
 2006              	.LCFI10:
 2007              		.cfi_def_cfa_offset 8
 2008              		.cfi_offset 4, -8
 2009              		.cfi_offset 14, -4
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check the parameters */
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1;
 2010              		.loc 1 1272 0
 2011 0002 0723     		mov	r3, #7
 2012 0004 0360     		str	r3, [r0]
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
ARM GAS  /tmp/ccNk2H3C.s 			page 60


1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2013              		.loc 1 1275 0
 2014 0006 0A4B     		ldr	r3, .L179
 2015 0008 5A68     		ldr	r2, [r3, #4]
 2016 000a 0324     		mov	r4, #3
 2017 000c 2240     		and	r2, r4
 2018 000e 4260     		str	r2, [r0, #4]
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2019              		.loc 1 1278 0
 2020 0010 5A68     		ldr	r2, [r3, #4]
 2021 0012 F024     		mov	r4, #240
 2022 0014 2240     		and	r2, r4
 2023 0016 8260     		str	r2, [r0, #8]
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE);   
 2024              		.loc 1 1281 0
 2025 0018 5A68     		ldr	r2, [r3, #4]
 2026 001a E023     		mov	r3, #224
 2027 001c DB00     		lsl	r3, r3, #3
 2028 001e 1340     		and	r3, r2
 2029 0020 C360     		str	r3, [r0, #12]
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 2030              		.loc 1 1283 0
 2031 0022 044B     		ldr	r3, .L179+4
 2032 0024 1B68     		ldr	r3, [r3]
 2033 0026 0122     		mov	r2, #1
 2034 0028 1340     		and	r3, r2
 2035 002a 0B60     		str	r3, [r1]
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2036              		.loc 1 1284 0
 2037              		@ sp needed
 2038 002c 10BD     		pop	{r4, pc}
 2039              	.L180:
 2040 002e C046     		.align	2
 2041              	.L179:
 2042 0030 00100240 		.word	1073876992
 2043 0034 00200240 		.word	1073881088
 2044              		.cfi_endproc
 2045              	.LFE44:
 2047              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2048              		.align	2
 2049              		.weak	HAL_RCC_CSSCallback
 2050              		.code	16
 2051              		.thumb_func
 2053              	HAL_RCC_CSSCallback:
 2054              	.LFB46:
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval None
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
ARM GAS  /tmp/ccNk2H3C.s 			page 61


1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   {
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   }
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** 
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** /**
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   * @retval none
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   */
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2055              		.loc 1 1309 0
 2056              		.cfi_startproc
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     */ 
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2057              		.loc 1 1313 0
 2058              		@ sp needed
 2059 0000 7047     		bx	lr
 2060              		.cfi_endproc
 2061              	.LFE46:
 2063 0002 C046     		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2064              		.align	2
 2065              		.global	HAL_RCC_NMI_IRQHandler
 2066              		.code	16
 2067              		.thumb_func
 2069              	HAL_RCC_NMI_IRQHandler:
 2070              	.LFB45:
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** {
 2071              		.loc 1 1292 0
 2072              		.cfi_startproc
 2073 0000 08B5     		push	{r3, lr}
 2074              	.LCFI11:
 2075              		.cfi_def_cfa_offset 8
 2076              		.cfi_offset 3, -8
 2077              		.cfi_offset 14, -4
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2078              		.loc 1 1294 0
 2079 0002 054B     		ldr	r3, .L184
 2080 0004 9B68     		ldr	r3, [r3, #8]
 2081 0006 1A06     		lsl	r2, r3, #24
 2082 0008 04D5     		bpl	.L182
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2083              		.loc 1 1297 0
 2084 000a FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2085              	.LVL169:
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2086              		.loc 1 1300 0
ARM GAS  /tmp/ccNk2H3C.s 			page 62


 2087 000e 8022     		mov	r2, #128
 2088 0010 024B     		ldr	r3, .L184+4
 2089 0012 1A70     		strb	r2, [r3]
 2090              	.L182:
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_rcc.c **** }
 2091              		.loc 1 1302 0
 2092              		@ sp needed
 2093 0014 08BD     		pop	{r3, pc}
 2094              	.L185:
 2095 0016 C046     		.align	2
 2096              	.L184:
 2097 0018 00100240 		.word	1073876992
 2098 001c 0A100240 		.word	1073877002
 2099              		.cfi_endproc
 2100              	.LFE45:
 2102              		.section	.rodata
 2103              		.align	2
 2104              		.set	.LANCHOR0,. + 0
 2105              	.LC0:
 2106 0000 02       		.byte	2
 2107 0001 03       		.byte	3
 2108 0002 04       		.byte	4
 2109 0003 05       		.byte	5
 2110 0004 06       		.byte	6
 2111 0005 07       		.byte	7
 2112 0006 08       		.byte	8
 2113 0007 09       		.byte	9
 2114 0008 0A       		.byte	10
 2115 0009 0B       		.byte	11
 2116 000a 0C       		.byte	12
 2117 000b 0D       		.byte	13
 2118 000c 0E       		.byte	14
 2119 000d 0F       		.byte	15
 2120 000e 10       		.byte	16
 2121 000f 10       		.byte	16
 2122              	.LC1:
 2123 0010 01       		.byte	1
 2124 0011 02       		.byte	2
 2125 0012 03       		.byte	3
 2126 0013 04       		.byte	4
 2127 0014 05       		.byte	5
 2128 0015 06       		.byte	6
 2129 0016 07       		.byte	7
 2130 0017 08       		.byte	8
 2131 0018 09       		.byte	9
 2132 0019 0A       		.byte	10
 2133 001a 0B       		.byte	11
 2134 001b 0C       		.byte	12
 2135 001c 0D       		.byte	13
 2136 001d 0E       		.byte	14
 2137 001e 0F       		.byte	15
 2138 001f 10       		.byte	16
 2139              		.text
 2140              	.Letext0:
 2141              		.file 2 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_defaul
 2142              		.file 3 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 2143              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
ARM GAS  /tmp/ccNk2H3C.s 			page 63


 2144              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 2145              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 2146              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 2147              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 2148              		.file 9 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 2149              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/ccNk2H3C.s 			page 64


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_rcc.c
     /tmp/ccNk2H3C.s:18     .text.HAL_RCC_DeInit:00000000 $t
     /tmp/ccNk2H3C.s:23     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
     /tmp/ccNk2H3C.s:68     .text.HAL_RCC_DeInit:00000034 $d
     /tmp/ccNk2H3C.s:78     .text.HAL_RCC_OscConfig:00000000 $t
     /tmp/ccNk2H3C.s:83     .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
     /tmp/ccNk2H3C.s:645    .text.HAL_RCC_OscConfig:000002f0 $d
     /tmp/ccNk2H3C.s:653    .text.HAL_RCC_OscConfig:00000304 $t
     /tmp/ccNk2H3C.s:1140   .text.HAL_RCC_OscConfig:0000056c $d
     /tmp/ccNk2H3C.s:1149   .text.HAL_RCC_MCOConfig:00000000 $t
     /tmp/ccNk2H3C.s:1154   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
     /tmp/ccNk2H3C.s:1225   .text.HAL_RCC_MCOConfig:0000004c $d
     /tmp/ccNk2H3C.s:1231   .text.HAL_RCC_EnableCSS:00000000 $t
     /tmp/ccNk2H3C.s:1236   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
     /tmp/ccNk2H3C.s:1253   .text.HAL_RCC_EnableCSS:00000010 $d
     /tmp/ccNk2H3C.s:1258   .text.HAL_RCC_DisableCSS:00000000 $t
     /tmp/ccNk2H3C.s:1263   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
     /tmp/ccNk2H3C.s:1279   .text.HAL_RCC_DisableCSS:0000000c $d
     /tmp/ccNk2H3C.s:1286   .text.HAL_RCC_GetSysClockFreq:00000000 $t
     /tmp/ccNk2H3C.s:1291   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
     /tmp/ccNk2H3C.s:1399   .text.HAL_RCC_GetSysClockFreq:00000080 $d
     /tmp/ccNk2H3C.s:1407   .text.HAL_RCC_ClockConfig:00000000 $t
     /tmp/ccNk2H3C.s:1412   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
     /tmp/ccNk2H3C.s:1765   .text.HAL_RCC_ClockConfig:000001a8 $d
     /tmp/ccNk2H3C.s:1775   .text.HAL_RCC_GetHCLKFreq:00000000 $t
     /tmp/ccNk2H3C.s:1780   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
     /tmp/ccNk2H3C.s:1793   .text.HAL_RCC_GetHCLKFreq:00000008 $d
     /tmp/ccNk2H3C.s:1798   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
     /tmp/ccNk2H3C.s:1803   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccNk2H3C.s:1828   .text.HAL_RCC_GetPCLK1Freq:00000018 $d
     /tmp/ccNk2H3C.s:1834   .text.HAL_RCC_GetOscConfig:00000000 $t
     /tmp/ccNk2H3C.s:1839   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
     /tmp/ccNk2H3C.s:1990   .text.HAL_RCC_GetOscConfig:000000c4 $d
     /tmp/ccNk2H3C.s:1995   .text.HAL_RCC_GetClockConfig:00000000 $t
     /tmp/ccNk2H3C.s:2000   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
     /tmp/ccNk2H3C.s:2042   .text.HAL_RCC_GetClockConfig:00000030 $d
     /tmp/ccNk2H3C.s:2048   .text.HAL_RCC_CSSCallback:00000000 $t
     /tmp/ccNk2H3C.s:2053   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
     /tmp/ccNk2H3C.s:2064   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
     /tmp/ccNk2H3C.s:2069   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
     /tmp/ccNk2H3C.s:2097   .text.HAL_RCC_NMI_IRQHandler:00000018 $d
     /tmp/ccNk2H3C.s:2103   .rodata:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_GPIO_Init
__aeabi_uidiv
memcpy
HAL_InitTick
AHBPrescTable
APBPrescTable
