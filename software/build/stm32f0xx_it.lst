ARM GAS  /tmp/ccnBQu9r.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32f0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	2
  19              		.global	NMI_Handler
  20              		.code	16
  21              		.thumb_func
  23              	NMI_Handler:
  24              	.LFB34:
  25              		.file 1 "Src/stm32f0xx_it.c"
   1:Src/stm32f0xx_it.c **** /**
   2:Src/stm32f0xx_it.c ****   ******************************************************************************
   3:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   4:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f0xx_it.c ****   ******************************************************************************
   6:Src/stm32f0xx_it.c ****   *
   7:Src/stm32f0xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Src/stm32f0xx_it.c ****   *
   9:Src/stm32f0xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f0xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f0xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f0xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f0xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f0xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f0xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f0xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f0xx_it.c ****   *
  20:Src/stm32f0xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f0xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f0xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f0xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f0xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f0xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f0xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f0xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f0xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f0xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f0xx_it.c ****   *
  31:Src/stm32f0xx_it.c ****   ******************************************************************************
  32:Src/stm32f0xx_it.c ****   */
  33:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /tmp/ccnBQu9r.s 			page 2


  34:Src/stm32f0xx_it.c **** #include "stm32f0xx_hal.h"
  35:Src/stm32f0xx_it.c **** #include "stm32f0xx.h"
  36:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  37:Src/stm32f0xx_it.c **** 
  38:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f0xx_it.c **** 
  40:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f0xx_it.c **** 
  42:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f0xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  44:Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim14;
  45:Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim15;
  46:Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim2;
  47:Src/stm32f0xx_it.c **** /*extern DMA_HandleTypeDef hdma_usart1_rx;
  48:Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  49:Src/stm32f0xx_it.c **** extern UART_HandleTypeDef huart1;
  50:Src/stm32f0xx_it.c **** extern UART_HandleTypeDef huart2;*/
  51:Src/stm32f0xx_it.c **** 
  52:Src/stm32f0xx_it.c **** /******************************************************************************/
  53:Src/stm32f0xx_it.c **** /*            Cortex-M0 Processor Interruption and Exception Handlers         */
  54:Src/stm32f0xx_it.c **** /******************************************************************************/
  55:Src/stm32f0xx_it.c **** 
  56:Src/stm32f0xx_it.c **** /**
  57:Src/stm32f0xx_it.c **** * @brief This function handles Non maskable interrupt.
  58:Src/stm32f0xx_it.c **** */
  59:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  60:Src/stm32f0xx_it.c **** {
  26              		.loc 1 60 0
  27              		.cfi_startproc
  61:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  62:Src/stm32f0xx_it.c **** 
  63:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  64:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  65:Src/stm32f0xx_it.c **** 
  66:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  67:Src/stm32f0xx_it.c **** }
  28              		.loc 1 67 0
  29              		@ sp needed
  30 0000 7047     		bx	lr
  31              		.cfi_endproc
  32              	.LFE34:
  34 0002 C046     		.section	.text.HardFault_Handler,"ax",%progbits
  35              		.align	2
  36              		.global	HardFault_Handler
  37              		.code	16
  38              		.thumb_func
  40              	HardFault_Handler:
  41              	.LFB35:
  68:Src/stm32f0xx_it.c **** 
  69:Src/stm32f0xx_it.c **** /**
  70:Src/stm32f0xx_it.c **** * @brief This function handles Hard fault interrupt.
  71:Src/stm32f0xx_it.c **** */
  72:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  73:Src/stm32f0xx_it.c **** {
  42              		.loc 1 73 0
  43              		.cfi_startproc
  44              	.L3:
ARM GAS  /tmp/ccnBQu9r.s 			page 3


  45 0000 FEE7     		b	.L3
  46              		.cfi_endproc
  47              	.LFE35:
  49 0002 C046     		.section	.text.SVC_Handler,"ax",%progbits
  50              		.align	2
  51              		.global	SVC_Handler
  52              		.code	16
  53              		.thumb_func
  55              	SVC_Handler:
  56              	.LFB36:
  74:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  75:Src/stm32f0xx_it.c **** 
  76:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  77:Src/stm32f0xx_it.c ****   while (1)
  78:Src/stm32f0xx_it.c ****   {
  79:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  80:Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  81:Src/stm32f0xx_it.c ****   }
  82:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  83:Src/stm32f0xx_it.c **** 
  84:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  85:Src/stm32f0xx_it.c **** }
  86:Src/stm32f0xx_it.c **** 
  87:Src/stm32f0xx_it.c **** /**
  88:Src/stm32f0xx_it.c **** * @brief This function handles System service call via SWI instruction.
  89:Src/stm32f0xx_it.c **** */
  90:Src/stm32f0xx_it.c **** void SVC_Handler(void)
  91:Src/stm32f0xx_it.c **** {
  57              		.loc 1 91 0
  58              		.cfi_startproc
  92:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
  93:Src/stm32f0xx_it.c **** 
  94:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
  95:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
  96:Src/stm32f0xx_it.c **** 
  97:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
  98:Src/stm32f0xx_it.c **** }
  59              		.loc 1 98 0
  60              		@ sp needed
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE36:
  65 0002 C046     		.section	.text.PendSV_Handler,"ax",%progbits
  66              		.align	2
  67              		.global	PendSV_Handler
  68              		.code	16
  69              		.thumb_func
  71              	PendSV_Handler:
  72              	.LFB37:
  99:Src/stm32f0xx_it.c **** 
 100:Src/stm32f0xx_it.c **** /**
 101:Src/stm32f0xx_it.c **** * @brief This function handles Pendable request for system service.
 102:Src/stm32f0xx_it.c **** */
 103:Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 104:Src/stm32f0xx_it.c **** {
  73              		.loc 1 104 0
  74              		.cfi_startproc
ARM GAS  /tmp/ccnBQu9r.s 			page 4


 105:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 106:Src/stm32f0xx_it.c **** 
 107:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 108:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 109:Src/stm32f0xx_it.c **** 
 110:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 111:Src/stm32f0xx_it.c **** }
  75              		.loc 1 111 0
  76              		@ sp needed
  77 0000 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE37:
  81 0002 C046     		.section	.text.SysTick_Handler,"ax",%progbits
  82              		.align	2
  83              		.global	SysTick_Handler
  84              		.code	16
  85              		.thumb_func
  87              	SysTick_Handler:
  88              	.LFB38:
 112:Src/stm32f0xx_it.c **** 
 113:Src/stm32f0xx_it.c **** /**
 114:Src/stm32f0xx_it.c **** * @brief This function handles System tick timer.
 115:Src/stm32f0xx_it.c **** */
 116:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 117:Src/stm32f0xx_it.c **** {
  89              		.loc 1 117 0
  90              		.cfi_startproc
  91 0000 08B5     		push	{r3, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 3, -8
  95              		.cfi_offset 14, -4
 118:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 119:Src/stm32f0xx_it.c **** 
 120:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 121:Src/stm32f0xx_it.c ****   HAL_IncTick();
  96              		.loc 1 121 0
  97 0002 FFF7FEFF 		bl	HAL_IncTick
  98              	.LVL0:
 122:Src/stm32f0xx_it.c ****   HAL_SYSTICK_IRQHandler();
  99              		.loc 1 122 0
 100 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 101              	.LVL1:
 123:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 124:Src/stm32f0xx_it.c **** 
 125:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 126:Src/stm32f0xx_it.c **** }
 102              		.loc 1 126 0
 103              		@ sp needed
 104 000a 08BD     		pop	{r3, pc}
 105              		.cfi_endproc
 106              	.LFE38:
 108              		.section	.text.TIM14_IRQHandler,"ax",%progbits
 109              		.align	2
 110              		.global	TIM14_IRQHandler
 111              		.code	16
 112              		.thumb_func
ARM GAS  /tmp/ccnBQu9r.s 			page 5


 114              	TIM14_IRQHandler:
 115              	.LFB39:
 127:Src/stm32f0xx_it.c **** 
 128:Src/stm32f0xx_it.c **** /******************************************************************************/
 129:Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 130:Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 131:Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 132:Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 133:Src/stm32f0xx_it.c **** /******************************************************************************/
 134:Src/stm32f0xx_it.c **** 
 135:Src/stm32f0xx_it.c **** 
 136:Src/stm32f0xx_it.c **** void TIM14_IRQHandler(void)
 137:Src/stm32f0xx_it.c **** {
 116              		.loc 1 137 0
 117              		.cfi_startproc
 118 0000 08B5     		push	{r3, lr}
 119              	.LCFI1:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 3, -8
 122              		.cfi_offset 14, -4
 138:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 0 */
 139:Src/stm32f0xx_it.c **** 
 140:Src/stm32f0xx_it.c ****   /* USER CODE END TIM17_IRQn 0 */
 141:Src/stm32f0xx_it.c ****   HAL_TIM_IRQHandler(&htim14);
 123              		.loc 1 141 0
 124 0002 0248     		ldr	r0, .L8
 125 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 126              	.LVL2:
 142:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 1 */
 143:Src/stm32f0xx_it.c **** 
 144:Src/stm32f0xx_it.c ****   /* USER CODE END TIM17_IRQn 1 */
 145:Src/stm32f0xx_it.c **** }
 127              		.loc 1 145 0
 128              		@ sp needed
 129 0008 08BD     		pop	{r3, pc}
 130              	.L9:
 131 000a C046     		.align	2
 132              	.L8:
 133 000c 00000000 		.word	htim14
 134              		.cfi_endproc
 135              	.LFE39:
 137              		.section	.text.TIM15_IRQHandler,"ax",%progbits
 138              		.align	2
 139              		.global	TIM15_IRQHandler
 140              		.code	16
 141              		.thumb_func
 143              	TIM15_IRQHandler:
 144              	.LFB40:
 146:Src/stm32f0xx_it.c **** 
 147:Src/stm32f0xx_it.c **** void TIM15_IRQHandler(void)
 148:Src/stm32f0xx_it.c **** {
 145              		.loc 1 148 0
 146              		.cfi_startproc
 147 0000 08B5     		push	{r3, lr}
 148              	.LCFI2:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 3, -8
ARM GAS  /tmp/ccnBQu9r.s 			page 6


 151              		.cfi_offset 14, -4
 149:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 0 */
 150:Src/stm32f0xx_it.c **** 
 151:Src/stm32f0xx_it.c ****   /* USER CODE END TIM17_IRQn 0 */
 152:Src/stm32f0xx_it.c ****   HAL_TIM_IRQHandler(&htim15);
 152              		.loc 1 152 0
 153 0002 0248     		ldr	r0, .L11
 154 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 155              	.LVL3:
 153:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 1 */
 154:Src/stm32f0xx_it.c **** 
 155:Src/stm32f0xx_it.c ****   /* USER CODE END TIM17_IRQn 1 */
 156:Src/stm32f0xx_it.c **** }
 156              		.loc 1 156 0
 157              		@ sp needed
 158 0008 08BD     		pop	{r3, pc}
 159              	.L12:
 160 000a C046     		.align	2
 161              	.L11:
 162 000c 00000000 		.word	htim15
 163              		.cfi_endproc
 164              	.LFE40:
 166              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 167              		.align	2
 168              		.global	TIM2_IRQHandler
 169              		.code	16
 170              		.thumb_func
 172              	TIM2_IRQHandler:
 173              	.LFB41:
 157:Src/stm32f0xx_it.c **** 
 158:Src/stm32f0xx_it.c **** 
 159:Src/stm32f0xx_it.c **** void TIM2_IRQHandler(void)
 160:Src/stm32f0xx_it.c **** {
 174              		.loc 1 160 0
 175              		.cfi_startproc
 176 0000 08B5     		push	{r3, lr}
 177              	.LCFI3:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 3, -8
 180              		.cfi_offset 14, -4
 161:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 0 */
 162:Src/stm32f0xx_it.c **** 
 163:Src/stm32f0xx_it.c ****   /* USER CODE END TIM17_IRQn 0 */
 164:Src/stm32f0xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 181              		.loc 1 164 0
 182 0002 0248     		ldr	r0, .L14
 183 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 184              	.LVL4:
 165:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 1 */
 166:Src/stm32f0xx_it.c **** 
 167:Src/stm32f0xx_it.c ****   /* USER CODE END TIM17_IRQn 1 */
 168:Src/stm32f0xx_it.c **** }
 185              		.loc 1 168 0
 186              		@ sp needed
 187 0008 08BD     		pop	{r3, pc}
 188              	.L15:
 189 000a C046     		.align	2
ARM GAS  /tmp/ccnBQu9r.s 			page 7


 190              	.L14:
 191 000c 00000000 		.word	htim2
 192              		.cfi_endproc
 193              	.LFE41:
 195              		.section	.text.USB_IRQHandler,"ax",%progbits
 196              		.align	2
 197              		.global	USB_IRQHandler
 198              		.code	16
 199              		.thumb_func
 201              	USB_IRQHandler:
 202              	.LFB42:
 169:Src/stm32f0xx_it.c **** 
 170:Src/stm32f0xx_it.c **** 
 171:Src/stm32f0xx_it.c **** /**
 172:Src/stm32f0xx_it.c **** * @brief This function handles USB global Interrupt / USB wake-up interrupt through EXTI line 18.
 173:Src/stm32f0xx_it.c **** */
 174:Src/stm32f0xx_it.c **** void USB_IRQHandler(void)
 175:Src/stm32f0xx_it.c **** {
 203              		.loc 1 175 0
 204              		.cfi_startproc
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI4:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 176:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USB_IRQn 0 */
 177:Src/stm32f0xx_it.c **** 
 178:Src/stm32f0xx_it.c ****   /* USER CODE END USB_IRQn 0 */
 179:Src/stm32f0xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 210              		.loc 1 179 0
 211 0002 0248     		ldr	r0, .L17
 212 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 213              	.LVL5:
 180:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USB_IRQn 1 */
 181:Src/stm32f0xx_it.c **** 
 182:Src/stm32f0xx_it.c ****   /* USER CODE END USB_IRQn 1 */
 183:Src/stm32f0xx_it.c **** }
 214              		.loc 1 183 0
 215              		@ sp needed
 216 0008 08BD     		pop	{r3, pc}
 217              	.L18:
 218 000a C046     		.align	2
 219              	.L17:
 220 000c 00000000 		.word	hpcd_USB_FS
 221              		.cfi_endproc
 222              	.LFE42:
 224              		.text
 225              	.Letext0:
 226              		.file 2 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_defaul
 227              		.file 3 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 228              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 229              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 230              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 231              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pcd.h"
 232              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 233              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 234              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccnBQu9r.s 			page 8


ARM GAS  /tmp/ccnBQu9r.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
     /tmp/ccnBQu9r.s:18     .text.NMI_Handler:00000000 $t
     /tmp/ccnBQu9r.s:23     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/ccnBQu9r.s:35     .text.HardFault_Handler:00000000 $t
     /tmp/ccnBQu9r.s:40     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/ccnBQu9r.s:50     .text.SVC_Handler:00000000 $t
     /tmp/ccnBQu9r.s:55     .text.SVC_Handler:00000000 SVC_Handler
     /tmp/ccnBQu9r.s:66     .text.PendSV_Handler:00000000 $t
     /tmp/ccnBQu9r.s:71     .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/ccnBQu9r.s:82     .text.SysTick_Handler:00000000 $t
     /tmp/ccnBQu9r.s:87     .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccnBQu9r.s:109    .text.TIM14_IRQHandler:00000000 $t
     /tmp/ccnBQu9r.s:114    .text.TIM14_IRQHandler:00000000 TIM14_IRQHandler
     /tmp/ccnBQu9r.s:133    .text.TIM14_IRQHandler:0000000c $d
     /tmp/ccnBQu9r.s:138    .text.TIM15_IRQHandler:00000000 $t
     /tmp/ccnBQu9r.s:143    .text.TIM15_IRQHandler:00000000 TIM15_IRQHandler
     /tmp/ccnBQu9r.s:162    .text.TIM15_IRQHandler:0000000c $d
     /tmp/ccnBQu9r.s:167    .text.TIM2_IRQHandler:00000000 $t
     /tmp/ccnBQu9r.s:172    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
     /tmp/ccnBQu9r.s:191    .text.TIM2_IRQHandler:0000000c $d
     /tmp/ccnBQu9r.s:196    .text.USB_IRQHandler:00000000 $t
     /tmp/ccnBQu9r.s:201    .text.USB_IRQHandler:00000000 USB_IRQHandler
     /tmp/ccnBQu9r.s:220    .text.USB_IRQHandler:0000000c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_TIM_IRQHandler
htim14
htim15
htim2
HAL_PCD_IRQHandler
hpcd_USB_FS
