ARM GAS  /tmp/cchf0pJt.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32f0xx_hal_msp.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_MspInit,"ax",%progbits
  18              		.align	2
  19              		.global	HAL_MspInit
  20              		.code	16
  21              		.thumb_func
  23              	HAL_MspInit:
  24              	.LFB34:
  25              		.file 1 "Src/stm32f0xx_hal_msp.c"
   1:Src/stm32f0xx_hal_msp.c **** /**
   2:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   3:Src/stm32f0xx_hal_msp.c ****   * File Name          : stm32f0xx_hal_msp.c
   4:Src/stm32f0xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization
   5:Src/stm32f0xx_hal_msp.c ****   *                      and de-Initialization codes.
   6:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   7:Src/stm32f0xx_hal_msp.c ****   * This notice applies to any and all portions of this file
   8:Src/stm32f0xx_hal_msp.c ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/stm32f0xx_hal_msp.c ****   * USER CODE END. Other portions of this file, whether
  10:Src/stm32f0xx_hal_msp.c ****   * inserted by the user or by software development tools
  11:Src/stm32f0xx_hal_msp.c ****   * are owned by their respective copyright owners.
  12:Src/stm32f0xx_hal_msp.c ****   *
  13:Src/stm32f0xx_hal_msp.c ****   * Copyright (c) 2018 STMicroelectronics International N.V.
  14:Src/stm32f0xx_hal_msp.c ****   * All rights reserved.
  15:Src/stm32f0xx_hal_msp.c ****   *
  16:Src/stm32f0xx_hal_msp.c ****   * Redistribution and use in source and binary forms, with or without
  17:Src/stm32f0xx_hal_msp.c ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/stm32f0xx_hal_msp.c ****   *
  19:Src/stm32f0xx_hal_msp.c ****   * 1. Redistribution of source code must retain the above copyright notice,
  20:Src/stm32f0xx_hal_msp.c ****   *    this list of conditions and the following disclaimer.
  21:Src/stm32f0xx_hal_msp.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/stm32f0xx_hal_msp.c ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/stm32f0xx_hal_msp.c ****   *    and/or other materials provided with the distribution.
  24:Src/stm32f0xx_hal_msp.c ****   * 3. Neither the name of STMicroelectronics nor the names of other
  25:Src/stm32f0xx_hal_msp.c ****   *    contributors to this software may be used to endorse or promote products
  26:Src/stm32f0xx_hal_msp.c ****   *    derived from this software without specific written permission.
  27:Src/stm32f0xx_hal_msp.c ****   * 4. This software, including modifications and/or derivative works of this
  28:Src/stm32f0xx_hal_msp.c ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/stm32f0xx_hal_msp.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/stm32f0xx_hal_msp.c ****   * 5. Redistribution and use of this software other than as permitted under
  31:Src/stm32f0xx_hal_msp.c ****   *    this license is void and will automatically terminate your rights under
  32:Src/stm32f0xx_hal_msp.c ****   *    this license.
  33:Src/stm32f0xx_hal_msp.c ****   *
ARM GAS  /tmp/cchf0pJt.s 			page 2


  34:Src/stm32f0xx_hal_msp.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS"
  35:Src/stm32f0xx_hal_msp.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT
  36:Src/stm32f0xx_hal_msp.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  37:Src/stm32f0xx_hal_msp.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/stm32f0xx_hal_msp.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT
  39:Src/stm32f0xx_hal_msp.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/stm32f0xx_hal_msp.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/stm32f0xx_hal_msp.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  42:Src/stm32f0xx_hal_msp.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  43:Src/stm32f0xx_hal_msp.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  44:Src/stm32f0xx_hal_msp.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/stm32f0xx_hal_msp.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/stm32f0xx_hal_msp.c ****   *
  47:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
  48:Src/stm32f0xx_hal_msp.c ****   */
  49:Src/stm32f0xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  50:Src/stm32f0xx_hal_msp.c **** #include "stm32f0xx_hal.h"
  51:Src/stm32f0xx_hal_msp.c **** 
  52:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  53:Src/stm32f0xx_hal_msp.c **** 
  54:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  55:Src/stm32f0xx_hal_msp.c **** 
  56:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_adc;
  57:Src/stm32f0xx_hal_msp.c **** 
  58:Src/stm32f0xx_hal_msp.c **** extern void _Error_Handler(char *, int);
  59:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  60:Src/stm32f0xx_hal_msp.c **** 
  61:Src/stm32f0xx_hal_msp.c **** /* USER CODE END 0 */
  62:Src/stm32f0xx_hal_msp.c **** /**
  63:Src/stm32f0xx_hal_msp.c ****   * Initializes the Global MSP.
  64:Src/stm32f0xx_hal_msp.c ****   */
  65:Src/stm32f0xx_hal_msp.c **** void HAL_MspInit(void)
  66:Src/stm32f0xx_hal_msp.c **** {
  26              		.loc 1 66 0
  27              		.cfi_startproc
  28 0000 00B5     		push	{lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 4
  31              		.cfi_offset 14, -4
  32 0002 83B0     		sub	sp, sp, #12
  33              	.LCFI1:
  34              		.cfi_def_cfa_offset 16
  35              	.LBB2:
  67:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  68:Src/stm32f0xx_hal_msp.c **** 
  69:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  70:Src/stm32f0xx_hal_msp.c **** 
  71:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  36              		.loc 1 71 0
  37 0004 124B     		ldr	r3, .L2
  38 0006 9969     		ldr	r1, [r3, #24]
  39 0008 0122     		mov	r2, #1
  40 000a 1143     		orr	r1, r2
  41 000c 9961     		str	r1, [r3, #24]
  42 000e 9969     		ldr	r1, [r3, #24]
  43 0010 0A40     		and	r2, r1
  44 0012 0092     		str	r2, [sp]
ARM GAS  /tmp/cchf0pJt.s 			page 3


  45 0014 009A     		ldr	r2, [sp]
  46              	.LBE2:
  47              	.LBB3:
  72:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  48              		.loc 1 72 0
  49 0016 D969     		ldr	r1, [r3, #28]
  50 0018 8022     		mov	r2, #128
  51 001a 5205     		lsl	r2, r2, #21
  52 001c 1143     		orr	r1, r2
  53 001e D961     		str	r1, [r3, #28]
  54 0020 DB69     		ldr	r3, [r3, #28]
  55 0022 1A40     		and	r2, r3
  56 0024 0192     		str	r2, [sp, #4]
  57 0026 019B     		ldr	r3, [sp, #4]
  58              	.LBE3:
  73:Src/stm32f0xx_hal_msp.c **** 
  74:Src/stm32f0xx_hal_msp.c ****   /* System interrupt init*/
  75:Src/stm32f0xx_hal_msp.c ****   /* SVC_IRQn interrupt configuration */
  76:Src/stm32f0xx_hal_msp.c ****   HAL_NVIC_SetPriority(SVC_IRQn, 0, 0);
  59              		.loc 1 76 0
  60 0028 0520     		mov	r0, #5
  61 002a 4042     		neg	r0, r0
  62 002c 0021     		mov	r1, #0
  63 002e 0022     		mov	r2, #0
  64 0030 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  65              	.LVL0:
  77:Src/stm32f0xx_hal_msp.c ****   /* PendSV_IRQn interrupt configuration */
  78:Src/stm32f0xx_hal_msp.c ****   HAL_NVIC_SetPriority(PendSV_IRQn, 0, 0);
  66              		.loc 1 78 0
  67 0034 0220     		mov	r0, #2
  68 0036 4042     		neg	r0, r0
  69 0038 0021     		mov	r1, #0
  70 003a 0022     		mov	r2, #0
  71 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
  72              	.LVL1:
  79:Src/stm32f0xx_hal_msp.c ****   /* SysTick_IRQn interrupt configuration */
  80:Src/stm32f0xx_hal_msp.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
  73              		.loc 1 80 0
  74 0040 0120     		mov	r0, #1
  75 0042 4042     		neg	r0, r0
  76 0044 0021     		mov	r1, #0
  77 0046 0022     		mov	r2, #0
  78 0048 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  79              	.LVL2:
  81:Src/stm32f0xx_hal_msp.c **** 
  82:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
  83:Src/stm32f0xx_hal_msp.c **** 
  84:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
  85:Src/stm32f0xx_hal_msp.c **** }
  80              		.loc 1 85 0
  81 004c 03B0     		add	sp, sp, #12
  82              		@ sp needed
  83 004e 00BD     		pop	{pc}
  84              	.L3:
  85              		.align	2
  86              	.L2:
  87 0050 00100240 		.word	1073876992
ARM GAS  /tmp/cchf0pJt.s 			page 4


  88              		.cfi_endproc
  89              	.LFE34:
  91              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  92              		.align	2
  93              		.global	HAL_TIM_Base_MspInit
  94              		.code	16
  95              		.thumb_func
  97              	HAL_TIM_Base_MspInit:
  98              	.LFB35:
  86:Src/stm32f0xx_hal_msp.c **** 
  87:Src/stm32f0xx_hal_msp.c **** 
  88:Src/stm32f0xx_hal_msp.c **** 
  89:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
  90:Src/stm32f0xx_hal_msp.c **** {
  99              		.loc 1 90 0
 100              		.cfi_startproc
 101              	.LVL3:
 102 0000 10B5     		push	{r4, lr}
 103              	.LCFI2:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 4, -8
 106              		.cfi_offset 14, -4
 107 0002 86B0     		sub	sp, sp, #24
 108              	.LCFI3:
 109              		.cfi_def_cfa_offset 32
 110 0004 041C     		mov	r4, r0
  91:Src/stm32f0xx_hal_msp.c **** 
  92:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM17)
 111              		.loc 1 92 0
 112 0006 304B     		ldr	r3, .L10
 113 0008 0268     		ldr	r2, [r0]
 114 000a 9A42     		cmp	r2, r3
 115 000c 11D1     		bne	.L5
 116              	.LBB4:
  93:Src/stm32f0xx_hal_msp.c ****   {
  94:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspInit 0 */
  95:Src/stm32f0xx_hal_msp.c **** 
  96:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM17_MspInit 0 */
  97:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
  98:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM17_CLK_ENABLE();
 117              		.loc 1 98 0
 118 000e 2F4B     		ldr	r3, .L10+4
 119 0010 9969     		ldr	r1, [r3, #24]
 120 0012 8022     		mov	r2, #128
 121 0014 D202     		lsl	r2, r2, #11
 122 0016 1143     		orr	r1, r2
 123 0018 9961     		str	r1, [r3, #24]
 124 001a 9B69     		ldr	r3, [r3, #24]
 125 001c 1A40     		and	r2, r3
 126 001e 0192     		str	r2, [sp, #4]
 127 0020 019B     		ldr	r3, [sp, #4]
 128              	.LBE4:
  99:Src/stm32f0xx_hal_msp.c ****     /* TIM17 interrupt Init */
 100:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_SetPriority(TIM17_IRQn, 2, 0);
 129              		.loc 1 100 0
 130 0022 1620     		mov	r0, #22
 131              	.LVL4:
ARM GAS  /tmp/cchf0pJt.s 			page 5


 132 0024 0221     		mov	r1, #2
 133 0026 0022     		mov	r2, #0
 134 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 135              	.LVL5:
 101:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM17_IRQn);
 136              		.loc 1 101 0
 137 002c 1620     		mov	r0, #22
 138 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 139              	.LVL6:
 140              	.L5:
 102:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspInit 1 */
 103:Src/stm32f0xx_hal_msp.c **** 
 104:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM17_MspInit 1 */
 105:Src/stm32f0xx_hal_msp.c ****   }
 106:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM14)
 141              		.loc 1 106 0
 142 0032 274B     		ldr	r3, .L10+8
 143 0034 2268     		ldr	r2, [r4]
 144 0036 9A42     		cmp	r2, r3
 145 0038 11D1     		bne	.L6
 146              	.LBB5:
 107:Src/stm32f0xx_hal_msp.c ****   {
 108:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspInit 0 */
 109:Src/stm32f0xx_hal_msp.c **** 
 110:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM17_MspInit 0 */
 111:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 112:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM14_CLK_ENABLE();
 147              		.loc 1 112 0
 148 003a 244B     		ldr	r3, .L10+4
 149 003c D969     		ldr	r1, [r3, #28]
 150 003e 8022     		mov	r2, #128
 151 0040 5200     		lsl	r2, r2, #1
 152 0042 1143     		orr	r1, r2
 153 0044 D961     		str	r1, [r3, #28]
 154 0046 DB69     		ldr	r3, [r3, #28]
 155 0048 1A40     		and	r2, r3
 156 004a 0292     		str	r2, [sp, #8]
 157 004c 029B     		ldr	r3, [sp, #8]
 158              	.LBE5:
 113:Src/stm32f0xx_hal_msp.c ****     /* TIM17 interrupt Init */
 114:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_SetPriority(TIM14_IRQn, 2, 0);
 159              		.loc 1 114 0
 160 004e 1320     		mov	r0, #19
 161 0050 0221     		mov	r1, #2
 162 0052 0022     		mov	r2, #0
 163 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 164              	.LVL7:
 115:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM14_IRQn);
 165              		.loc 1 115 0
 166 0058 1320     		mov	r0, #19
 167 005a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 168              	.LVL8:
 169              	.L6:
 116:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspInit 1 */
 117:Src/stm32f0xx_hal_msp.c **** 
 118:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM17_MspInit 1 */
 119:Src/stm32f0xx_hal_msp.c ****   }
ARM GAS  /tmp/cchf0pJt.s 			page 6


 120:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM15)
 170              		.loc 1 120 0
 171 005e 1D4B     		ldr	r3, .L10+12
 172 0060 2268     		ldr	r2, [r4]
 173 0062 9A42     		cmp	r2, r3
 174 0064 11D1     		bne	.L7
 175              	.LBB6:
 121:Src/stm32f0xx_hal_msp.c ****   {
 122:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspInit 0 */
 123:Src/stm32f0xx_hal_msp.c **** 
 124:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM17_MspInit 0 */
 125:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 126:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM15_CLK_ENABLE();
 176              		.loc 1 126 0
 177 0066 194B     		ldr	r3, .L10+4
 178 0068 9969     		ldr	r1, [r3, #24]
 179 006a 8022     		mov	r2, #128
 180 006c 5202     		lsl	r2, r2, #9
 181 006e 1143     		orr	r1, r2
 182 0070 9961     		str	r1, [r3, #24]
 183 0072 9B69     		ldr	r3, [r3, #24]
 184 0074 1A40     		and	r2, r3
 185 0076 0392     		str	r2, [sp, #12]
 186 0078 039B     		ldr	r3, [sp, #12]
 187              	.LBE6:
 127:Src/stm32f0xx_hal_msp.c ****     /* TIM17 interrupt Init */
 128:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_SetPriority(TIM15_IRQn, 2, 0);
 188              		.loc 1 128 0
 189 007a 1420     		mov	r0, #20
 190 007c 0221     		mov	r1, #2
 191 007e 0022     		mov	r2, #0
 192 0080 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 193              	.LVL9:
 129:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM15_IRQn);
 194              		.loc 1 129 0
 195 0084 1420     		mov	r0, #20
 196 0086 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 197              	.LVL10:
 198              	.L7:
 130:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspInit 1 */
 131:Src/stm32f0xx_hal_msp.c **** 
 132:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM17_MspInit 1 */
 133:Src/stm32f0xx_hal_msp.c ****   }
 134:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM2)
 199              		.loc 1 134 0
 200 008a 8023     		mov	r3, #128
 201 008c DB05     		lsl	r3, r3, #23
 202 008e 2268     		ldr	r2, [r4]
 203 0090 9A42     		cmp	r2, r3
 204 0092 08D1     		bne	.L8
 205              	.LBB7:
 135:Src/stm32f0xx_hal_msp.c ****   {
 136:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM4_MspInit 0 */
 137:Src/stm32f0xx_hal_msp.c **** 
 138:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM4_MspInit 0 */
 139:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 140:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM2_CLK_ENABLE();
ARM GAS  /tmp/cchf0pJt.s 			page 7


 206              		.loc 1 140 0
 207 0094 0D4B     		ldr	r3, .L10+4
 208 0096 D969     		ldr	r1, [r3, #28]
 209 0098 0122     		mov	r2, #1
 210 009a 1143     		orr	r1, r2
 211 009c D961     		str	r1, [r3, #28]
 212 009e DB69     		ldr	r3, [r3, #28]
 213 00a0 1A40     		and	r2, r3
 214 00a2 0492     		str	r2, [sp, #16]
 215 00a4 049B     		ldr	r3, [sp, #16]
 216              	.L8:
 217              	.LBE7:
 141:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 142:Src/stm32f0xx_hal_msp.c **** 
 143:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM4_MspInit 1 */
 144:Src/stm32f0xx_hal_msp.c ****   }
 145:Src/stm32f0xx_hal_msp.c **** 
 146:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM1)
 218              		.loc 1 146 0
 219 00a6 2268     		ldr	r2, [r4]
 220 00a8 0B4B     		ldr	r3, .L10+16
 221 00aa 9A42     		cmp	r2, r3
 222 00ac 09D1     		bne	.L4
 223              	.LBB8:
 147:Src/stm32f0xx_hal_msp.c ****   {
 148:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM4_MspInit 0 */
 149:Src/stm32f0xx_hal_msp.c **** 
 150:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM4_MspInit 0 */
 151:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 152:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 224              		.loc 1 152 0
 225 00ae 074B     		ldr	r3, .L10+4
 226 00b0 9969     		ldr	r1, [r3, #24]
 227 00b2 8022     		mov	r2, #128
 228 00b4 1201     		lsl	r2, r2, #4
 229 00b6 1143     		orr	r1, r2
 230 00b8 9961     		str	r1, [r3, #24]
 231 00ba 9B69     		ldr	r3, [r3, #24]
 232 00bc 1A40     		and	r2, r3
 233 00be 0592     		str	r2, [sp, #20]
 234 00c0 059B     		ldr	r3, [sp, #20]
 235              	.L4:
 236              	.LBE8:
 153:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 154:Src/stm32f0xx_hal_msp.c **** 
 155:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM4_MspInit 1 */
 156:Src/stm32f0xx_hal_msp.c ****   }
 157:Src/stm32f0xx_hal_msp.c **** 
 158:Src/stm32f0xx_hal_msp.c **** }
 237              		.loc 1 158 0
 238 00c2 06B0     		add	sp, sp, #24
 239              		@ sp needed
 240              	.LVL11:
 241 00c4 10BD     		pop	{r4, pc}
 242              	.L11:
 243 00c6 C046     		.align	2
 244              	.L10:
ARM GAS  /tmp/cchf0pJt.s 			page 8


 245 00c8 00480140 		.word	1073825792
 246 00cc 00100240 		.word	1073876992
 247 00d0 00200040 		.word	1073750016
 248 00d4 00400140 		.word	1073823744
 249 00d8 002C0140 		.word	1073818624
 250              		.cfi_endproc
 251              	.LFE35:
 253              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 254              		.align	2
 255              		.global	HAL_TIM_Base_MspDeInit
 256              		.code	16
 257              		.thumb_func
 259              	HAL_TIM_Base_MspDeInit:
 260              	.LFB36:
 159:Src/stm32f0xx_hal_msp.c **** 
 160:Src/stm32f0xx_hal_msp.c **** 
 161:Src/stm32f0xx_hal_msp.c **** 
 162:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* htim_base)
 163:Src/stm32f0xx_hal_msp.c **** {
 261              		.loc 1 163 0
 262              		.cfi_startproc
 263              	.LVL12:
 264 0000 08B5     		push	{r3, lr}
 265              	.LCFI4:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 164:Src/stm32f0xx_hal_msp.c **** 
 165:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM17)
 269              		.loc 1 165 0
 270 0002 0268     		ldr	r2, [r0]
 271 0004 054B     		ldr	r3, .L14
 272 0006 9A42     		cmp	r2, r3
 273 0008 07D1     		bne	.L12
 166:Src/stm32f0xx_hal_msp.c ****   {
 167:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspDeInit 0 */
 168:Src/stm32f0xx_hal_msp.c **** 
 169:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM17_MspDeInit 0 */
 170:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 171:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM17_CLK_DISABLE();
 274              		.loc 1 171 0
 275 000a 054B     		ldr	r3, .L14+4
 276 000c 9969     		ldr	r1, [r3, #24]
 277 000e 054A     		ldr	r2, .L14+8
 278 0010 0A40     		and	r2, r1
 279 0012 9A61     		str	r2, [r3, #24]
 172:Src/stm32f0xx_hal_msp.c **** 
 173:Src/stm32f0xx_hal_msp.c ****     /* TIM17 interrupt DeInit */
 174:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(TIM17_IRQn);
 280              		.loc 1 174 0
 281 0014 1620     		mov	r0, #22
 282              	.LVL13:
 283 0016 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 284              	.LVL14:
 285              	.L12:
 175:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspDeInit 1 */
 176:Src/stm32f0xx_hal_msp.c **** 
ARM GAS  /tmp/cchf0pJt.s 			page 9


 177:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM17_MspDeInit 1 */
 178:Src/stm32f0xx_hal_msp.c ****   }
 179:Src/stm32f0xx_hal_msp.c **** 
 180:Src/stm32f0xx_hal_msp.c **** }
 286              		.loc 1 180 0
 287              		@ sp needed
 288 001a 08BD     		pop	{r3, pc}
 289              	.L15:
 290              		.align	2
 291              	.L14:
 292 001c 00480140 		.word	1073825792
 293 0020 00100240 		.word	1073876992
 294 0024 FFFFFBFF 		.word	-262145
 295              		.cfi_endproc
 296              	.LFE36:
 298              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 299              		.align	2
 300              		.global	HAL_TIM_MspPostInit
 301              		.code	16
 302              		.thumb_func
 304              	HAL_TIM_MspPostInit:
 305              	.LFB37:
 181:Src/stm32f0xx_hal_msp.c **** 
 182:Src/stm32f0xx_hal_msp.c **** 
 183:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
 184:Src/stm32f0xx_hal_msp.c **** {
 306              		.loc 1 184 0
 307              		.cfi_startproc
 308              	.LVL15:
 309 0000 00B5     		push	{lr}
 310              	.LCFI5:
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 14, -4
 313 0002 87B0     		sub	sp, sp, #28
 314              	.LCFI6:
 315              		.cfi_def_cfa_offset 32
 185:Src/stm32f0xx_hal_msp.c **** 
 186:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 187:Src/stm32f0xx_hal_msp.c ****   if(htim->Instance==TIM2)
 316              		.loc 1 187 0
 317 0004 0368     		ldr	r3, [r0]
 318 0006 8022     		mov	r2, #128
 319 0008 D205     		lsl	r2, r2, #23
 320 000a 9342     		cmp	r3, r2
 321 000c 13D1     		bne	.L17
 188:Src/stm32f0xx_hal_msp.c ****   {
 189:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM4_MspPostInit 0 */
 190:Src/stm32f0xx_hal_msp.c **** 
 191:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM4_MspPostInit 0 */
 192:Src/stm32f0xx_hal_msp.c **** 
 193:Src/stm32f0xx_hal_msp.c ****     /**TIM4 GPIO Configuration
 194:Src/stm32f0xx_hal_msp.c ****     PB6     ------> TIM4_CH1
 195:Src/stm32f0xx_hal_msp.c ****     */
 196:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_3;
 322              		.loc 1 196 0
 323 000e 0823     		mov	r3, #8
 324 0010 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cchf0pJt.s 			page 10


 197:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 325              		.loc 1 197 0
 326 0012 0223     		mov	r3, #2
 327 0014 0293     		str	r3, [sp, #8]
 198:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 328              		.loc 1 198 0
 329 0016 0322     		mov	r2, #3
 330 0018 0492     		str	r2, [sp, #16]
 199:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM2;
 331              		.loc 1 199 0
 332 001a 0593     		str	r3, [sp, #20]
 200:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 333              		.loc 1 200 0
 334 001c 0F48     		ldr	r0, .L19
 335              	.LVL16:
 336 001e 01A9     		add	r1, sp, #4
 337 0020 FFF7FEFF 		bl	HAL_GPIO_Init
 338              	.LVL17:
 201:Src/stm32f0xx_hal_msp.c **** 
 202:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_SetPriority(TIM2_IRQn, 2, 0);
 339              		.loc 1 202 0
 340 0024 0F20     		mov	r0, #15
 341 0026 0221     		mov	r1, #2
 342 0028 0022     		mov	r2, #0
 343 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 344              	.LVL18:
 203:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 345              		.loc 1 203 0
 346 002e 0F20     		mov	r0, #15
 347 0030 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 348              	.LVL19:
 349 0034 10E0     		b	.L16
 350              	.LVL20:
 351              	.L17:
 204:Src/stm32f0xx_hal_msp.c **** 
 205:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM4_MspPostInit 1 */
 206:Src/stm32f0xx_hal_msp.c **** 
 207:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM4_MspPostInit 1 */
 208:Src/stm32f0xx_hal_msp.c ****   }
 209:Src/stm32f0xx_hal_msp.c **** 
 210:Src/stm32f0xx_hal_msp.c ****   else if(htim->Instance==TIM1)
 352              		.loc 1 210 0
 353 0036 0A4A     		ldr	r2, .L19+4
 354 0038 9342     		cmp	r3, r2
 355 003a 0DD1     		bne	.L16
 211:Src/stm32f0xx_hal_msp.c ****   {
 212:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 213:Src/stm32f0xx_hal_msp.c **** 
 214:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 215:Src/stm32f0xx_hal_msp.c ****     /**TIM1 GPIO Configuration
 216:Src/stm32f0xx_hal_msp.c ****     PA8     ------> TIM1_CH1
 217:Src/stm32f0xx_hal_msp.c ****     */
 218:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_8;
 356              		.loc 1 218 0
 357 003c 8023     		mov	r3, #128
 358 003e 5B00     		lsl	r3, r3, #1
 359 0040 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cchf0pJt.s 			page 11


 219:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 360              		.loc 1 219 0
 361 0042 0223     		mov	r3, #2
 362 0044 0293     		str	r3, [sp, #8]
 220:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 363              		.loc 1 220 0
 364 0046 0393     		str	r3, [sp, #12]
 221:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 365              		.loc 1 221 0
 366 0048 0322     		mov	r2, #3
 367 004a 0492     		str	r2, [sp, #16]
 222:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 368              		.loc 1 222 0
 369 004c 0593     		str	r3, [sp, #20]
 223:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 370              		.loc 1 223 0
 371 004e 9020     		mov	r0, #144
 372              	.LVL21:
 373 0050 C005     		lsl	r0, r0, #23
 374 0052 01A9     		add	r1, sp, #4
 375 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 376              	.LVL22:
 377              	.L16:
 224:Src/stm32f0xx_hal_msp.c **** 
 225:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 226:Src/stm32f0xx_hal_msp.c **** 
 227:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 228:Src/stm32f0xx_hal_msp.c ****   }
 229:Src/stm32f0xx_hal_msp.c **** }
 378              		.loc 1 229 0
 379 0058 07B0     		add	sp, sp, #28
 380              		@ sp needed
 381 005a 00BD     		pop	{pc}
 382              	.L20:
 383              		.align	2
 384              	.L19:
 385 005c 00040048 		.word	1207960576
 386 0060 002C0140 		.word	1073818624
 387              		.cfi_endproc
 388              	.LFE37:
 390              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 391              		.align	2
 392              		.global	HAL_ADC_MspInit
 393              		.code	16
 394              		.thumb_func
 396              	HAL_ADC_MspInit:
 397              	.LFB38:
 230:Src/stm32f0xx_hal_msp.c **** 
 231:Src/stm32f0xx_hal_msp.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 232:Src/stm32f0xx_hal_msp.c **** {
 398              		.loc 1 232 0
 399              		.cfi_startproc
 400              	.LVL23:
 401 0000 30B5     		push	{r4, r5, lr}
 402              	.LCFI7:
 403              		.cfi_def_cfa_offset 12
 404              		.cfi_offset 4, -12
ARM GAS  /tmp/cchf0pJt.s 			page 12


 405              		.cfi_offset 5, -8
 406              		.cfi_offset 14, -4
 407 0002 87B0     		sub	sp, sp, #28
 408              	.LCFI8:
 409              		.cfi_def_cfa_offset 40
 410 0004 041C     		mov	r4, r0
 233:Src/stm32f0xx_hal_msp.c **** 
 234:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct;
 235:Src/stm32f0xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 411              		.loc 1 235 0
 412 0006 1B4B     		ldr	r3, .L24
 413 0008 0268     		ldr	r2, [r0]
 414 000a 9A42     		cmp	r2, r3
 415 000c 2FD1     		bne	.L21
 416              	.LBB9:
 236:Src/stm32f0xx_hal_msp.c ****   {
 237:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 238:Src/stm32f0xx_hal_msp.c **** 
 239:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 0 */
 240:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 241:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 417              		.loc 1 241 0
 418 000e 1A4B     		ldr	r3, .L24+4
 419 0010 9969     		ldr	r1, [r3, #24]
 420 0012 8022     		mov	r2, #128
 421 0014 9200     		lsl	r2, r2, #2
 422 0016 1143     		orr	r1, r2
 423 0018 9961     		str	r1, [r3, #24]
 424 001a 9B69     		ldr	r3, [r3, #24]
 425 001c 1A40     		and	r2, r3
 426 001e 0092     		str	r2, [sp]
 427 0020 009B     		ldr	r3, [sp]
 428              	.LBE9:
 242:Src/stm32f0xx_hal_msp.c **** 
 243:Src/stm32f0xx_hal_msp.c ****     /**ADC GPIO Configuration
 244:Src/stm32f0xx_hal_msp.c ****     PA0     ------> ADC_IN0
 245:Src/stm32f0xx_hal_msp.c ****     PA1     ------> ADC_IN1
 246:Src/stm32f0xx_hal_msp.c ****     PA2     ------> ADC_IN2
 247:Src/stm32f0xx_hal_msp.c ****     PA3     ------> ADC_IN3
 248:Src/stm32f0xx_hal_msp.c ****     */
 249:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2;
 429              		.loc 1 249 0
 430 0022 0723     		mov	r3, #7
 431 0024 0193     		str	r3, [sp, #4]
 250:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 432              		.loc 1 250 0
 433 0026 0323     		mov	r3, #3
 434 0028 0293     		str	r3, [sp, #8]
 251:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 435              		.loc 1 251 0
 436 002a 0025     		mov	r5, #0
 437 002c 0395     		str	r5, [sp, #12]
 252:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 438              		.loc 1 252 0
 439 002e 9020     		mov	r0, #144
 440              	.LVL24:
 441 0030 C005     		lsl	r0, r0, #23
ARM GAS  /tmp/cchf0pJt.s 			page 13


 442 0032 01A9     		add	r1, sp, #4
 443 0034 FFF7FEFF 		bl	HAL_GPIO_Init
 444              	.LVL25:
 253:Src/stm32f0xx_hal_msp.c **** 
 254:Src/stm32f0xx_hal_msp.c ****     /* ADC1 DMA Init */
 255:Src/stm32f0xx_hal_msp.c ****     /* ADC Init */
 256:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Instance = DMA1_Channel1;
 445              		.loc 1 256 0
 446 0038 1048     		ldr	r0, .L24+8
 447 003a 114B     		ldr	r3, .L24+12
 448 003c 0360     		str	r3, [r0]
 257:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 449              		.loc 1 257 0
 450 003e 4560     		str	r5, [r0, #4]
 258:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 451              		.loc 1 258 0
 452 0040 8560     		str	r5, [r0, #8]
 259:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 453              		.loc 1 259 0
 454 0042 8023     		mov	r3, #128
 455 0044 C360     		str	r3, [r0, #12]
 260:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 456              		.loc 1 260 0
 457 0046 5B00     		lsl	r3, r3, #1
 458 0048 0361     		str	r3, [r0, #16]
 261:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 459              		.loc 1 261 0
 460 004a 8023     		mov	r3, #128
 461 004c DB00     		lsl	r3, r3, #3
 462 004e 4361     		str	r3, [r0, #20]
 262:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Mode = DMA_CIRCULAR;
 463              		.loc 1 262 0
 464 0050 2023     		mov	r3, #32
 465 0052 8361     		str	r3, [r0, #24]
 263:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
 466              		.loc 1 263 0
 467 0054 C561     		str	r5, [r0, #28]
 264:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 468              		.loc 1 264 0
 469 0056 FFF7FEFF 		bl	HAL_DMA_Init
 470              	.LVL26:
 471 005a 0028     		cmp	r0, #0
 472 005c 04D0     		beq	.L23
 265:Src/stm32f0xx_hal_msp.c ****     {
 266:Src/stm32f0xx_hal_msp.c ****       _Error_Handler(__FILE__, __LINE__);
 473              		.loc 1 266 0
 474 005e 0948     		ldr	r0, .L24+16
 475 0060 8521     		mov	r1, #133
 476 0062 4900     		lsl	r1, r1, #1
 477 0064 FFF7FEFF 		bl	_Error_Handler
 478              	.LVL27:
 479              	.L23:
 267:Src/stm32f0xx_hal_msp.c ****     }
 268:Src/stm32f0xx_hal_msp.c **** 
 269:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc);
 480              		.loc 1 269 0
 481 0068 044B     		ldr	r3, .L24+8
ARM GAS  /tmp/cchf0pJt.s 			page 14


 482 006a E363     		str	r3, [r4, #60]
 483 006c 5C62     		str	r4, [r3, #36]
 484              	.L21:
 270:Src/stm32f0xx_hal_msp.c **** 
 271:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 272:Src/stm32f0xx_hal_msp.c **** 
 273:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 1 */
 274:Src/stm32f0xx_hal_msp.c ****   }
 275:Src/stm32f0xx_hal_msp.c **** 
 276:Src/stm32f0xx_hal_msp.c **** }
 485              		.loc 1 276 0
 486 006e 07B0     		add	sp, sp, #28
 487              		@ sp needed
 488              	.LVL28:
 489 0070 30BD     		pop	{r4, r5, pc}
 490              	.L25:
 491 0072 C046     		.align	2
 492              	.L24:
 493 0074 00240140 		.word	1073816576
 494 0078 00100240 		.word	1073876992
 495 007c 00000000 		.word	hdma_adc
 496 0080 08000240 		.word	1073872904
 497 0084 00000000 		.word	.LC1
 498              		.cfi_endproc
 499              	.LFE38:
 501              		.section	.rodata.str1.4,"aMS",%progbits,1
 502              		.align	2
 503              	.LC1:
 504 0000 5372632F 		.ascii	"Src/stm32f0xx_hal_msp.c\000"
 504      73746D33 
 504      32663078 
 504      785F6861 
 504      6C5F6D73 
 505              		.text
 506              	.Letext0:
 507              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 508              		.file 3 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_defaul
 509              		.file 4 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 510              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 511              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 512              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 513              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 514              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 515              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/cchf0pJt.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_msp.c
     /tmp/cchf0pJt.s:18     .text.HAL_MspInit:00000000 $t
     /tmp/cchf0pJt.s:23     .text.HAL_MspInit:00000000 HAL_MspInit
     /tmp/cchf0pJt.s:87     .text.HAL_MspInit:00000050 $d
     /tmp/cchf0pJt.s:92     .text.HAL_TIM_Base_MspInit:00000000 $t
     /tmp/cchf0pJt.s:97     .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
     /tmp/cchf0pJt.s:245    .text.HAL_TIM_Base_MspInit:000000c8 $d
     /tmp/cchf0pJt.s:254    .text.HAL_TIM_Base_MspDeInit:00000000 $t
     /tmp/cchf0pJt.s:259    .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
     /tmp/cchf0pJt.s:292    .text.HAL_TIM_Base_MspDeInit:0000001c $d
     /tmp/cchf0pJt.s:299    .text.HAL_TIM_MspPostInit:00000000 $t
     /tmp/cchf0pJt.s:304    .text.HAL_TIM_MspPostInit:00000000 HAL_TIM_MspPostInit
     /tmp/cchf0pJt.s:385    .text.HAL_TIM_MspPostInit:0000005c $d
     /tmp/cchf0pJt.s:391    .text.HAL_ADC_MspInit:00000000 $t
     /tmp/cchf0pJt.s:396    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
     /tmp/cchf0pJt.s:493    .text.HAL_ADC_MspInit:00000074 $d
     /tmp/cchf0pJt.s:502    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
HAL_GPIO_Init
HAL_DMA_Init
_Error_Handler
hdma_adc
