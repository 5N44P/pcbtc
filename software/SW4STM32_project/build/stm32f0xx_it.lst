ARM GAS  /tmp/ccF2Zv9Z.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32f0xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	2
  19              		.global	NMI_Handler
  20              		.code	16
  21              		.thumb_func
  23              	NMI_Handler:
  24              	.LFB34:
  25              		.file 1 "Src/stm32f0xx_it.c"
   1:Src/stm32f0xx_it.c **** /**
   2:Src/stm32f0xx_it.c ****   ******************************************************************************
   3:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   4:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f0xx_it.c ****   ******************************************************************************
   6:Src/stm32f0xx_it.c ****   *
   7:Src/stm32f0xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Src/stm32f0xx_it.c ****   *
   9:Src/stm32f0xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f0xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f0xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f0xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f0xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f0xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f0xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f0xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f0xx_it.c ****   *
  20:Src/stm32f0xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f0xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f0xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f0xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f0xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f0xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f0xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f0xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f0xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f0xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f0xx_it.c ****   *
  31:Src/stm32f0xx_it.c ****   ******************************************************************************
  32:Src/stm32f0xx_it.c ****   */
  33:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  /tmp/ccF2Zv9Z.s 			page 2


  34:Src/stm32f0xx_it.c **** #include "stm32f0xx_hal.h"
  35:Src/stm32f0xx_it.c **** #include "stm32f0xx.h"
  36:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  37:Src/stm32f0xx_it.c **** 
  38:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f0xx_it.c **** 
  40:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f0xx_it.c **** 
  42:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f0xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  44:Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim17;
  45:Src/stm32f0xx_it.c **** /*extern DMA_HandleTypeDef hdma_usart1_rx;
  46:Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  47:Src/stm32f0xx_it.c **** extern UART_HandleTypeDef huart1;
  48:Src/stm32f0xx_it.c **** extern UART_HandleTypeDef huart2;*/
  49:Src/stm32f0xx_it.c **** 
  50:Src/stm32f0xx_it.c **** /******************************************************************************/
  51:Src/stm32f0xx_it.c **** /*            Cortex-M0 Processor Interruption and Exception Handlers         */
  52:Src/stm32f0xx_it.c **** /******************************************************************************/
  53:Src/stm32f0xx_it.c **** 
  54:Src/stm32f0xx_it.c **** /**
  55:Src/stm32f0xx_it.c **** * @brief This function handles Non maskable interrupt.
  56:Src/stm32f0xx_it.c **** */
  57:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  58:Src/stm32f0xx_it.c **** {
  26              		.loc 1 58 0
  27              		.cfi_startproc
  59:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  60:Src/stm32f0xx_it.c **** 
  61:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  62:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  63:Src/stm32f0xx_it.c **** 
  64:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  65:Src/stm32f0xx_it.c **** }
  28              		.loc 1 65 0
  29              		@ sp needed
  30 0000 7047     		bx	lr
  31              		.cfi_endproc
  32              	.LFE34:
  34 0002 C046     		.section	.text.HardFault_Handler,"ax",%progbits
  35              		.align	2
  36              		.global	HardFault_Handler
  37              		.code	16
  38              		.thumb_func
  40              	HardFault_Handler:
  41              	.LFB35:
  66:Src/stm32f0xx_it.c **** 
  67:Src/stm32f0xx_it.c **** /**
  68:Src/stm32f0xx_it.c **** * @brief This function handles Hard fault interrupt.
  69:Src/stm32f0xx_it.c **** */
  70:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  71:Src/stm32f0xx_it.c **** {
  42              		.loc 1 71 0
  43              		.cfi_startproc
  44              	.L3:
  45 0000 FEE7     		b	.L3
  46              		.cfi_endproc
ARM GAS  /tmp/ccF2Zv9Z.s 			page 3


  47              	.LFE35:
  49 0002 C046     		.section	.text.SVC_Handler,"ax",%progbits
  50              		.align	2
  51              		.global	SVC_Handler
  52              		.code	16
  53              		.thumb_func
  55              	SVC_Handler:
  56              	.LFB36:
  72:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  73:Src/stm32f0xx_it.c **** 
  74:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  75:Src/stm32f0xx_it.c ****   while (1)
  76:Src/stm32f0xx_it.c ****   {
  77:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  78:Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  79:Src/stm32f0xx_it.c ****   }
  80:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  81:Src/stm32f0xx_it.c **** 
  82:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  83:Src/stm32f0xx_it.c **** }
  84:Src/stm32f0xx_it.c **** 
  85:Src/stm32f0xx_it.c **** /**
  86:Src/stm32f0xx_it.c **** * @brief This function handles System service call via SWI instruction.
  87:Src/stm32f0xx_it.c **** */
  88:Src/stm32f0xx_it.c **** void SVC_Handler(void)
  89:Src/stm32f0xx_it.c **** {
  57              		.loc 1 89 0
  58              		.cfi_startproc
  90:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
  91:Src/stm32f0xx_it.c **** 
  92:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
  93:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
  94:Src/stm32f0xx_it.c **** 
  95:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
  96:Src/stm32f0xx_it.c **** }
  59              		.loc 1 96 0
  60              		@ sp needed
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE36:
  65 0002 C046     		.section	.text.PendSV_Handler,"ax",%progbits
  66              		.align	2
  67              		.global	PendSV_Handler
  68              		.code	16
  69              		.thumb_func
  71              	PendSV_Handler:
  72              	.LFB37:
  97:Src/stm32f0xx_it.c **** 
  98:Src/stm32f0xx_it.c **** /**
  99:Src/stm32f0xx_it.c **** * @brief This function handles Pendable request for system service.
 100:Src/stm32f0xx_it.c **** */
 101:Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 102:Src/stm32f0xx_it.c **** {
  73              		.loc 1 102 0
  74              		.cfi_startproc
 103:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 104:Src/stm32f0xx_it.c **** 
ARM GAS  /tmp/ccF2Zv9Z.s 			page 4


 105:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 106:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 107:Src/stm32f0xx_it.c **** 
 108:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 109:Src/stm32f0xx_it.c **** }
  75              		.loc 1 109 0
  76              		@ sp needed
  77 0000 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE37:
  81 0002 C046     		.section	.text.SysTick_Handler,"ax",%progbits
  82              		.align	2
  83              		.global	SysTick_Handler
  84              		.code	16
  85              		.thumb_func
  87              	SysTick_Handler:
  88              	.LFB38:
 110:Src/stm32f0xx_it.c **** 
 111:Src/stm32f0xx_it.c **** /**
 112:Src/stm32f0xx_it.c **** * @brief This function handles System tick timer.
 113:Src/stm32f0xx_it.c **** */
 114:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 115:Src/stm32f0xx_it.c **** {
  89              		.loc 1 115 0
  90              		.cfi_startproc
  91 0000 08B5     		push	{r3, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 3, -8
  95              		.cfi_offset 14, -4
 116:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 117:Src/stm32f0xx_it.c **** 
 118:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 119:Src/stm32f0xx_it.c ****   HAL_IncTick();
  96              		.loc 1 119 0
  97 0002 FFF7FEFF 		bl	HAL_IncTick
  98              	.LVL0:
 120:Src/stm32f0xx_it.c ****   HAL_SYSTICK_IRQHandler();
  99              		.loc 1 120 0
 100 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 101              	.LVL1:
 121:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 122:Src/stm32f0xx_it.c **** 
 123:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 124:Src/stm32f0xx_it.c **** }
 102              		.loc 1 124 0
 103              		@ sp needed
 104 000a 08BD     		pop	{r3, pc}
 105              		.cfi_endproc
 106              	.LFE38:
 108              		.section	.text.TIM17_IRQHandler,"ax",%progbits
 109              		.align	2
 110              		.global	TIM17_IRQHandler
 111              		.code	16
 112              		.thumb_func
 114              	TIM17_IRQHandler:
 115              	.LFB39:
ARM GAS  /tmp/ccF2Zv9Z.s 			page 5


 125:Src/stm32f0xx_it.c **** 
 126:Src/stm32f0xx_it.c **** /******************************************************************************/
 127:Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 128:Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 129:Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 130:Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 131:Src/stm32f0xx_it.c **** /******************************************************************************/
 132:Src/stm32f0xx_it.c **** 
 133:Src/stm32f0xx_it.c **** 
 134:Src/stm32f0xx_it.c **** /**
 135:Src/stm32f0xx_it.c **** * @brief This function handles TIM17 global interrupt.
 136:Src/stm32f0xx_it.c **** */
 137:Src/stm32f0xx_it.c **** void TIM17_IRQHandler(void)
 138:Src/stm32f0xx_it.c **** {
 116              		.loc 1 138 0
 117              		.cfi_startproc
 118 0000 08B5     		push	{r3, lr}
 119              	.LCFI1:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 3, -8
 122              		.cfi_offset 14, -4
 139:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 0 */
 140:Src/stm32f0xx_it.c **** 
 141:Src/stm32f0xx_it.c ****   /* USER CODE END TIM17_IRQn 0 */
 142:Src/stm32f0xx_it.c ****   HAL_TIM_IRQHandler(&htim17);
 123              		.loc 1 142 0
 124 0002 0248     		ldr	r0, .L8
 125 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 126              	.LVL2:
 143:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 1 */
 144:Src/stm32f0xx_it.c **** 
 145:Src/stm32f0xx_it.c ****   /* USER CODE END TIM17_IRQn 1 */
 146:Src/stm32f0xx_it.c **** }
 127              		.loc 1 146 0
 128              		@ sp needed
 129 0008 08BD     		pop	{r3, pc}
 130              	.L9:
 131 000a C046     		.align	2
 132              	.L8:
 133 000c 00000000 		.word	htim17
 134              		.cfi_endproc
 135              	.LFE39:
 137              		.section	.text.USB_IRQHandler,"ax",%progbits
 138              		.align	2
 139              		.global	USB_IRQHandler
 140              		.code	16
 141              		.thumb_func
 143              	USB_IRQHandler:
 144              	.LFB40:
 147:Src/stm32f0xx_it.c **** 
 148:Src/stm32f0xx_it.c **** 
 149:Src/stm32f0xx_it.c **** /**
 150:Src/stm32f0xx_it.c **** * @brief This function handles USB global Interrupt / USB wake-up interrupt through EXTI line 18.
 151:Src/stm32f0xx_it.c **** */
 152:Src/stm32f0xx_it.c **** void USB_IRQHandler(void)
 153:Src/stm32f0xx_it.c **** {
 145              		.loc 1 153 0
ARM GAS  /tmp/ccF2Zv9Z.s 			page 6


 146              		.cfi_startproc
 147 0000 08B5     		push	{r3, lr}
 148              	.LCFI2:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 3, -8
 151              		.cfi_offset 14, -4
 154:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USB_IRQn 0 */
 155:Src/stm32f0xx_it.c **** 
 156:Src/stm32f0xx_it.c ****   /* USER CODE END USB_IRQn 0 */
 157:Src/stm32f0xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 152              		.loc 1 157 0
 153 0002 0248     		ldr	r0, .L11
 154 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 155              	.LVL3:
 158:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USB_IRQn 1 */
 159:Src/stm32f0xx_it.c **** 
 160:Src/stm32f0xx_it.c ****   /* USER CODE END USB_IRQn 1 */
 161:Src/stm32f0xx_it.c **** }
 156              		.loc 1 161 0
 157              		@ sp needed
 158 0008 08BD     		pop	{r3, pc}
 159              	.L12:
 160 000a C046     		.align	2
 161              	.L11:
 162 000c 00000000 		.word	hpcd_USB_FS
 163              		.cfi_endproc
 164              	.LFE40:
 166              		.text
 167              	.Letext0:
 168              		.file 2 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_defaul
 169              		.file 3 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 170              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 171              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 172              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 173              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pcd.h"
 174              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 175              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 176              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccF2Zv9Z.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
     /tmp/ccF2Zv9Z.s:18     .text.NMI_Handler:00000000 $t
     /tmp/ccF2Zv9Z.s:23     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/ccF2Zv9Z.s:35     .text.HardFault_Handler:00000000 $t
     /tmp/ccF2Zv9Z.s:40     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/ccF2Zv9Z.s:50     .text.SVC_Handler:00000000 $t
     /tmp/ccF2Zv9Z.s:55     .text.SVC_Handler:00000000 SVC_Handler
     /tmp/ccF2Zv9Z.s:66     .text.PendSV_Handler:00000000 $t
     /tmp/ccF2Zv9Z.s:71     .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/ccF2Zv9Z.s:82     .text.SysTick_Handler:00000000 $t
     /tmp/ccF2Zv9Z.s:87     .text.SysTick_Handler:00000000 SysTick_Handler
     /tmp/ccF2Zv9Z.s:109    .text.TIM17_IRQHandler:00000000 $t
     /tmp/ccF2Zv9Z.s:114    .text.TIM17_IRQHandler:00000000 TIM17_IRQHandler
     /tmp/ccF2Zv9Z.s:133    .text.TIM17_IRQHandler:0000000c $d
     /tmp/ccF2Zv9Z.s:138    .text.USB_IRQHandler:00000000 $t
     /tmp/ccF2Zv9Z.s:143    .text.USB_IRQHandler:00000000 USB_IRQHandler
     /tmp/ccF2Zv9Z.s:162    .text.USB_IRQHandler:0000000c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_TIM_IRQHandler
htim17
HAL_PCD_IRQHandler
hpcd_USB_FS
