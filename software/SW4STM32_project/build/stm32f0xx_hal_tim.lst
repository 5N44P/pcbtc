ARM GAS  /tmp/ccNBoJ9q.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"stm32f0xx_hal_tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.TIM_OC1_SetConfig,"ax",%progbits
  18              		.align	2
  19              		.code	16
  20              		.thumb_func
  22              	TIM_OC1_SetConfig:
  23              	.LFB128:
  24              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @file    stm32f0xx_hal_tim.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief   TIM HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          functionalities of the Timer (TIM) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Base Initialization
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Base Start
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Base Start Interruption
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Base Start DMA
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Output Compare/PWM Initialization
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Output Compare/PWM Channel Configuration
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Output Compare/PWM  Start
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Output Compare/PWM  Start Interruption
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Output Compare/PWM Start DMA
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Input Capture Initialization
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Input Capture Channel Configuration
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Input Capture Start
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Input Capture Start Interruption 
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Input Capture Start DMA
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time One Pulse Initialization
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time One Pulse Channel Configuration
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time One Pulse Start 
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Encoder Interface Initialization
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Encoder Interface Start
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Encoder Interface Start Interruption
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time Encoder Interface Start DMA
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Commutation Event configuration with Interruption and DMA
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time OCRef clear configuration
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *           + Time External Clock configuration
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   @verbatim
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                       ##### TIMER Generic features #####
ARM GAS  /tmp/ccNBoJ9q.s 			page 2


  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   [..] The Timer features include:
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        (#) 16-bit up, down, up/down auto-reload counter.
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        (#) 16-bit programmable prescaler allowing dividing (also on the fly) the 
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            counter clock frequency either by any factor between 1 and 65536.
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        (#) Up to 4 independent channels for:
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) Input Capture
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) Output Compare
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) PWM generation (Edge and Center-aligned Mode)
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) One-pulse mode output
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             ##### How to use this driver #####
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     [..]
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      (#) Initialize the TIM low level resources by implementing the following functions 
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****          depending from feature used :
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) Time Base : HAL_TIM_Base_MspInit()
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) Input Capture : HAL_TIM_IC_MspInit()
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) Output Compare : HAL_TIM_OC_MspInit()
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) PWM generation : HAL_TIM_PWM_MspInit()
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) One-pulse mode output : HAL_TIM_OnePulse_MspInit()
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) Encoder mode output : HAL_TIM_Encoder_MspInit()
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      (#) Initialize the TIM low level resources :
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         (##) Enable the TIM interface clock using __HAL_RCC_TIMx_CLK_ENABLE();
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         (##) TIM pins configuration
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             (+++) Enable the clock for the TIM GPIOs using the following function:
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****              __HAL_RCC_GPIOx_CLK_ENABLE();
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             (+++) Configure these TIM pins in Alternate function mode using HAL_GPIO_Init();
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      (#) The external Clock can be configured, if needed (the default clock is the 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****          internal clock from the APBx), using the following function:
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****          HAL_TIM_ConfigClockSource, the clock configuration should be done before 
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****          any start function.
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      (#) Configure the TIM in the desired functioning mode using one of the 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        Initialization function of this driver:
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        (++) HAL_TIM_Base_Init: to use the Timer to generate a simple time base
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        (++) HAL_TIM_OC_Init and HAL_TIM_OC_ConfigChannel: to use the Timer to generate an 
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             Output Compare signal.
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        (++) HAL_TIM_PWM_Init and HAL_TIM_PWM_ConfigChannel: to use the Timer to generate a 
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             PWM signal.
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        (++) HAL_TIM_IC_Init and HAL_TIM_IC_ConfigChannel: to use the Timer to measure an 
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             external signal.
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****          (++) HAL_TIM_OnePulse_Init and HAL_TIM_OnePulse_ConfigChannel: to use the Timer 
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****               in One Pulse Mode.
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        (++) HAL_TIM_Encoder_Init: to use the Timer Encoder Interface.
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      (#) Activate the TIM peripheral using one of the start functions depending from the feature us
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) Time Base : HAL_TIM_Base_Start(), HAL_TIM_Base_Start_DMA(), HAL_TIM_Base_Start_IT()
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) Input Capture :  HAL_TIM_IC_Start(), HAL_TIM_IC_Start_DMA(), HAL_TIM_IC_Start_IT()
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) Output Compare : HAL_TIM_OC_Start(), HAL_TIM_OC_Start_DMA(), HAL_TIM_OC_Start_IT()
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) PWM generation : HAL_TIM_PWM_Start(), HAL_TIM_PWM_Start_DMA(), HAL_TIM_PWM_Start_IT
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) One-pulse mode output : HAL_TIM_OnePulse_Start(), HAL_TIM_OnePulse_Start_IT()
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****            (++) Encoder mode output : HAL_TIM_Encoder_Start(), HAL_TIM_Encoder_Start_DMA(), HAL_TIM
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      (#) The DMA Burst is managed with the two following functions:
ARM GAS  /tmp/ccNBoJ9q.s 			page 3


  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****          HAL_TIM_DMABurst_WriteStart()
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****          HAL_TIM_DMABurst_ReadStart()
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   @endverbatim
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ******************************************************************************
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @attention
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * Redistribution and use in source and binary forms, with or without modification,
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * are permitted provided that the following conditions are met:
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *      this list of conditions and the following disclaimer.
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *      this list of conditions and the following disclaimer in the documentation
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *      and/or other materials provided with the distribution.
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *      may be used to endorse or promote products derived from this software
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *      without specific prior written permission.
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ******************************************************************************
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /* Includes ------------------------------------------------------------------*/
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** #include "stm32f0xx_hal.h"
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @addtogroup STM32F0xx_HAL_Driver
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @defgroup TIM TIM
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief TIM HAL module driver
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** #ifdef HAL_TIM_MODULE_ENABLED
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /* Private typedef -----------------------------------------------------------*/
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /* Private define ------------------------------------------------------------*/
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /* Private macro -------------------------------------------------------------*/
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /* Private variables ---------------------------------------------------------*/
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /* Private function prototypes -----------------------------------------------*/
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @defgroup TIM_Private_Functions TIM_Private_Functions
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
ARM GAS  /tmp/ccNBoJ9q.s 			page 4


 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config);
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config);
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config);
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_TI2_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                        uint32_t TIM_ICFilter);
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_TI3_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                        uint32_t TIM_ICFilter);
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_TI4_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                        uint32_t TIM_ICFilter);
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_ITRx_SetConfig(TIM_TypeDef* TIMx, uint16_t InputTriggerSource);
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_DMAPeriodElapsedCplt(DMA_HandleTypeDef *hdma);
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_DMATriggerCplt(DMA_HandleTypeDef *hdma);
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_SlaveTimer_SetConfig(TIM_HandleTypeDef *htim,
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                      TIM_SlaveConfigTypeDef * sSlaveConfig);
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @}
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /* Exported functions ---------------------------------------------------------*/
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions TIM Exported Functions
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group1 Time Base functions 
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *  @brief    Time Base functions 
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @verbatim 
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****               ##### Time Base functions #####
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   [..]
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     This section provides functions allowing to:
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Initialize and configure the TIM base.
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) De-initialize the TIM base.
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time Base.
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time Base.
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time Base and enable interrupt.
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time Base and disable interrupt.
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time Base and enable DMA transfer.
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time Base and disable DMA transfer.
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @endverbatim
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM Time base Unit according to the specified
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and create the associated handle.
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Base handle
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the TIM handle allocation */
ARM GAS  /tmp/ccNBoJ9q.s 			page 5


 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim == NULL)
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     HAL_TIM_Base_MspInit(htim);
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the TIM state */
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the Time Base configuration */
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Initialize the TIM state*/
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  DeInitializes the TIM Base peripheral 
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Base handle
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_DeInit(TIM_HandleTypeDef *htim)
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_Base_MspDeInit(htim);
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change TIM state */
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Release Lock */
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
ARM GAS  /tmp/ccNBoJ9q.s 			page 6


 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM Base MSP.
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_Base_MspInit(TIM_HandleTypeDef *htim)
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_Base_MspInit could be implemented in the user file
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  DeInitializes TIM Base MSP.
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef *htim)
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_Base_MspDeInit could be implemented in the user file
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM Base generation.
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start(TIM_HandleTypeDef *htim)
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the TIM state */
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Peripheral */
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change the TIM state*/
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
ARM GAS  /tmp/ccNBoJ9q.s 			page 7


 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM Base generation.
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop(TIM_HandleTypeDef *htim)
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the TIM state */
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change the TIM state*/
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM Base generation in interrupt mode.
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    /* Enable the TIM Update interrupt */
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    /* Enable the Peripheral */
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM Base generation in interrupt mode.
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop_IT(TIM_HandleTypeDef *htim)
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the TIM Update interrupt */
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 8


 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM Base generation in DMA mode.
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  pData : The source Buffer address.
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Length : The length of data to be transferred from memory to peripheral.
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start_DMA(TIM_HandleTypeDef *htim, uint32_t *pData, uint16_t Length)
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_INSTANCE(htim->Instance));
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((pData == 0 ) && (Length > 0))
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     else
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the DMA Period elapsed callback */
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the DMA error callback */
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the DMA channel */
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)pData, (uint32_t)&htim->Instance->ARR, 
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the TIM Update DMA request */
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_UPDATE);
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Peripheral */
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM Base generation in DMA mode.
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop_DMA(TIM_HandleTypeDef *htim)
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
ARM GAS  /tmp/ccNBoJ9q.s 			page 9


 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_INSTANCE(htim->Instance));
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the TIM Update DMA request */
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_UPDATE);
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change the htim state */
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @}
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group2 Time Output Compare functions 
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *  @brief    Time Output Compare functions 
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @verbatim 
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                   ##### Time Output Compare functions #####
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   [..]
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     This section provides functions allowing to:
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Initialize and configure the TIM Output Compare.
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) De-initialize the TIM Output Compare.
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time Output Compare.
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time Output Compare.
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time Output Compare and enable interrupt.
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time Output Compare and disable interrupt.
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time Output Compare and enable DMA transfer.
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time Output Compare and disable DMA transfer.
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @endverbatim
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare according to the specified
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and create the associated handle.
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Output Compare handle
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Init(TIM_HandleTypeDef* htim)
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the TIM handle allocation */
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim == NULL)
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
ARM GAS  /tmp/ccNBoJ9q.s 			page 10


 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     HAL_TIM_OC_MspInit(htim);
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the TIM state */
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Init the base time for the Output Compare */
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance,  &htim->Init);
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Initialize the TIM state*/
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral 
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Output Compare handle
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_DeInit(TIM_HandleTypeDef *htim)
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    htim->State = HAL_TIM_STATE_BUSY;
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_OC_MspDeInit(htim);
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change TIM state */
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Release Lock */
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare MSP.
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
ARM GAS  /tmp/ccNBoJ9q.s 			page 11


 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_OC_MspInit(TIM_HandleTypeDef *htim)
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_OC_MspInit could be implemented in the user file
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  DeInitializes TIM Output Compare MSP.
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_OC_MspDeInit(TIM_HandleTypeDef *htim)
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_OC_MspDeInit could be implemented in the user file
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation.
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Output Compare handle 
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channel to be enabled
 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected 
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Output compare channel */
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Enable the main output */
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Peripheral */
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 12


 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation.
 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channel to be disabled
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Output compare channel */
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the Main Ouput */
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation in interrupt mode.
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM OC handle
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channel to be enabled
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 13


 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Output compare channel */
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Enable the main output */
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Peripheral */
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation in interrupt mode.
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Output Compare handle
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channel to be disabled
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 14


 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Output compare channel */
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the Main Ouput */
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation in DMA mode.
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Output Compare handle
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channel to be enabled
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
ARM GAS  /tmp/ccNBoJ9q.s 			page 15


 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  pData : The source Buffer address.
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Length : The length of data to be transferred from memory to TIM peripheral
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pData, 
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(((uint32_t)pData == 0U ) && (Length > 0U))
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     else
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 DMA request */
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
ARM GAS  /tmp/ccNBoJ9q.s 			page 16


 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 DMA request */
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      /* Set the DMA Period elapsed callback */
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 DMA request */
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Output compare channel */
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Enable the main output */
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Peripheral */
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation in DMA mode.
ARM GAS  /tmp/ccNBoJ9q.s 			page 17


 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Output Compare handle
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channel to be disabled
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 DMA request */
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Output compare channel */
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the Main Ouput */
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 18


 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change the htim state */
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @}
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group3 Time PWM functions 
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *  @brief    Time PWM functions 
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @verbatim 
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                           ##### Time PWM functions #####
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   [..]
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     This section provides functions allowing to:
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Initialize and configure the TIM OPWM.
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) De-initialize the TIM PWM.
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time PWM.
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time PWM.
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time PWM and enable interrupt.
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time PWM and disable interrupt.
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time PWM and enable DMA transfer.
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time PWM and disable DMA transfer.
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @endverbatim
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM PWM Time Base according to the specified
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and create the associated handle.
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the TIM handle allocation */
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim == NULL)
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
ARM GAS  /tmp/ccNBoJ9q.s 			page 19


1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     HAL_TIM_PWM_MspInit(htim);
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the TIM state */
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Init the base time for the PWM */
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Initialize the TIM state*/
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral 
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_DeInit(TIM_HandleTypeDef *htim)
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_PWM_MspDeInit(htim);
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change TIM state */
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Release Lock */
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM PWM MSP.
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
ARM GAS  /tmp/ccNBoJ9q.s 			page 20


1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_PWM_MspInit could be implemented in the user file
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  DeInitializes TIM PWM MSP.
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef *htim)
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_PWM_MspDeInit could be implemented in the user file
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the PWM signal generation.
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be enabled
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Capture compare channel */
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Enable the main output */
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Peripheral */
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the PWM signal generation.
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be disabled
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
ARM GAS  /tmp/ccNBoJ9q.s 			page 21


1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Capture compare channel */
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the Main Ouput */
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change the htim state */
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the PWM signal generation in interrupt mode.
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channel to be enabled
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
ARM GAS  /tmp/ccNBoJ9q.s 			page 22


1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Capture compare channel */
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Enable the main output */
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Peripheral */
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the PWM signal generation in interrupt mode.
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be disabled
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop_IT (TIM_HandleTypeDef *htim, uint32_t Channel)
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
ARM GAS  /tmp/ccNBoJ9q.s 			page 23


1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Capture compare channel */
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the Main Ouput */
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM PWM signal generation in DMA mode.
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be enabled
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  pData : The source Buffer address.
ARM GAS  /tmp/ccNBoJ9q.s 			page 24


1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Length : The length of data to be transferred from memory to TIM peripheral
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pData,
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(((uint32_t)pData == 0U ) && (Length > 0U))
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     else
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 DMA request */
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 25


1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Output Capture/Compare 3 request */
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      /* Set the DMA Period elapsed callback */
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 DMA request */
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Capture compare channel */
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Enable the main output */
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Peripheral */
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM PWM signal generation in DMA mode.
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be disabled
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccNBoJ9q.s 			page 26


1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 DMA request */
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Capture compare channel */
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the Main Ouput */
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 27


1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change the htim state */
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @}
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group4 Time Input Capture functions 
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *  @brief    Time Input Capture functions 
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @verbatim 
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****               ##### Time Input Capture functions #####
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  [..]
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    This section provides functions allowing to:
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    (+) Initialize and configure the TIM Input Capture.
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    (+) De-initialize the TIM Input Capture.
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    (+) Start the Time Input Capture.
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    (+) Stop the Time Input Capture.
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    (+) Start the Time Input Capture and enable interrupt.
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    (+) Stop the Time Input Capture and disable interrupt.
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    (+) Start the Time Input Capture and enable DMA transfer.
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    (+) Stop the Time Input Capture and disable DMA transfer.
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @endverbatim
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture Time base according to the specified
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and create the associated handle.
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Input Capture handle
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Init(TIM_HandleTypeDef *htim)
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the TIM handle allocation */
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim == NULL)
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 28


1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     HAL_TIM_IC_MspInit(htim);
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the TIM state */
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Init the base time for the input capture */
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Initialize the TIM state*/
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral 
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Input Capture handle
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_DeInit(TIM_HandleTypeDef *htim)
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_IC_MspDeInit(htim);
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change TIM state */
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Release Lock */
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture MSP.
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_IC_MspInit(TIM_HandleTypeDef *htim)
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_IC_MspInit could be implemented in the user file
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
ARM GAS  /tmp/ccNBoJ9q.s 			page 29


1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  DeInitializes TIM Input Capture MSP.
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_IC_MspDeInit(TIM_HandleTypeDef *htim)
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_IC_MspDeInit could be implemented in the user file
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement.
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Input Capture handle
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be enabled
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start (TIM_HandleTypeDef *htim, uint32_t Channel)
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Input Capture channel */
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Peripheral */
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement.
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be disabled
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
ARM GAS  /tmp/ccNBoJ9q.s 			page 30


1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Input Capture channel */
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement in interrupt mode.
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Input Capture handle
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be enabled
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start_IT (TIM_HandleTypeDef *htim, uint32_t Channel)
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
1682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
1685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 31


1688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
1689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Input Capture channel */
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Peripheral */
1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
1696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
1698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement in interrupt mode.
1703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
1704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be disabled
1705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
1706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
1712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
1718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
1720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
1723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
1727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
1730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
1734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
1737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
1741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
1744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
ARM GAS  /tmp/ccNBoJ9q.s 			page 32


1745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
1748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Input Capture channel */
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
1758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement in DMA mode.
1763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Input Capture handle
1764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be enabled
1765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
1766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  pData : The destination Buffer address.
1771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Length : The length of data to be transferred from TIM peripheral to memory.
1772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
1774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pData, 
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
1779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
1781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
1783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
1785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((pData == 0U ) && (Length > 0U))
1787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
1789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     else
1791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
1793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
1797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
1799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
ARM GAS  /tmp/ccNBoJ9q.s 			page 33


1802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
1805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)pData
1808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
1811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
1815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
1818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
1821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)pData
1824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2  DMA request */
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
1827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
1831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMACaptureCplt;
1834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
1837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->CCR3, (uint32_t)pData
1840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3  DMA request */
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
1843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
1847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMACaptureCplt;
1850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
1853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->CCR4, (uint32_t)pData
1856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4  DMA request */
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
ARM GAS  /tmp/ccNBoJ9q.s 			page 34


1859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
1863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Input Capture channel */
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Peripheral */
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
1871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement in DMA mode.
1878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Input Capture handle
1879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be disabled
1880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
1881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
1886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
1887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
1892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
1894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
1896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
1899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
1903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
1906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
1910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3  DMA request */
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
1913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 35


1916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
1917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
1918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4  DMA request */
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
1920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
1921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
1924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
1925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Input Capture channel */
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change the htim state */
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
1935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
1937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
1939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @}
1941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
1942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group5 Time One Pulse functions 
1944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *  @brief    Time One Pulse functions 
1945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *
1946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @verbatim 
1947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
1948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         ##### Time One Pulse functions #####
1949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
1950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   [..]
1951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     This section provides functions allowing to:
1952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Initialize and configure the TIM One Pulse.
1953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) De-initialize the TIM One Pulse.
1954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time One Pulse.
1955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time One Pulse.
1956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time One Pulse and enable interrupt.
1957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time One Pulse and disable interrupt.
1958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time One Pulse and enable DMA transfer.
1959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time One Pulse and disable DMA transfer.
1960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @endverbatim
1962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
1963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
1964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
1965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse Time Base according to the specified
1966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and create the associated handle.
1967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM OnePulse handle
1968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  OnePulseMode : Select the One pulse mode.
1969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         This parameter can be one of the following values:
1970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_OPMODE_SINGLE: Only one pulse will be generated.
1971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_OPMODE_REPETITIVE: Repetitive pulses wil be generated.
1972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
ARM GAS  /tmp/ccNBoJ9q.s 			page 36


1973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
1974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Init(TIM_HandleTypeDef *htim, uint32_t OnePulseMode)
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
1976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the TIM handle allocation */
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim == NULL)
1978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
1980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
1983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
1985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
1986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_OPM_MODE(OnePulseMode));
1987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
1988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
1990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
1991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
1993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     HAL_TIM_OnePulse_MspInit(htim);
1996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
1997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
1998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the TIM state */
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
2000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Configure the Time base in the One Pulse Mode */
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
2003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the OPM Bit */
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->CR1 &= ~TIM_CR1_OPM;
2006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Configure the OPM Mode */
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->CR1 |= OnePulseMode;
2009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Initialize the TIM state*/
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
2012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  DeInitializes the TIM One Pulse 
2018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM One Pulse handle
2019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_DeInit(TIM_HandleTypeDef *htim)
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
2024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
2025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
ARM GAS  /tmp/ccNBoJ9q.s 			page 37


2030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_OnePulse_MspDeInit(htim);
2033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change TIM state */
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
2036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Release Lock */
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
2039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse MSP.
2045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
2046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
2047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_OnePulse_MspInit(TIM_HandleTypeDef *htim)
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
2052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_OnePulse_MspInit could be implemented in the user file
2055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  DeInitializes TIM One Pulse MSP.
2060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
2061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
2062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_OnePulse_MspDeInit(TIM_HandleTypeDef *htim)
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
2067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_OnePulse_MspDeInit could be implemented in the user file
2070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM One Pulse signal generation.
2075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM One Pulse handle
2076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  OutputChannel : TIM Channels to be enabled
2077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
2078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
2082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Start(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Capture compare and the Input Capture channels 
2085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2
2086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
ARM GAS  /tmp/ccNBoJ9q.s 			page 38


2087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output 
2088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     in all combinations, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be enabled together 
2089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     No need to enable the counter, it's enabled automatically by hardware 
2091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (the counter starts in response to a stimulus and generate a pulse */
2092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
2097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Enable the main output */
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
2100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
2103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM One Pulse signal generation.
2108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM One Pulse handle
2109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  OutputChannel : TIM Channels to be disable
2110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
2111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
2115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Stop(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Capture compare and the Input Capture channels 
2118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2)
2119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output 
2121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   in all combinations, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be disabled together */
2122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
2127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the Main Ouput */
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
2130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
2136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM One Pulse signal generation in interrupt mode.
2141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM One Pulse handle
2142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  OutputChannel : TIM Channels to be enabled
2143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccNBoJ9q.s 			page 39


2144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
2148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Start_IT(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Capture compare and the Input Capture channels 
2151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2
2152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output 
2154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     in all combinations, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be enabled together 
2155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     No need to enable the counter, it's enabled automatically by hardware 
2157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (the counter starts in response to a stimulus and generate a pulse */
2158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the TIM Capture/Compare 1 interrupt */
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
2161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the TIM Capture/Compare 2 interrupt */
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
2164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
2169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Enable the main output */
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
2172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
2175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM One Pulse signal generation in interrupt mode.
2180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM One Pulse handle
2181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  OutputChannel : TIM Channels to be enabled
2182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
2183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
2187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Stop_IT(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the TIM Capture/Compare 1 interrupt */
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
2191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the TIM Capture/Compare 2 interrupt */
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
2194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Capture compare and the Input Capture channels 
2196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2)
2197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output 
2199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   in all combinations, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be disabled together */
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
ARM GAS  /tmp/ccNBoJ9q.s 			page 40


2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
2204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the Main Ouput */
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
2207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    __HAL_TIM_DISABLE(htim);
2211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
2213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @}
2218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group6 Time Encoder functions 
2221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *  @brief    Time Encoder functions 
2222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *
2223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @verbatim 
2224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
2225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                           ##### Time Encoder functions #####
2226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
2227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   [..]
2228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     This section provides functions allowing to:
2229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Initialize and configure the TIM Encoder.
2230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) De-initialize the TIM Encoder.
2231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time Encoder.
2232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time Encoder.
2233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time Encoder and enable interrupt.
2234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time Encoder and disable interrupt.
2235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Start the Time Encoder and enable DMA transfer.
2236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (+) Stop the Time Encoder and disable DMA transfer.
2237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @endverbatim
2239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
2240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM Encoder Interface and create the associated handle.
2243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Encoder Interface handle
2244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  sConfig : TIM Encoder Interface configuration structure
2245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Init(TIM_HandleTypeDef *htim,  TIM_Encoder_InitTypeDef* sConfig)
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpsmcr = 0U;
2250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccmr1 = 0U;
2251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccer = 0U;
2252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the TIM handle allocation */
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim == NULL)
2255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
2257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
ARM GAS  /tmp/ccNBoJ9q.s 			page 41


2258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
2260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
2262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
2263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
2264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(sConfig->EncoderMode));
2265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->IC1Selection));
2266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->IC2Selection));
2267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_IC_POLARITY(sConfig->IC1Polarity));
2268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_IC_POLARITY(sConfig->IC2Polarity));
2269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->IC1Prescaler));
2270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->IC2Prescaler));
2271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->IC1Filter));
2272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->IC2Filter));
2273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
2275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
2278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     HAL_TIM_Encoder_MspInit(htim);
2281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the TIM state */
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
2285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the SMS bits */
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->SMCR &= ~TIM_SMCR_SMS;
2288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Configure the Time base in the Encoder Mode */
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
2291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx SMCR register value */
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
2294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 = htim->Instance->CCMR1;
2297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CCER register value */
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = htim->Instance->CCER;
2300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the encoder Mode */
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr |= sConfig->EncoderMode;
2303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_CC1S | TIM_CCMR1_CC2S);
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
2307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the the Capture Compare 1 and the Capture Compare 2 prescalers and filters */
2309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_IC1PSC | TIM_CCMR1_IC2PSC);
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_IC1F | TIM_CCMR1_IC2F);
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
2313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the TI1 and the TI2 Polarities */
ARM GAS  /tmp/ccNBoJ9q.s 			page 42


2315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC2P);
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1NP | TIM_CCER_CC2NP);
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= sConfig->IC1Polarity | (sConfig->IC2Polarity << 4U);
2318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx SMCR */
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
2321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->CCMR1 = tmpccmr1;
2324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCER */
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->CCER = tmpccer;
2327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Initialize the TIM state*/
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
2330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  DeInitializes the TIM Encoder interface 
2337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Encoder handle
2338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_DeInit(TIM_HandleTypeDef *htim)
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
2343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
2344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_Encoder_MspDeInit(htim);
2352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change TIM state */
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
2355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Release Lock */
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
2358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM Encoder Interface MSP.
2364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
2365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
2366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef *htim)
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
2371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 43


2372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_Encoder_MspInit could be implemented in the user file
2374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  DeInitializes TIM Encoder Interface MSP.
2379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
2380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
2381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef *htim)
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
2386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_Encoder_MspDeInit could be implemented in the user file
2389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface.
2394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Encoder Interface handle
2395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be enabled
2396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
2397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
2402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
2405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the encoder interface channels */
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
2409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
2411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
2414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
2416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
2419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default :
2421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      break;
2425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Peripheral */
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
ARM GAS  /tmp/ccNBoJ9q.s 			page 44


2429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
2431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface.
2436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Encoder Interface handle
2437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be disabled
2438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
2439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
2444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
2447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    /* Disable the Input Capture channels 1 and 2
2450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_C
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
2452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
2454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
2457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
2459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
2462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default :
2464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      break;
2468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
2475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface in interrupt mode.
2480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Encoder Interface handle
2481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be enabled
2482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
2483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
ARM GAS  /tmp/ccNBoJ9q.s 			page 45


2486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
2488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
2491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the encoder interface channels */
2494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the capture compare Interrupts 1 and/or 2 */
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
2496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
2498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
2502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
2504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
2508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default :
2510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
2515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      break;
2516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the Peripheral */
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
2521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
2523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface in interrupt mode.
2528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Encoder Interface handle
2529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be disabled
2530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
2531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
2536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
2539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
2542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_C
ARM GAS  /tmp/ccNBoJ9q.s 			page 46


2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(Channel == TIM_CHANNEL_1)
2544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the capture compare Interrupts 1 */
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
2549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if(Channel == TIM_CHANNEL_2)
2551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the capture compare Interrupts 2 */
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
2556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else
2558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the capture compare Interrupts 1 and 2 */
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
2565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change the htim state */
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
2572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
2574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface in DMA mode.
2579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Encoder Interface handle
2580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be enabled
2581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
2582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  pData1 : The destination Buffer address for IC1.
2586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  pData2 : The destination Buffer address for IC2.
2587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Length : The length of data to be transferred from TIM peripheral to memory.
2588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
2590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pD
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
2593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
2594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
2596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
2598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
ARM GAS  /tmp/ccNBoJ9q.s 			page 47


2600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((((pData1 == 0U) || (pData2 == 0U) )) && (Length > 0U))
2602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
2604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     else
2606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
2608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
2612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
2614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
2617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
2620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t )pDat
2623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Input Capture DMA request */
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
2626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the Peripheral */
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
2629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the Capture compare channel */
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
2634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
2636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
2639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError;
2642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)pData
2644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
2647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the Peripheral */
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
2650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the Capture compare channel */
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
2655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_ALL:
ARM GAS  /tmp/ccNBoJ9q.s 			page 48


2657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
2660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
2663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)pData
2666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
2669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
2672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)pData
2675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      /* Enable the Peripheral */
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
2678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the Capture compare channel */
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
2685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
2687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
2689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
2691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
2692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface in DMA mode.
2699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Encoder Interface handle
2700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be enabled
2701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
2702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** */
2707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
2710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
2711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
2713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_C
ARM GAS  /tmp/ccNBoJ9q.s 			page 49


2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(Channel == TIM_CHANNEL_1)
2715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the capture compare DMA Request 1 */
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
2720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if(Channel == TIM_CHANNEL_2)
2722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the capture compare DMA Request 2 */
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
2727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else
2729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
2732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Disable the capture compare DMA Request 1 and 2 */
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
2736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Peripheral */
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change the htim state */
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
2743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
2745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @}
2750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group7 TIM IRQ handler management 
2752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *  @brief    IRQ handler management 
2753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *
2754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @verbatim 
2755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
2756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         ##### IRQ handler management #####
2757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
2758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   [..]
2759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     This section provides Timer IRQ handler function.
2760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @endverbatim
2762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
2763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  This function handles TIM interrupts requests.
2766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM  handle
2767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
2768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
ARM GAS  /tmp/ccNBoJ9q.s 			page 50


2771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Capture compare 1 event */
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
2773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) !=RESET)
2775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       {
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
2779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         /* Input capture event */
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         if((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
2782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         {
2783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           HAL_TIM_IC_CaptureCallback(htim);
2784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         }
2785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         /* Output compare event */
2786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         else
2787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         {
2788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           HAL_TIM_OC_DelayElapsedCallback(htim);
2789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           HAL_TIM_PWM_PulseFinishedCallback(htim);
2790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         }
2791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
2792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       }
2793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Capture compare 2 event */
2796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
2797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) !=RESET)
2799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
2801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
2802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Input capture event */
2803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       if((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
2804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       {
2805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
2806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       }
2807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Output compare event */
2808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       else
2809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       {
2810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
2811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
2812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       }
2813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
2814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Capture compare 3 event */
2817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
2818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) !=RESET)
2820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
2822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
2823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Input capture event */
2824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       if((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
2825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       {
2826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
2827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       }
ARM GAS  /tmp/ccNBoJ9q.s 			page 51


2828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Output compare event */
2829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       else
2830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       {
2831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
2832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
2833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       }
2834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
2835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Capture compare 4 event */
2838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
2839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) !=RESET)
2841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
2843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
2844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Input capture event */
2845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       if((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
2846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       {
2847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
2848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       }
2849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Output compare event */
2850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       else
2851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       {
2852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
2853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
2854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       }
2855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
2856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* TIM Update event */
2859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
2860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) !=RESET)
2862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
2864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_TIM_PeriodElapsedCallback(htim);
2865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* TIM Break input event */
2868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
2869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) !=RESET)
2871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
2873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_TIMEx_BreakCallback(htim);
2874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* TIM Trigger detection event */
2877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
2878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) !=RESET)
2880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
2882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_TIM_TriggerCallback(htim);
2883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
ARM GAS  /tmp/ccNBoJ9q.s 			page 52


2885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* TIM commutation event */
2886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
2887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) !=RESET)
2889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
2891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_TIMEx_CommutationCallback(htim);
2892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @}
2898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group8 Peripheral Control functions
2901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *  @brief   	Peripheral Control functions 
2902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *
2903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @verbatim 
2904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
2905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                    ##### Peripheral Control functions #####
2906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
2907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  [..]
2908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    This section provides functions allowing to:
2909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       (+) Configure The Input Output channels for OC, PWM, IC or One Pulse mode.
2910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       (+) Configure External Clock source.
2911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       (+) Configure Complementary channels, break features and dead time.
2912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       (+) Configure Master and the Slave synchronization.
2913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       (+) Configure the DMA Burst Mode.
2914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @endverbatim
2916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
2917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare Channels according to the specified
2921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         parameters in the TIM_OC_InitTypeDef.
2922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Output Compare handle
2923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  sConfig : TIM Output Compare configuration structure
2924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be enabled
2925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
2926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected 
2930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
2931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
2932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_ConfigChannel(TIM_HandleTypeDef *htim, TIM_OC_InitTypeDef* sConfig, ui
2933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
2934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
2935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel));
2936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_OC_MODE(sConfig->OCMode));
2937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
2938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check input state */
2940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
2941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 53


2942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
2945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
2946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
2947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
2949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure the TIM Channel 1 in Output Compare */
2950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
2951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
2953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
2955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure the TIM Channel 2 in Output Compare */
2958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
2959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
2961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
2963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
2965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure the TIM Channel 3 in Output Compare */
2966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
2967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
2969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
2971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
2972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
2973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        /* Configure the TIM Channel 4 in Output Compare */
2974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        TIM_OC4_SetConfig(htim->Instance, sConfig);
2975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
2976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
2977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
2979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
2980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
2981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
2982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
2984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
2986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
2987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
2988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
2989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture Channels according to the specified
2990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         parameters in the TIM_IC_InitTypeDef.
2991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM IC handle
2992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  sConfig : TIM Input Capture configuration structure
2993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be enabled
2994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
2995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected 
ARM GAS  /tmp/ccNBoJ9q.s 			page 54


2999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
3000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
3001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_ConfigChannel(TIM_HandleTypeDef *htim, TIM_IC_InitTypeDef* sConfig, ui
3002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
3003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
3004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
3005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_IC_POLARITY(sConfig->ICPolarity));
3006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->ICSelection));
3007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->ICPrescaler));
3008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->ICFilter));
3009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
3011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
3015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* TI1 Configuration */
3017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_TI1_SetConfig(htim->Instance,
3018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                sConfig->ICPolarity,
3019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                sConfig->ICSelection,
3020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                sConfig->ICFilter);
3021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Reset the IC1PSC Bits */
3023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
3024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the IC1PSC value */
3026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR1 |= sConfig->ICPrescaler;
3027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
3029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* TI2 Configuration */
3031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_TI2_SetConfig(htim->Instance,
3034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                       sConfig->ICPolarity,
3035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                       sConfig->ICSelection,
3036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                       sConfig->ICFilter);
3037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Reset the IC2PSC Bits */
3039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
3040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the IC2PSC value */
3042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR1 |= (sConfig->ICPrescaler << 8U);
3043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_3)
3045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* TI3 Configuration */
3047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
3048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_TI3_SetConfig(htim->Instance,
3050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                sConfig->ICPolarity,
3051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                sConfig->ICSelection,
3052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                sConfig->ICFilter);
3053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Reset the IC3PSC Bits */
3055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC3PSC;
ARM GAS  /tmp/ccNBoJ9q.s 			page 55


3056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the IC3PSC value */
3058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR2 |= sConfig->ICPrescaler;
3059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else
3061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* TI4 Configuration */
3063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
3064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_TI4_SetConfig(htim->Instance,
3066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                sConfig->ICPolarity,
3067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                sConfig->ICSelection,
3068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                sConfig->ICFilter);
3069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Reset the IC4PSC Bits */
3071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC4PSC;
3072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the IC4PSC value */
3074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR2 |= (sConfig->ICPrescaler << 8U);
3075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
3080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
3082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
3083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
3085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM PWM  channels according to the specified
3086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         parameters in the TIM_OC_InitTypeDef.
3087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
3088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  sConfig : TIM PWM configuration structure
3089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be enabled
3090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
3091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
3094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
3095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
3096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
3097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim, TIM_OC_InitTypeDef* sConfig, u
3098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
3099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
3100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
3102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel));
3103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
3104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
3105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));
3106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
3110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
3112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
ARM GAS  /tmp/ccNBoJ9q.s 			page 56


3113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
3114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure the Channel 1 in PWM mode */
3115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
3116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the Preload enable bit for channel1 */
3118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
3119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure the Output Fast mode */
3121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
3122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode;
3123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
3127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure the Channel 2 in PWM mode */
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
3131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the Preload enable bit for channel2 */
3133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
3134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure the Output Fast mode */
3136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
3137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
3138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
3142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
3144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure the Channel 3 in PWM mode */
3145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
3146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the Preload enable bit for channel3 */
3148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
3149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      /* Configure the Output Fast mode */
3151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
3152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode;
3153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
3157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
3159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure the Channel 4 in PWM mode */
3160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC4_SetConfig(htim->Instance, sConfig);
3161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the Preload enable bit for channel4 */
3163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
3164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      /* Configure the Output Fast mode */
3166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
3167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
3168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
ARM GAS  /tmp/ccNBoJ9q.s 			page 57


3170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
3172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
3178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
3180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
3181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
3183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse Channels according to the specified
3184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         parameters in the TIM_OnePulse_InitTypeDef.
3185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM One Pulse handle
3186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  sConfig : TIM One Pulse configuration structure
3187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  OutputChannel : TIM Channels to be enabled
3188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
3189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  InputChannel : TIM Channels to be enabled
3192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
3193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
3196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
3197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_ConfigChannel(TIM_HandleTypeDef *htim,  TIM_OnePulse_InitTypeDef
3198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
3199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_OC_InitTypeDef temp1;
3200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
3202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_OPM_CHANNELS(OutputChannel));
3203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_OPM_CHANNELS(InputChannel));
3204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(OutputChannel != InputChannel)
3206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
3208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Extract the Ouput compare configuration from sConfig structure */
3212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   temp1.OCMode = sConfig->OCMode;
3213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   temp1.Pulse = sConfig->Pulse;
3214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   temp1.OCPolarity = sConfig->OCPolarity;
3215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   temp1.OCNPolarity = sConfig->OCNPolarity;
3216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   temp1.OCIdleState = sConfig->OCIdleState;
3217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   temp1.OCNIdleState = sConfig->OCNIdleState;
3218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     switch (OutputChannel)
3220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
3222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
3224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, &temp1);
3226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
ARM GAS  /tmp/ccNBoJ9q.s 			page 58


3227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
3229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, &temp1);
3233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
3236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (InputChannel)
3239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
3241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
3243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI1_SetConfig(htim->Instance, sConfig->ICPolarity,
3245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         sConfig->ICSelection, sConfig->ICFilter);
3246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Reset the IC1PSC Bits */
3248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
3249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Select the Trigger source */
3251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_TS;
3252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_TS_TI1FP1;
3253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Select the Slave Mode */
3255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_SMS;
3256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
3257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
3260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI2_SetConfig(htim->Instance, sConfig->ICPolarity,
3264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                  sConfig->ICSelection, sConfig->ICFilter);
3265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Reset the IC2PSC Bits */
3267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
3268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Select the Trigger source */
3270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_TS;
3271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_TS_TI2FP2;
3272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Select the Slave Mode */
3274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_SMS;
3275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
3276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
3280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
ARM GAS  /tmp/ccNBoJ9q.s 			page 59


3284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
3286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
3288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
3289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else
3290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
3292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
3294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
3296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer Data from the memory to the TIM peripheral 
3297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
3298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstBaseAddress : TIM Base address from where the DMA will start the Data write
3299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         This parameter can be one of the following values:
3300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1 
3301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
3302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
3303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
3304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
3305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
3306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
3307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
3308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
3309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT 
3310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC 
3311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
3312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
3313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
3314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
3315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3 
3316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
3317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
3318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_DCR
3319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstRequestSrc : TIM DMA Request sources
3320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         This parameter can be one of the following values:
3321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
3322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
3323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
3324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
3325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
3326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
3327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
3328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstBuffer : The Buffer address.
3329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstLength : DMA Burst length. This parameter can be one value
3330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
3331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
3332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
3333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_WriteStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddress, u
3334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                               uint32_t  *BurstBuffer, uint32_t  BurstLength)
3335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
3336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** return HAL_TIM_DMABurst_MultiWriteStart(htim, BurstBaseAddress, BurstRequestSrc, BurstBuffer, Burst
3337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
3338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
3340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer multiple Data from the memory to the TIM peripheral
ARM GAS  /tmp/ccNBoJ9q.s 			page 60


3341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
3342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstBaseAddress : TIM Base address from where the DMA will start the Data write
3343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         This parameter can be one of the following values:
3344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1
3345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
3346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
3347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
3348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
3349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
3350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
3351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
3352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
3353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT
3354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC
3355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
3356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
3357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
3358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
3359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3
3360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
3361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
3362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_DCR
3363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstRequestSrc : TIM DMA Request sources
3364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         This parameter can be one of the following values:
3365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
3366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
3367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
3368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
3369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
3370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
3371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
3372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstBuffer : The Buffer address.
3373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstLength : DMA Burst length. This parameter can be one value
3374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
3375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  DataLength : Data length. This parameter can be one value
3376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         between 1 and 0xFFFF.
3377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
3378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
3379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_MultiWriteStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddre
3380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                                    uint32_t* BurstBuffer, uint32_t  BurstLength,  u
3381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
3382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
3383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMABURST_INSTANCE(htim->Instance));
3384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_BASE(BurstBaseAddress));
3385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
3386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(BurstLength));
3387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_DATA_LENGTH(DataLength));
3388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
3390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
3392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
3394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((BurstBuffer == 0U ) && (BurstLength > 0U))
3396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
ARM GAS  /tmp/ccNBoJ9q.s 			page 61


3398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     else
3400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
3402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch(BurstRequestSrc)
3405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_UPDATE:
3407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
3410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
3413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)BurstBuffer, (uint32_t)&htim->Insta
3416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC1:
3419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback =  TIM_DMADelayPulseCplt;
3422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
3425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
3428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC2:
3431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback =  TIM_DMADelayPulseCplt;
3434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
3437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
3440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC3:
3443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback =  TIM_DMADelayPulseCplt;
3446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
3449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
3452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC4:
ARM GAS  /tmp/ccNBoJ9q.s 			page 62


3455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback =  TIM_DMADelayPulseCplt;
3458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
3461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
3464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_COM:
3467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
3470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
3473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)BurstBuffer, (uint32_t)&htim->
3476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
3479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
3482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
3485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)BurstBuffer, (uint32_t)&htim->Inst
3488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
3491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    /* configure the DMA Burst Mode */
3494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    htim->Instance->DCR = BurstBaseAddress | BurstLength;
3495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    /* Enable the TIM DMA Request */
3497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);
3498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    htim->State = HAL_TIM_STATE_READY;
3500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
3502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
3503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
3504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
3506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stops the TIM DMA Burst mode 
3507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
3508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstRequestSrc : TIM DMA Request sources to disable
3509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
3510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
3511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_WriteStop(TIM_HandleTypeDef *htim, uint32_t BurstRequestSrc)
ARM GAS  /tmp/ccNBoJ9q.s 			page 63


3512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
3513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
3514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
3515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Abort the DMA transfer (at least disable the DMA channel) */
3517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch(BurstRequestSrc)
3518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_UPDATE:
3520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_UPDATE]);
3522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC1:
3525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC1]);
3527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC2:
3530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC2]);
3532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC3:
3535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC3]);
3537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC4:
3540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC4]);
3542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_COM:
3545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_COMMUTATION]);
3547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
3550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_TRIGGER]);
3552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
3555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the TIM Update DMA request */
3559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
3560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
3562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
3563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
3564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
3566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer Data from the TIM peripheral to the memory 
3567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
3568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstBaseAddress : TIM Base address from where the DMA will starts the Data read
ARM GAS  /tmp/ccNBoJ9q.s 			page 64


3569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         This parameter can be one of the following values:
3570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1 
3571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
3572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
3573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
3574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
3575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
3576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
3577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
3578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
3579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT 
3580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC 
3581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
3582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
3583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
3584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
3585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3 
3586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
3587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
3588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_DCR
3589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstRequestSrc : TIM DMA Request sources
3590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         This parameter can be one of the following values:
3591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
3592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
3593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
3594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
3595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
3596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
3597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
3598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstBuffer : The Buffer address.
3599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstLength : DMA Burst length. This parameter can be one value
3600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
3601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
3602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
3603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_ReadStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddress, ui
3604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                              uint32_t  *BurstBuffer, uint32_t  BurstLength)
3605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
3606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** return HAL_TIM_DMABurst_MultiReadStart(htim, BurstBaseAddress, BurstRequestSrc, BurstBuffer, BurstL
3607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
3608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
3610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer multiple Data from the TIM peripheral to the memory
3611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
3612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstBaseAddress : TIM Base address from where the DMA will starts the Data read
3613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         This parameter can be one of the following values:
3614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1
3615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
3616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
3617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
3618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
3619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
3620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
3621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
3622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
3623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT
3624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC
3625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
ARM GAS  /tmp/ccNBoJ9q.s 			page 65


3626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
3627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
3628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
3629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3
3630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
3631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
3632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMABASE_DCR
3633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstRequestSrc : TIM DMA Request sources
3634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         This parameter can be one of the following values:
3635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
3636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
3637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
3638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
3639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
3640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
3641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
3642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstBuffer : The Buffer address.
3643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstLength : DMA Burst length. This parameter can be one value
3644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
3645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  DataLength : Data length. This parameter can be one value
3646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         between 1 and 0xFFFF.
3647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
3648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
3649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_MultiReadStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddres
3650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                                   uint32_t  *BurstBuffer, uint32_t  BurstLength, ui
3651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
3652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
3653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMABURST_INSTANCE(htim->Instance));
3654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_BASE(BurstBaseAddress));
3655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
3656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(BurstLength));
3657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_DATA_LENGTH(DataLength));
3658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
3660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
3662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
3664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((BurstBuffer == 0U ) && (BurstLength > 0U))
3666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
3668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     else
3670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
3672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch(BurstRequestSrc)
3675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_UPDATE:
3677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
3680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
ARM GAS  /tmp/ccNBoJ9q.s 			page 66


3683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
3686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC1:
3689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback =  TIM_DMACaptureCplt;
3692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
3695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
3698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC2:
3701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback =  TIM_DMACaptureCplt;
3704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
3707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
3710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC3:
3713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback =  TIM_DMACaptureCplt;
3716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
3719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
3722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC4:
3725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback =  TIM_DMACaptureCplt;
3728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
3731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
3734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_COM:
3737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
ARM GAS  /tmp/ccNBoJ9q.s 			page 67


3740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
3743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)&htim->Instance->DMAR, (uint32
3746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
3749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
3752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the DMA error callback */
3754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
3755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the DMA channel */
3757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
3758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
3761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* configure the DMA Burst Mode */
3765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->DCR = BurstBaseAddress | BurstLength;
3766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable the TIM DMA Request */
3768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);
3769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
3773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
3774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
3775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
3777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Stop the DMA burst reading 
3778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
3779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  BurstRequestSrc : TIM DMA Request sources to disable.
3780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
3781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
3782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_ReadStop(TIM_HandleTypeDef *htim, uint32_t BurstRequestSrc)
3783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
3784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
3785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
3786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Abort the DMA transfer (at least disable the DMA channel) */
3788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch(BurstRequestSrc)
3789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_UPDATE:
3791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_UPDATE]);
3793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC1:
3796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
ARM GAS  /tmp/ccNBoJ9q.s 			page 68


3797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC1]);
3798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC2:
3801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC2]);
3803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC3:
3806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC3]);
3808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_CC4:
3811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC4]);
3813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_COM:
3816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_COMMUTATION]);
3818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
3821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_TRIGGER]);
3823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
3826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the TIM Update DMA request */
3830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
3831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
3833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
3834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
3835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
3837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Generate a software event
3838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
3839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  EventSource : specifies the event source.
3840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
3841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_UPDATE: Timer update Event source
3842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC1: Timer Capture Compare 1 Event source
3843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC2: Timer Capture Compare 2 Event source
3844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC3: Timer Capture Compare 3 Event source
3845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC4: Timer Capture Compare 4 Event source
3846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_COM: Timer COM event source 
3847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_TRIGGER: Timer Trigger Event source
3848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_BREAK: Timer Break event source
3849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @note TIM6 and TIM7 can only generate an update event.
3850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @note TIM_EVENTSOURCE_COM and TIM_EVENTSOURCE_BREAK are used only with TIM1, TIM15, TIM16 and T
3851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
3852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
3853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 69


3854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_GenerateEvent(TIM_HandleTypeDef *htim, uint32_t EventSource)
3855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
3856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
3857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
3858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(EventSource));
3859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Process Locked */
3861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
3862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change the TIM state */
3864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the event sources */
3867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->EGR = EventSource;
3868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Change the TIM state */
3870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
3873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Return function status */
3875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
3876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
3877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
3879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configures the OCRef clear feature
3880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
3881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  sClearInputConfig : pointer to a TIM_ClearInputConfigTypeDef structure that
3882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         contains the OCREF clear feature and parameters for the TIM peripheral.
3883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : specifies the TIM Channel
3884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
3885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1
3886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2
3887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3
3888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4
3889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
3890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */ 
3891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak HAL_StatusTypeDef HAL_TIM_ConfigOCrefClear(TIM_HandleTypeDef *htim, TIM_ClearInputConfigType
3892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
3893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpsmcr = 0;
3894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
3896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_OCXREF_CLEAR_INSTANCE(htim->Instance));
3897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CLEARINPUT_SOURCE(sClearInputConfig->ClearInputSource));
3898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CLEARINPUT_POLARITY(sClearInputConfig->ClearInputPolarity));
3899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CLEARINPUT_PRESCALER(sClearInputConfig->ClearInputPrescaler));
3900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CLEARINPUT_FILTER(sClearInputConfig->ClearInputFilter));
3901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Process Locked */
3903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
3904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (sClearInputConfig->ClearInputSource)
3908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CLEARINPUTSOURCE_NONE:
3910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
ARM GAS  /tmp/ccNBoJ9q.s 			page 70


3911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Get the TIMx SMCR register value */
3912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR;
3913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       
3914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Clear the OCREF clear selection bit */
3915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpsmcr &= ~TIM_SMCR_OCCS;
3916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Clear the ETR Bits */
3918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
3919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set TIMx_SMCR */
3921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR = tmpsmcr;
3922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    }
3923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CLEARINPUTSOURCE_ETR:
3926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
3927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
3928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         sClearInputConfig->ClearInputPrescaler,
3929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         sClearInputConfig->ClearInputPolarity,
3930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         sClearInputConfig->ClearInputFilter);
3931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the OCREF clear selection bit */
3933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SMCR_OCCS;
3934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
3935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
3937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
3939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
3940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
3941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
3942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_1:
3943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       {
3944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         if(sClearInputConfig->ClearInputState != RESET)
3945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         {
3946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           /* Enable the Ocref clear feature for Channel 1 */
3947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           htim->Instance->CCMR1 |= TIM_CCMR1_OC1CE;
3948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         }
3949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         else
3950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         {
3951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           /* Disable the Ocref clear feature for Channel 1 */
3952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1CE;
3953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         }
3954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       }
3955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
3956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_2:
3957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       {
3958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         if(sClearInputConfig->ClearInputState != RESET)
3960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         {
3961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           /* Enable the Ocref clear feature for Channel 2 */
3962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           htim->Instance->CCMR1 |= TIM_CCMR1_OC2CE;
3963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         }
3964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         else
3965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         {
3966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           /* Disable the Ocref clear feature for Channel 2 */
3967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2CE;
ARM GAS  /tmp/ccNBoJ9q.s 			page 71


3968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         }
3969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       }
3970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_3:
3972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       {
3973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
3974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         if(sClearInputConfig->ClearInputState != RESET)
3975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         {
3976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           /* Enable the Ocref clear feature for Channel 3 */
3977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           htim->Instance->CCMR2 |= TIM_CCMR2_OC3CE;
3978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         }
3979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         else
3980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         {
3981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           /* Disable the Ocref clear feature for Channel 3 */
3982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3CE;
3983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         }
3984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       }
3985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
3986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     case TIM_CHANNEL_4:
3987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       {
3988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
3989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         if(sClearInputConfig->ClearInputState != RESET)
3990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         {
3991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           /* Enable the Ocref clear feature for Channel 4 */
3992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           htim->Instance->CCMR2 |= TIM_CCMR2_OC4CE;
3993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         }
3994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         else
3995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         {
3996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           /* Disable the Ocref clear feature for Channel 4 */
3997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4CE;
3998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         }
3999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       }
4000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     default:
4002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
4006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
4010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief   Configures the clock source to be used
4014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
4015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  sClockSourceConfig : pointer to a TIM_ClockConfigTypeDef structure that
4016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         contains the clock source information for the TIM peripheral.
4017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
4018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */ 
4019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef * sCloc
4020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpsmcr = 0U;
4022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Process Locked */
4024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
ARM GAS  /tmp/ccNBoJ9q.s 			page 72


4025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
4027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
4029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));
4030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
4032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
4033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
4034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
4035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
4036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (sClockSourceConfig->ClockSource)
4038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CLOCKSOURCE_INTERNAL:
4040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_INSTANCE(htim->Instance));
4042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable slave mode to clock the prescaler directly with the internal clock */
4043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR &= ~TIM_SMCR_SMS;
4044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CLOCKSOURCE_ETRMODE1:
4048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check whether or not the timer instance supports external trigger input mode 1 (ETRF)*/
4050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(htim->Instance));
4051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check ETR input conditioning related parameters */
4053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
4054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
4055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
4056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       
4057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure the ETR Clock source */
4058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
4059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler,
4060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         sClockSourceConfig->ClockPolarity,
4061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         sClockSourceConfig->ClockFilter);
4062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Get the TIMx SMCR register value */
4063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR;
4064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Reset the SMS and TS Bits */
4065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
4066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Select the External clock mode1 and the ETRF trigger */
4067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
4068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Write to TIMx SMCR */
4069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR = tmpsmcr;
4070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CLOCKSOURCE_ETRMODE2:
4074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check whether or not the timer instance supports external trigger input mode 2 (ETRF)*/
4076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(htim->Instance));
4077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check ETR input conditioning related parameters */
4079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
4080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
4081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
ARM GAS  /tmp/ccNBoJ9q.s 			page 73


4082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       
4083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure the ETR Clock source */
4084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
4085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler,
4086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         sClockSourceConfig->ClockPolarity,
4087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         sClockSourceConfig->ClockFilter);
4088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Enable the External clock mode2 */
4089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SMCR_ECE;
4090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CLOCKSOURCE_TI1:
4094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 */
4096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
4097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check TI1 input conditioning related parameters */
4099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
4100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
4101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       
4102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
4103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
4104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
4105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
4106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CLOCKSOURCE_TI2:
4109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 (ETRF)*/
4111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
4112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        /* Check TI2 input conditioning related parameters */
4114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
4115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
4116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance,
4118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
4119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
4120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
4121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CLOCKSOURCE_TI1ED:
4124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 */
4126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
4127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check TI1 input conditioning related parameters */
4129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
4130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
4131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
4133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
4134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
4135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
4136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CLOCKSOURCE_ITR0:
ARM GAS  /tmp/ccNBoJ9q.s 			page 74


4139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 */
4141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));
4142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR0);
4144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CLOCKSOURCE_ITR1:
4147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 */
4149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));
4150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR1);
4152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CLOCKSOURCE_ITR2:
4155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 */
4157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));
4158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR2);
4160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CLOCKSOURCE_ITR3:
4163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 */
4165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));
4166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR3);
4168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   default:
4172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
4175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
4179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Selects the signal connected to the TI1 input: direct from CH1_input
4183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         or a XOR combination between CH1_input, CH2_input & CH3_input
4184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle.
4185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TI1_Selection : Indicate whether or not channel 1 is connected to the
4186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         output of a XOR gate.
4187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
4188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_TI1SELECTION_CH1: The TIMx_CH1 pin is connected to TI1 input
4189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_TI1SELECTION_XORCOMBINATION: The TIMx_CH1, CH2 and CH3
4190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            pins are connected to the TI1 input (XOR combination)
4191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
4192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_ConfigTI1Input(TIM_HandleTypeDef *htim, uint32_t TI1_Selection)
4194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpcr2 = 0U;
ARM GAS  /tmp/ccNBoJ9q.s 			page 75


4196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
4198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_XOR_INSTANCE(htim->Instance));
4199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_TI1SELECTION(TI1_Selection));
4200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
4202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpcr2 = htim->Instance->CR2;
4203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the TI1 selection */
4205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpcr2 &= ~TIM_CR2_TI1S;
4206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the the TI1 selection */
4208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpcr2 |= TI1_Selection;
4209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMxCR2 */
4211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->CR2 = tmpcr2;
4212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
4214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configures the TIM in Slave mode
4218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle.
4219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  sSlaveConfig : pointer to a TIM_SlaveConfigTypeDef structure that
4220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         contains the selected trigger (internal trigger input, filtered
4221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         timer input or external trigger input) and the ) and the Slave 
4222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         mode (Disable, Reset, Gated, Trigger, External clock mode 1).
4223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
4224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_SlaveConfigSynchronization(TIM_HandleTypeDef *htim, TIM_SlaveConfigTypeDe
4226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
4228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_INSTANCE(htim->Instance));
4229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(sSlaveConfig->SlaveMode));
4230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(sSlaveConfig->InputTrigger));
4231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
4233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
4235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_SlaveTimer_SetConfig(htim, sSlaveConfig);
4237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable Trigger Interrupt */
4239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
4240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable Trigger DMA request */
4242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
4243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
4245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
4249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configures the TIM in Slave mode in interrupt mode
ARM GAS  /tmp/ccNBoJ9q.s 			page 76


4253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim: TIM handle.
4254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  sSlaveConfig: pointer to a TIM_SlaveConfigTypeDef structure that
4255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         contains the selected trigger (internal trigger input, filtered
4256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         timer input or external trigger input) and the ) and the Slave 
4257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *         mode (Disable, Reset, Gated, Trigger, External clock mode 1).
4258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL status
4259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_SlaveConfigSynchronization_IT(TIM_HandleTypeDef *htim,
4261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                                         TIM_SlaveConfigTypeDef * sSlaveConfig)
4262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check the parameters */
4264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_INSTANCE(htim->Instance));
4265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(sSlaveConfig->SlaveMode));
4266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(sSlaveConfig->InputTrigger));
4267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
4269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
4271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_SlaveTimer_SetConfig(htim, sSlaveConfig);
4273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Enable Trigger Interrupt */
4275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_TRIGGER);
4276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable Trigger DMA request */
4278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
4279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
4281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
4285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Read the captured value from Capture Compare unit
4289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle.
4290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : TIM Channels to be enabled
4291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
4292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1 : TIM Channel 1 selected
4293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2 : TIM Channel 2 selected
4294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3 : TIM Channel 3 selected
4295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4 : TIM Channel 4 selected
4296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval Captured value
4297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** uint32_t HAL_TIM_ReadCapturedValue(TIM_HandleTypeDef *htim, uint32_t Channel)
4299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpreg = 0U;
4301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
4303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
4305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CHANNEL_1:
4307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check the parameters */
4309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
ARM GAS  /tmp/ccNBoJ9q.s 			page 77


4310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Return the capture 1 value */
4312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpreg =  htim->Instance->CCR1;
4313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
4315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CHANNEL_2:
4317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check the parameters */
4319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Return the capture 2 value */
4322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR2;
4323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
4325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CHANNEL_3:
4328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check the parameters */
4330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
4331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Return the capture 3 value */
4333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR3;
4334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
4336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_CHANNEL_4:
4339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
4340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check the parameters */
4341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
4342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Return the capture 4 value */
4344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR4;
4345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
4347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
4348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   default:
4350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
4351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return tmpreg;
4355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @}
4359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group9 TIM Callbacks functions
4362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *  @brief    TIM Callbacks functions 
4363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *
4364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @verbatim 
4365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
4366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         ##### TIM Callbacks functions #####
ARM GAS  /tmp/ccNBoJ9q.s 			page 78


4367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
4368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  [..]
4369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    This section provides TIM callback functions:
4370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    (+) Timer Period elapsed callback
4371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    (+) Timer Output Compare callback
4372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    (+) Timer Input capture callback
4373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    (+) Timer Trigger callback
4374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    (+) Timer Error callback
4375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @endverbatim
4377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
4378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Period elapsed callback in non blocking mode 
4382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
4383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
4386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
4389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
4391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the __HAL_TIM_PeriodElapsedCallback could be implemented in the user file
4392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
4393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Output Compare callback in non blocking mode 
4397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM OC handle
4398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
4401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
4404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
4406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the __HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
4407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
4408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Input Capture callback in non blocking mode 
4411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM IC handle
4412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
4415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
4418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
4420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the __HAL_TIM_IC_CaptureCallback could be implemented in the user file
4421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
4422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 79


4424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  PWM Pulse finished callback in non blocking mode 
4426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
4427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
4430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
4433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
4435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the __HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
4436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
4437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Hall Trigger detection callback in non blocking mode 
4441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
4442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
4445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
4448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
4450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_TriggerCallback could be implemented in the user file
4451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
4452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Timer error callback in non blocking mode 
4456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
4457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** __weak void HAL_TIM_ErrorCallback(TIM_HandleTypeDef *htim)
4460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   UNUSED(htim);
4463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
4465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****             the HAL_TIM_ErrorCallback could be implemented in the user file
4466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    */
4467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @}
4471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group10 Peripheral State functions 
4474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *  @brief   Peripheral State functions 
4475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****  *
4476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @verbatim 
4477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
4478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         ##### Peripheral State functions #####
4479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   ==============================================================================
4480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     [..]
ARM GAS  /tmp/ccNBoJ9q.s 			page 80


4481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     This subsection permit to get in run-time the status of the peripheral 
4482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     and the data flow.
4483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** @endverbatim
4485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
4486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Return the TIM Base state
4490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Base handle
4491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL state
4492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_Base_GetState(TIM_HandleTypeDef *htim)
4494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return htim->State;
4496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Return the TIM OC state
4500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Ouput Compare handle
4501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL state
4502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_OC_GetState(TIM_HandleTypeDef *htim)
4504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return htim->State;
4506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Return the TIM PWM state
4510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM handle
4511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL state
4512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_PWM_GetState(TIM_HandleTypeDef *htim)
4514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return htim->State;
4516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Return the TIM Input Capture state
4520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM IC handle
4521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL state
4522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_IC_GetState(TIM_HandleTypeDef *htim)
4524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return htim->State;
4526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Return the TIM One Pulse Mode state
4530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM OPM handle
4531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL state
4532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_OnePulse_GetState(TIM_HandleTypeDef *htim)
4534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return htim->State;
4536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 81


4538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Return the TIM Encoder Mode state
4540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  htim : TIM Encoder handle
4541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval HAL state
4542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_Encoder_GetState(TIM_HandleTypeDef *htim)
4544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return htim->State;
4546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @}
4550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @}
4554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /** @addtogroup TIM_Private_Functions TIM_Private_Functions
4557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @{
4558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  TIM DMA error callback 
4562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  hdma : pointer to DMA handle.
4563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** void TIM_DMAError(DMA_HandleTypeDef *hdma)
4566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
4568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
4570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_ErrorCallback(htim);
4572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  TIM DMA Delay Pulse complete callback.
4576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  hdma : pointer to DMA handle.
4577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** void TIM_DMADelayPulseCplt(DMA_HandleTypeDef *hdma)
4580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
4582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
4584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
4586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
4588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
4590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
4592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
4594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
ARM GAS  /tmp/ccNBoJ9q.s 			page 82


4595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
4596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
4598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
4600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_PWM_PulseFinishedCallback(htim);
4603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
4605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  TIM DMA Capture complete callback.
4608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  hdma : pointer to DMA handle.
4609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** void TIM_DMACaptureCplt(DMA_HandleTypeDef *hdma)
4612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
4614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
4616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
4618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
4620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
4622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
4624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
4626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
4628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
4630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
4632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_IC_CaptureCallback(htim);
4635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
4637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  TIM DMA Period Elapse complete callback.
4641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  hdma : pointer to DMA handle.
4642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_DMAPeriodElapsedCplt(DMA_HandleTypeDef *hdma)
4645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
4647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
4649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_PeriodElapsedCallback(htim);
4651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
ARM GAS  /tmp/ccNBoJ9q.s 			page 83


4652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  TIM DMA Trigger callback.
4655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  hdma : pointer to DMA handle.
4656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_DMATriggerCplt(DMA_HandleTypeDef *hdma)
4659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
4661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
4663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_TriggerCallback(htim);
4665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Time Base configuration
4669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx : TIM periheral
4670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Structure : TIM Base configuration structure
4671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
4674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpcr1 = 0U;
4676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpcr1 = TIMx->CR1;
4677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set TIM Time Base Unit parameters ---------------------------------------*/
4679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
4680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Select the Counter Mode */
4682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
4683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr1 |= Structure->CounterMode;
4684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
4687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the clock division */
4689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr1 &= ~TIM_CR1_CKD;
4690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr1 |= (uint32_t)Structure->ClockDivision;
4691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the auto-reload preload */
4694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
4695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CR1 = tmpcr1;
4697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the Autoreload value */
4699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->ARR = (uint32_t)Structure->Period ;
4700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the Prescaler value */
4702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->PSC = (uint32_t)Structure->Prescaler;
4703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
4705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the Repetition Counter value */
4707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIMx->RCR = Structure->RepetitionCounter;
4708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
ARM GAS  /tmp/ccNBoJ9q.s 			page 84


4709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Generate an update event to reload the Prescaler 
4711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
4712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->EGR = TIM_EGR_UG;
4713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Time Ouput Compare 1 configuration
4717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
4718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  OC_Config : The ouput configuration structure
4719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
4722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
  25              		.loc 1 4722 0
  26              		.cfi_startproc
  27              	.LVL0:
  28 0000 30B5     		push	{r4, r5, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 12
  31              		.cfi_offset 4, -12
  32              		.cfi_offset 5, -8
  33              		.cfi_offset 14, -4
  34              	.LVL1:
4723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccmrx = 0U;
4724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccer = 0U;
4725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpcr2 = 0U;
4726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    /* Disable the Channel 1: Reset the CC1E Bit */
4728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
  35              		.loc 1 4728 0
  36 0002 036A     		ldr	r3, [r0, #32]
  37 0004 0122     		mov	r2, #1
  38 0006 9343     		bic	r3, r2
  39 0008 0362     		str	r3, [r0, #32]
4729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CCER register value */
4731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = TIMx->CCER;
  40              		.loc 1 4731 0
  41 000a 026A     		ldr	r2, [r0, #32]
  42              	.LVL2:
4732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
4733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
  43              		.loc 1 4733 0
  44 000c 4368     		ldr	r3, [r0, #4]
  45              	.LVL3:
4734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
4736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR1;
  46              		.loc 1 4736 0
  47 000e 8469     		ldr	r4, [r0, #24]
  48              	.LVL4:
4737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the Output Compare Mode Bits */
4739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_OC1M;
4740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_CC1S;
  49              		.loc 1 4740 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 85


  50 0010 7325     		mov	r5, #115
  51 0012 AC43     		bic	r4, r5
  52              	.LVL5:
4741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Output Compare Mode */
4742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx |= OC_Config->OCMode;
  53              		.loc 1 4742 0
  54 0014 0D68     		ldr	r5, [r1]
  55 0016 2C43     		orr	r4, r5
  56              	.LVL6:
4743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the Output Polarity level */
4745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC1P;
  57              		.loc 1 4745 0
  58 0018 0225     		mov	r5, #2
  59 001a AA43     		bic	r2, r5
  60              	.LVL7:
4746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the Output Compare Polarity */
4747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= OC_Config->OCPolarity;
  61              		.loc 1 4747 0
  62 001c 8D68     		ldr	r5, [r1, #8]
  63 001e 2A43     		orr	r2, r5
  64              	.LVL8:
4748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
  65              		.loc 1 4749 0
  66 0020 144D     		ldr	r5, .L6
  67 0022 A842     		cmp	r0, r5
  68 0024 08D0     		beq	.L2
  69              		.loc 1 4749 0 is_stmt 0 discriminator 1
  70 0026 144D     		ldr	r5, .L6+4
  71 0028 A842     		cmp	r0, r5
  72 002a 05D0     		beq	.L2
  73 002c 134D     		ldr	r5, .L6+8
  74 002e A842     		cmp	r0, r5
  75 0030 02D0     		beq	.L2
  76 0032 134D     		ldr	r5, .L6+12
  77 0034 A842     		cmp	r0, r5
  78 0036 05D1     		bne	.L3
  79              	.L2:
4750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Check parameters */
4752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
4753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Reset the Output N Polarity level */
4755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC1NP;
  80              		.loc 1 4755 0 is_stmt 1
  81 0038 0825     		mov	r5, #8
  82 003a AA43     		bic	r2, r5
  83              	.LVL9:
4756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the Output N Polarity */
4757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccer |= OC_Config->OCNPolarity;
  84              		.loc 1 4757 0
  85 003c CD68     		ldr	r5, [r1, #12]
  86 003e 2A43     		orr	r2, r5
  87              	.LVL10:
4758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Reset the Output N State */
4759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC1NE;
ARM GAS  /tmp/ccNBoJ9q.s 			page 86


  88              		.loc 1 4759 0
  89 0040 0425     		mov	r5, #4
  90 0042 AA43     		bic	r2, r5
  91              	.LVL11:
  92              	.L3:
4760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
  93              		.loc 1 4762 0
  94 0044 0B4D     		ldr	r5, .L6
  95 0046 A842     		cmp	r0, r5
  96 0048 08D0     		beq	.L4
  97              		.loc 1 4762 0 is_stmt 0 discriminator 1
  98 004a 0B4D     		ldr	r5, .L6+4
  99 004c A842     		cmp	r0, r5
 100 004e 05D0     		beq	.L4
 101 0050 0A4D     		ldr	r5, .L6+8
 102 0052 A842     		cmp	r0, r5
 103 0054 02D0     		beq	.L4
 104 0056 0A4D     		ldr	r5, .L6+12
 105 0058 A842     		cmp	r0, r5
 106 005a 05D1     		bne	.L5
 107              	.L4:
 108              	.LVL12:
4763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Check parameters */
4765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
4766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
4767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
4769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS1;
4770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS1N;
 109              		.loc 1 4770 0 is_stmt 1
 110 005c 094D     		ldr	r5, .L6+16
 111 005e 2B40     		and	r3, r5
 112              	.LVL13:
4771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the Output Idle state */
4772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 |= OC_Config->OCIdleState;
 113              		.loc 1 4772 0
 114 0060 4D69     		ldr	r5, [r1, #20]
 115 0062 2B43     		orr	r3, r5
 116              	.LVL14:
4773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the Output N Idle state */
4774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 |= OC_Config->OCNIdleState;
 117              		.loc 1 4774 0
 118 0064 8D69     		ldr	r5, [r1, #24]
 119 0066 2B43     		orr	r3, r5
 120              	.LVL15:
 121              	.L5:
4775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CR2 */
4777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 122              		.loc 1 4777 0
 123 0068 4360     		str	r3, [r0, #4]
4778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
4780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmrx;
ARM GAS  /tmp/ccNBoJ9q.s 			page 87


 124              		.loc 1 4780 0
 125 006a 8461     		str	r4, [r0, #24]
4781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the Capture Compare Register value */
4783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCR1 = OC_Config->Pulse;
 126              		.loc 1 4783 0
 127 006c 4B68     		ldr	r3, [r1, #4]
 128              	.LVL16:
 129 006e 4363     		str	r3, [r0, #52]
4784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCER */
4786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 130              		.loc 1 4786 0
 131 0070 0262     		str	r2, [r0, #32]
4787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 132              		.loc 1 4787 0
 133              		@ sp needed
 134              	.LVL17:
 135 0072 30BD     		pop	{r4, r5, pc}
 136              	.L7:
 137              		.align	2
 138              	.L6:
 139 0074 002C0140 		.word	1073818624
 140 0078 00400140 		.word	1073823744
 141 007c 00440140 		.word	1073824768
 142 0080 00480140 		.word	1073825792
 143 0084 FFFCFFFF 		.word	-769
 144              		.cfi_endproc
 145              	.LFE128:
 147              		.section	.text.TIM_OC3_SetConfig,"ax",%progbits
 148              		.align	2
 149              		.code	16
 150              		.thumb_func
 152              	TIM_OC3_SetConfig:
 153              	.LFB130:
4788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Time Ouput Compare 2 configuration
4791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx  to select the TIM peripheral
4792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  OC_Config : The ouput configuration structure
4793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
4796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
4797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccmrx = 0U;
4798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccer = 0U;
4799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpcr2 = 0U;
4800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
4802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
4803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CCER register value */
4805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = TIMx->CCER;
4806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
4807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
4808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
ARM GAS  /tmp/ccNBoJ9q.s 			page 88


4810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR1;
4811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
4813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_OC2M;
4814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_CC2S;
4815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Output Compare Mode */
4817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx |= (OC_Config->OCMode << 8U);
4818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the Output Polarity level */
4820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC2P;
4821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the Output Compare Polarity */
4822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 4U);
4823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
4825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
4827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Reset the Output N Polarity level */
4829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NP;
4830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the Output N Polarity */
4831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccer |= (OC_Config->OCNPolarity << 4U);
4832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Reset the Output N State */
4833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NE;
4834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
4838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Check parameters */
4840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
4841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
4842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
4844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS2;
4845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS2N;
4846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the Output Idle state */
4847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 2U);
4848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the Output N Idle state */
4849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCNIdleState << 2U);
4850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CR2 */
4853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
4854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
4856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmrx;
4857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the Capture Compare Register value */
4859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCR2 = OC_Config->Pulse;
4860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCER */
4862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER = tmpccer;
4863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
4864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Time Ouput Compare 3 configuration
ARM GAS  /tmp/ccNBoJ9q.s 			page 89


4867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx  to select the TIM peripheral
4868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  OC_Config : The ouput configuration structure
4869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
4872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 154              		.loc 1 4872 0
 155              		.cfi_startproc
 156              	.LVL18:
 157 0000 70B5     		push	{r4, r5, r6, lr}
 158              	.LCFI1:
 159              		.cfi_def_cfa_offset 16
 160              		.cfi_offset 4, -16
 161              		.cfi_offset 5, -12
 162              		.cfi_offset 6, -8
 163              		.cfi_offset 14, -4
 164              	.LVL19:
4873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccmrx = 0U;
4874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccer = 0U;
4875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpcr2 = 0U;
4876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
4878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC3E;
 165              		.loc 1 4878 0
 166 0002 026A     		ldr	r2, [r0, #32]
 167 0004 194B     		ldr	r3, .L12
 168 0006 1340     		and	r3, r2
 169 0008 0362     		str	r3, [r0, #32]
4879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CCER register value */
4881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 170              		.loc 1 4881 0
 171 000a 056A     		ldr	r5, [r0, #32]
 172              	.LVL20:
4882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
4883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
 173              		.loc 1 4883 0
 174 000c 4368     		ldr	r3, [r0, #4]
 175              	.LVL21:
4884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CCMR2 register value */
4886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR2;
 176              		.loc 1 4886 0
 177 000e C469     		ldr	r4, [r0, #28]
 178              	.LVL22:
4887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
4889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_OC3M;
4890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_CC3S;
 179              		.loc 1 4890 0
 180 0010 7322     		mov	r2, #115
 181 0012 9443     		bic	r4, r2
 182              	.LVL23:
4891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Output Compare Mode */
4892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx |= OC_Config->OCMode;
 183              		.loc 1 4892 0
 184 0014 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/ccNBoJ9q.s 			page 90


 185 0016 1443     		orr	r4, r2
 186              	.LVL24:
4893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the Output Polarity level */
4895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC3P;
 187              		.loc 1 4895 0
 188 0018 154A     		ldr	r2, .L12+4
 189 001a 2A40     		and	r2, r5
 190              	.LVL25:
4896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the Output Compare Polarity */
4897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 8U);
 191              		.loc 1 4897 0
 192 001c 8E68     		ldr	r6, [r1, #8]
 193 001e 3502     		lsl	r5, r6, #8
 194 0020 2A43     		orr	r2, r5
 195              	.LVL26:
4898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 196              		.loc 1 4899 0
 197 0022 144D     		ldr	r5, .L12+8
 198 0024 A842     		cmp	r0, r5
 199 0026 06D1     		bne	.L9
4900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
4902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Reset the Output N Polarity level */
4904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC3NP;
 200              		.loc 1 4904 0
 201 0028 134D     		ldr	r5, .L12+12
 202 002a 2A40     		and	r2, r5
 203              	.LVL27:
4905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the Output N Polarity */
4906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccer |= (OC_Config->OCNPolarity << 8U);
 204              		.loc 1 4906 0
 205 002c CE68     		ldr	r6, [r1, #12]
 206 002e 3502     		lsl	r5, r6, #8
 207 0030 2A43     		orr	r2, r5
 208              	.LVL28:
4907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Reset the Output N State */
4908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC3NE;
 209              		.loc 1 4908 0
 210 0032 124D     		ldr	r5, .L12+16
 211 0034 2A40     		and	r2, r5
 212              	.LVL29:
 213              	.L9:
4909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 214              		.loc 1 4911 0
 215 0036 0F4D     		ldr	r5, .L12+8
 216 0038 A842     		cmp	r0, r5
 217 003a 08D0     		beq	.L10
 218              		.loc 1 4911 0 is_stmt 0 discriminator 1
 219 003c 104D     		ldr	r5, .L12+20
 220 003e A842     		cmp	r0, r5
 221 0040 05D0     		beq	.L10
 222 0042 104D     		ldr	r5, .L12+24
ARM GAS  /tmp/ccNBoJ9q.s 			page 91


 223 0044 A842     		cmp	r0, r5
 224 0046 02D0     		beq	.L10
 225 0048 0F4D     		ldr	r5, .L12+28
 226 004a A842     		cmp	r0, r5
 227 004c 07D1     		bne	.L11
 228              	.L10:
 229              	.LVL30:
4912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Check parameters */
4914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
4915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
4916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
4918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS3;
4919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS3N;
 230              		.loc 1 4919 0 is_stmt 1
 231 004e 0F4D     		ldr	r5, .L12+32
 232 0050 2B40     		and	r3, r5
 233              	.LVL31:
4920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the Output Idle state */
4921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 4U);
 234              		.loc 1 4921 0
 235 0052 4E69     		ldr	r6, [r1, #20]
 236 0054 3501     		lsl	r5, r6, #4
 237 0056 2B43     		orr	r3, r5
 238              	.LVL32:
4922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the Output N Idle state */
4923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 239              		.loc 1 4923 0
 240 0058 8E69     		ldr	r6, [r1, #24]
 241 005a 3501     		lsl	r5, r6, #4
 242 005c 2B43     		orr	r3, r5
 243              	.LVL33:
 244              	.L11:
4924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CR2 */
4927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 245              		.loc 1 4927 0
 246 005e 4360     		str	r3, [r0, #4]
4928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCMR2 */
4930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 247              		.loc 1 4930 0
 248 0060 C461     		str	r4, [r0, #28]
4931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the Capture Compare Register value */
4933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCR3 = OC_Config->Pulse;
 249              		.loc 1 4933 0
 250 0062 4B68     		ldr	r3, [r1, #4]
 251              	.LVL34:
 252 0064 C363     		str	r3, [r0, #60]
4934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCER */
4936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 253              		.loc 1 4936 0
 254 0066 0262     		str	r2, [r0, #32]
ARM GAS  /tmp/ccNBoJ9q.s 			page 92


4937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 255              		.loc 1 4937 0
 256              		@ sp needed
 257              	.LVL35:
 258 0068 70BD     		pop	{r4, r5, r6, pc}
 259              	.L13:
 260 006a C046     		.align	2
 261              	.L12:
 262 006c FFFEFFFF 		.word	-257
 263 0070 FFFDFFFF 		.word	-513
 264 0074 002C0140 		.word	1073818624
 265 0078 FFF7FFFF 		.word	-2049
 266 007c FFFBFFFF 		.word	-1025
 267 0080 00400140 		.word	1073823744
 268 0084 00440140 		.word	1073824768
 269 0088 00480140 		.word	1073825792
 270 008c FFCFFFFF 		.word	-12289
 271              		.cfi_endproc
 272              	.LFE130:
 274              		.section	.text.TIM_OC4_SetConfig,"ax",%progbits
 275              		.align	2
 276              		.code	16
 277              		.thumb_func
 279              	TIM_OC4_SetConfig:
 280              	.LFB131:
4938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
4940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Time Ouput Compare 4 configuration
4941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx  to select the TIM peripheral
4942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  OC_Config : The ouput configuration structure
4943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
4944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
4945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
4946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 281              		.loc 1 4946 0
 282              		.cfi_startproc
 283              	.LVL36:
 284 0000 70B5     		push	{r4, r5, r6, lr}
 285              	.LCFI2:
 286              		.cfi_def_cfa_offset 16
 287              		.cfi_offset 4, -16
 288              		.cfi_offset 5, -12
 289              		.cfi_offset 6, -8
 290              		.cfi_offset 14, -4
 291              	.LVL37:
4947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccmrx = 0U;
4948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccer = 0U;
4949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpcr2 = 0U;
4950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
4952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC4E;
 292              		.loc 1 4952 0
 293 0002 026A     		ldr	r2, [r0, #32]
 294 0004 134B     		ldr	r3, .L17
 295 0006 1340     		and	r3, r2
 296 0008 0362     		str	r3, [r0, #32]
4953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
ARM GAS  /tmp/ccNBoJ9q.s 			page 93


4954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CCER register value */
4955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 297              		.loc 1 4955 0
 298 000a 056A     		ldr	r5, [r0, #32]
 299              	.LVL38:
4956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
4957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
 300              		.loc 1 4957 0
 301 000c 4368     		ldr	r3, [r0, #4]
 302              	.LVL39:
4958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx CCMR2 register value */
4960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR2;
 303              		.loc 1 4960 0
 304 000e C469     		ldr	r4, [r0, #28]
 305              	.LVL40:
4961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
4963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_OC4M;
4964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_CC4S;
 306              		.loc 1 4964 0
 307 0010 114A     		ldr	r2, .L17+4
 308 0012 1440     		and	r4, r2
 309              	.LVL41:
4965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Output Compare Mode */
4967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx |= (OC_Config->OCMode << 8U);
 310              		.loc 1 4967 0
 311 0014 0E68     		ldr	r6, [r1]
 312 0016 3202     		lsl	r2, r6, #8
 313 0018 1443     		orr	r4, r2
 314              	.LVL42:
4968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the Output Polarity level */
4970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC4P;
 315              		.loc 1 4970 0
 316 001a 104A     		ldr	r2, .L17+8
 317 001c 2A40     		and	r2, r5
 318              	.LVL43:
4971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the Output Compare Polarity */
4972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 12U);
 319              		.loc 1 4972 0
 320 001e 8E68     		ldr	r6, [r1, #8]
 321 0020 3503     		lsl	r5, r6, #12
 322 0022 2A43     		orr	r2, r5
 323              	.LVL44:
4973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 324              		.loc 1 4974 0
 325 0024 0E4D     		ldr	r5, .L17+12
 326 0026 A842     		cmp	r0, r5
 327 0028 08D0     		beq	.L15
 328              		.loc 1 4974 0 is_stmt 0 discriminator 1
 329 002a 0E4D     		ldr	r5, .L17+16
 330 002c A842     		cmp	r0, r5
 331 002e 05D0     		beq	.L15
 332 0030 0D4D     		ldr	r5, .L17+20
ARM GAS  /tmp/ccNBoJ9q.s 			page 94


 333 0032 A842     		cmp	r0, r5
 334 0034 02D0     		beq	.L15
 335 0036 0D4D     		ldr	r5, .L17+24
 336 0038 A842     		cmp	r0, r5
 337 003a 04D1     		bne	.L16
 338              	.L15:
4975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
4976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
4977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    /* Reset the Output Compare IDLE State */
4979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS4;
 339              		.loc 1 4979 0 is_stmt 1
 340 003c 0C4D     		ldr	r5, .L17+28
 341 003e 2B40     		and	r3, r5
 342              	.LVL45:
4980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     /* Set the Output Idle state */
4981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 6U);
 343              		.loc 1 4981 0
 344 0040 4E69     		ldr	r6, [r1, #20]
 345 0042 B501     		lsl	r5, r6, #6
 346 0044 2B43     		orr	r3, r5
 347              	.LVL46:
 348              	.L16:
4982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
4983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CR2 */
4985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 349              		.loc 1 4985 0
 350 0046 4360     		str	r3, [r0, #4]
4986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCMR2 */
4988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 351              		.loc 1 4988 0
 352 0048 C461     		str	r4, [r0, #28]
4989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the Capture Compare Register value */
4991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCR4 = OC_Config->Pulse;
 353              		.loc 1 4991 0
 354 004a 4B68     		ldr	r3, [r1, #4]
 355              	.LVL47:
 356 004c 0364     		str	r3, [r0, #64]
4992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCER */
4994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 357              		.loc 1 4994 0
 358 004e 0262     		str	r2, [r0, #32]
4995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 359              		.loc 1 4995 0
 360              		@ sp needed
 361              	.LVL48:
 362 0050 70BD     		pop	{r4, r5, r6, pc}
 363              	.L18:
 364 0052 C046     		.align	2
 365              	.L17:
 366 0054 FFEFFFFF 		.word	-4097
 367 0058 FF8CFFFF 		.word	-29441
 368 005c FFDFFFFF 		.word	-8193
ARM GAS  /tmp/ccNBoJ9q.s 			page 95


 369 0060 002C0140 		.word	1073818624
 370 0064 00400140 		.word	1073823744
 371 0068 00440140 		.word	1073824768
 372 006c 00480140 		.word	1073825792
 373 0070 FFBFFFFF 		.word	-16385
 374              		.cfi_endproc
 375              	.LFE131:
 377              		.section	.text.TIM_TI1_ConfigInputStage,"ax",%progbits
 378              		.align	2
 379              		.code	16
 380              		.thumb_func
 382              	TIM_TI1_ConfigInputStage:
 383              	.LFB134:
4996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
4997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_SlaveTimer_SetConfig(TIM_HandleTypeDef *htim,
4998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                               TIM_SlaveConfigTypeDef * sSlaveConfig)
4999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
5000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpsmcr = 0U;
5001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccmr1 = 0U;
5002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccer = 0U;
5003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Get the TIMx SMCR register value */
5005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
5006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the Trigger Selection Bits */
5008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_TS;
5009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the Input Trigger source */
5010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->InputTrigger;
5011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the slave mode Bits */
5013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_SMS;
5014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the slave mode */
5015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->SlaveMode;
5016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx SMCR */
5018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
5019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Configure the trigger prescaler, filter, and polarity */
5021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (sSlaveConfig->InputTrigger)
5022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
5023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_TS_ETRF:
5024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
5025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check the parameters */
5026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(htim->Instance));
5027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPRESCALER(sSlaveConfig->TriggerPrescaler));
5028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
5029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
5030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure the ETR Trigger source */
5031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
5032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         sSlaveConfig->TriggerPrescaler,
5033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         sSlaveConfig->TriggerPolarity,
5034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                         sSlaveConfig->TriggerFilter);
5035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
5036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
5037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_TS_TI1F_ED:
5039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
ARM GAS  /tmp/ccNBoJ9q.s 			page 96


5040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check the parameters */
5041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
5042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
5043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Disable the Channel 1: Reset the CC1E Bit */
5045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpccer = htim->Instance->CCER;
5046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCER &= ~TIM_CCER_CC1E;
5047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpccmr1 = htim->Instance->CCMR1;
5048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Set the filter */
5050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpccmr1 &= ~TIM_CCMR1_IC1F;
5051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
5052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Write to TIMx CCMR1 and CCER registers */
5054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 = tmpccmr1;
5055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCER = tmpccer;
5056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
5058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
5059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_TS_TI1FP1:
5061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
5062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check the parameters */
5063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
5064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
5065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
5066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure TI1 Filter and Polarity */
5068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
5069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                sSlaveConfig->TriggerPolarity,
5070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                sSlaveConfig->TriggerFilter);
5071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
5072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
5073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_TS_TI2FP2:
5075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
5076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check the parameters */
5077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
5078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
5079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
5080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Configure TI2 Filter and Polarity */
5082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance,
5083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                 sSlaveConfig->TriggerPolarity,
5084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                                 sSlaveConfig->TriggerFilter);
5085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
5086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
5087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_TS_ITR0:
5089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
5090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check the parameter */
5091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
5092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
5093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
5094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_TS_ITR1:
5096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
ARM GAS  /tmp/ccNBoJ9q.s 			page 97


5097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check the parameter */
5098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
5099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
5100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
5101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_TS_ITR2:
5103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
5104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check the parameter */
5105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
5106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
5107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
5108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   case TIM_TS_ITR3:
5110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
5111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       /* Check the parameter */
5112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
5113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
5114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
5115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   default:
5117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
5118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
5119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
5120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
5122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configure the TI1 as Input.
5123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx  to select the TIM peripheral.
5124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
5125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
5126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
5127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
5128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE 
5129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICSelection : specifies the input to be used.
5130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
5131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI : TIM Input 1 is selected to be connected to IC1.
5132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI : TIM Input 1 is selected to be connected to IC2.
5133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC : TIM Input 1 is selected to be connected to TRC.
5134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICFilter : Specifies the Input Capture Filter.
5135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
5136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
5137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI2FP1 
5138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *       (on channel2 path) is used as the input signal. Therefore CCMR1 must be 
5139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
5140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
5141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** void TIM_TI1_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
5142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                        uint32_t TIM_ICFilter)
5143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
5144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccmr1 = 0U;
5145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccer = 0U;
5146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
5148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
5149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
5150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = TIMx->CCER;
5151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Input */
5153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_CC2_INSTANCE(TIMx) != RESET)
ARM GAS  /tmp/ccNBoJ9q.s 			page 98


5154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
5155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccmr1 &= ~TIM_CCMR1_CC1S;
5156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccmr1 |= TIM_ICSelection;
5157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
5158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else
5159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   {
5160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccmr1 |= TIM_CCMR1_CC1S_0;
5161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   }
5162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the filter */
5164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC1F;
5165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 4U) & TIM_CCMR1_IC1F);
5166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Polarity and set the CC1E Bit */
5168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
5169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity & (TIM_CCER_CC1P | TIM_CCER_CC1NP));
5170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
5172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1;
5173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER = tmpccer;
5174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
5175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
5177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configure the Polarity and Filter for TI1.
5178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx  to select the TIM peripheral.
5179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
5180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
5181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
5182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
5183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
5184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICFilter : Specifies the Input Capture Filter.
5185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
5186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
5187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
5188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
5189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 384              		.loc 1 5189 0
 385              		.cfi_startproc
 386              	.LVL49:
 387 0000 30B5     		push	{r4, r5, lr}
 388              	.LCFI3:
 389              		.cfi_def_cfa_offset 12
 390              		.cfi_offset 4, -12
 391              		.cfi_offset 5, -8
 392              		.cfi_offset 14, -4
 393              	.LVL50:
5190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccmr1 = 0U;
5191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccer = 0U;
5192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
5194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 394              		.loc 1 5194 0
 395 0002 036A     		ldr	r3, [r0, #32]
 396              	.LVL51:
5195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
 397              		.loc 1 5195 0
 398 0004 046A     		ldr	r4, [r0, #32]
ARM GAS  /tmp/ccNBoJ9q.s 			page 99


 399 0006 0125     		mov	r5, #1
 400 0008 AC43     		bic	r4, r5
 401 000a 0462     		str	r4, [r0, #32]
5196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 402              		.loc 1 5196 0
 403 000c 8469     		ldr	r4, [r0, #24]
 404              	.LVL52:
5197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the filter */
5199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC1F;
 405              		.loc 1 5199 0
 406 000e F025     		mov	r5, #240
 407 0010 AC43     		bic	r4, r5
 408              	.LVL53:
5200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 4U);
 409              		.loc 1 5200 0
 410 0012 1201     		lsl	r2, r2, #4
 411              	.LVL54:
 412 0014 2243     		orr	r2, r4
 413              	.LVL55:
5201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Polarity and set the CC1E Bit */
5203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 414              		.loc 1 5203 0
 415 0016 0A24     		mov	r4, #10
 416 0018 A343     		bic	r3, r4
 417              	.LVL56:
5204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= TIM_ICPolarity;
 418              		.loc 1 5204 0
 419 001a 1943     		orr	r1, r3
 420              	.LVL57:
5205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
5207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 421              		.loc 1 5207 0
 422 001c 8261     		str	r2, [r0, #24]
5208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 423              		.loc 1 5208 0
 424 001e 0162     		str	r1, [r0, #32]
5209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 425              		.loc 1 5209 0
 426              		@ sp needed
 427 0020 30BD     		pop	{r4, r5, pc}
 428              		.cfi_endproc
 429              	.LFE134:
 431 0022 C046     		.section	.text.TIM_TI2_SetConfig,"ax",%progbits
 432              		.align	2
 433              		.code	16
 434              		.thumb_func
 436              	TIM_TI2_SetConfig:
 437              	.LFB135:
5210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
5212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configure the TI2 as Input.
5213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx  to select the TIM peripheral
5214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
5215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccNBoJ9q.s 			page 100


5216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
5217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
5218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE 
5219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICSelection : specifies the input to be used.
5220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
5221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI : TIM Input 2 is selected to be connected to IC2.
5222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI : TIM Input 2 is selected to be connected to IC1.
5223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC : TIM Input 2 is selected to be connected to TRC.
5224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICFilter : Specifies the Input Capture Filter.
5225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
5226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
5227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI1FP2 
5228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR1 must be 
5229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
5230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
5231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_TI2_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
5232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                        uint32_t TIM_ICFilter)
5233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 438              		.loc 1 5233 0
 439              		.cfi_startproc
 440              	.LVL58:
 441 0000 70B5     		push	{r4, r5, r6, lr}
 442              	.LCFI4:
 443              		.cfi_def_cfa_offset 16
 444              		.cfi_offset 4, -16
 445              		.cfi_offset 5, -12
 446              		.cfi_offset 6, -8
 447              		.cfi_offset 14, -4
 448              	.LVL59:
5234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccmr1 = 0U;
5235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccer = 0U;
5236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
5238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
 449              		.loc 1 5238 0
 450 0002 046A     		ldr	r4, [r0, #32]
 451 0004 1025     		mov	r5, #16
 452 0006 AC43     		bic	r4, r5
 453 0008 0462     		str	r4, [r0, #32]
5239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 454              		.loc 1 5239 0
 455 000a 8669     		ldr	r6, [r0, #24]
 456              	.LVL60:
5240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 457              		.loc 1 5240 0
 458 000c 056A     		ldr	r5, [r0, #32]
 459              	.LVL61:
5241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Input */
5243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_CC2S;
 460              		.loc 1 5243 0
 461 000e 094C     		ldr	r4, .L21
 462 0010 3440     		and	r4, r6
 463              	.LVL62:
5244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICSelection << 8U);
 464              		.loc 1 5244 0
 465 0012 1202     		lsl	r2, r2, #8
ARM GAS  /tmp/ccNBoJ9q.s 			page 101


 466              	.LVL63:
 467 0014 2243     		orr	r2, r4
 468              	.LVL64:
5245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the filter */
5247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC2F;
 469              		.loc 1 5247 0
 470 0016 084C     		ldr	r4, .L21+4
 471 0018 2240     		and	r2, r4
 472              	.LVL65:
5248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 12U) & TIM_CCMR1_IC2F);
 473              		.loc 1 5248 0
 474 001a 1B07     		lsl	r3, r3, #28
 475              	.LVL66:
 476 001c 1B0C     		lsr	r3, r3, #16
 477 001e 1A43     		orr	r2, r3
 478              	.LVL67:
5249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Polarity and set the CC2E Bit */
5251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 479              		.loc 1 5251 0
 480 0020 A024     		mov	r4, #160
 481 0022 2B1C     		mov	r3, r5
 482 0024 A343     		bic	r3, r4
 483              	.LVL68:
5252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 4U) & (TIM_CCER_CC2P | TIM_CCER_CC2NP));
 484              		.loc 1 5252 0
 485 0026 0901     		lsl	r1, r1, #4
 486              	.LVL69:
 487 0028 0C40     		and	r4, r1
 488 002a 1C43     		orr	r4, r3
 489              	.LVL70:
5253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
5255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 490              		.loc 1 5255 0
 491 002c 8261     		str	r2, [r0, #24]
5256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 492              		.loc 1 5256 0
 493 002e 0462     		str	r4, [r0, #32]
5257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 494              		.loc 1 5257 0
 495              		@ sp needed
 496              	.LVL71:
 497 0030 70BD     		pop	{r4, r5, r6, pc}
 498              	.L22:
 499 0032 C046     		.align	2
 500              	.L21:
 501 0034 FFFCFFFF 		.word	-769
 502 0038 FF0FFFFF 		.word	-61441
 503              		.cfi_endproc
 504              	.LFE135:
 506              		.section	.text.TIM_TI2_ConfigInputStage,"ax",%progbits
 507              		.align	2
 508              		.code	16
 509              		.thumb_func
 511              	TIM_TI2_ConfigInputStage:
ARM GAS  /tmp/ccNBoJ9q.s 			page 102


 512              	.LFB136:
5258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
5260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configure the Polarity and Filter for TI2.
5261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx  to select the TIM peripheral.
5262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
5263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
5264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
5265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
5266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
5267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICFilter : Specifies the Input Capture Filter.
5268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
5269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
5270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
5271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
5272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 513              		.loc 1 5272 0
 514              		.cfi_startproc
 515              	.LVL72:
 516 0000 30B5     		push	{r4, r5, lr}
 517              	.LCFI5:
 518              		.cfi_def_cfa_offset 12
 519              		.cfi_offset 4, -12
 520              		.cfi_offset 5, -8
 521              		.cfi_offset 14, -4
 522              	.LVL73:
5273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccmr1 = 0U;
5274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccer = 0U;
5275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
5277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
 523              		.loc 1 5277 0
 524 0002 036A     		ldr	r3, [r0, #32]
 525 0004 1024     		mov	r4, #16
 526 0006 A343     		bic	r3, r4
 527 0008 0362     		str	r3, [r0, #32]
5278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 528              		.loc 1 5278 0
 529 000a 8569     		ldr	r5, [r0, #24]
 530              	.LVL74:
5279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 531              		.loc 1 5279 0
 532 000c 036A     		ldr	r3, [r0, #32]
 533              	.LVL75:
5280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the filter */
5282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC2F;
 534              		.loc 1 5282 0
 535 000e 054C     		ldr	r4, .L24
 536 0010 2C40     		and	r4, r5
 537              	.LVL76:
5283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 12U);
 538              		.loc 1 5283 0
 539 0012 1203     		lsl	r2, r2, #12
 540              	.LVL77:
 541 0014 2243     		orr	r2, r4
 542              	.LVL78:
ARM GAS  /tmp/ccNBoJ9q.s 			page 103


5284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Polarity and set the CC2E Bit */
5286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 543              		.loc 1 5286 0
 544 0016 A024     		mov	r4, #160
 545 0018 A343     		bic	r3, r4
 546              	.LVL79:
5287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity << 4U);
 547              		.loc 1 5287 0
 548 001a 0901     		lsl	r1, r1, #4
 549              	.LVL80:
 550 001c 1943     		orr	r1, r3
 551              	.LVL81:
5288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
5290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 552              		.loc 1 5290 0
 553 001e 8261     		str	r2, [r0, #24]
5291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 554              		.loc 1 5291 0
 555 0020 0162     		str	r1, [r0, #32]
5292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 556              		.loc 1 5292 0
 557              		@ sp needed
 558 0022 30BD     		pop	{r4, r5, pc}
 559              	.L25:
 560              		.align	2
 561              	.L24:
 562 0024 FF0FFFFF 		.word	-61441
 563              		.cfi_endproc
 564              	.LFE136:
 566              		.section	.text.TIM_TI3_SetConfig,"ax",%progbits
 567              		.align	2
 568              		.code	16
 569              		.thumb_func
 571              	TIM_TI3_SetConfig:
 572              	.LFB137:
5293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
5295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configure the TI3 as Input.
5296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx  to select the TIM peripheral
5297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
5298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
5299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
5300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
5301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE 
5302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICSelection : specifies the input to be used.
5303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
5304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI : TIM Input 3 is selected to be connected to IC3.
5305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI : TIM Input 3 is selected to be connected to IC4.
5306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC : TIM Input 3 is selected to be connected to TRC.
5307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICFilter : Specifies the Input Capture Filter.
5308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
5309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
5310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI3FP4 
5311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR2 must be 
5312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
ARM GAS  /tmp/ccNBoJ9q.s 			page 104


5313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
5314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_TI3_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
5315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                        uint32_t TIM_ICFilter)
5316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 573              		.loc 1 5316 0
 574              		.cfi_startproc
 575              	.LVL82:
 576 0000 70B5     		push	{r4, r5, r6, lr}
 577              	.LCFI6:
 578              		.cfi_def_cfa_offset 16
 579              		.cfi_offset 4, -16
 580              		.cfi_offset 5, -12
 581              		.cfi_offset 6, -8
 582              		.cfi_offset 14, -4
 583              	.LVL83:
5317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccmr2 = 0U;
5318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccer = 0U;
5319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
5321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC3E;
 584              		.loc 1 5321 0
 585 0002 056A     		ldr	r5, [r0, #32]
 586 0004 0C4C     		ldr	r4, .L27
 587 0006 2C40     		and	r4, r5
 588 0008 0462     		str	r4, [r0, #32]
5322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 589              		.loc 1 5322 0
 590 000a C569     		ldr	r5, [r0, #28]
 591              	.LVL84:
5323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 592              		.loc 1 5323 0
 593 000c 046A     		ldr	r4, [r0, #32]
 594              	.LVL85:
5324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Input */
5326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_CC3S;
 595              		.loc 1 5326 0
 596 000e 0326     		mov	r6, #3
 597 0010 B543     		bic	r5, r6
 598              	.LVL86:
5327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr2 |= TIM_ICSelection;
 599              		.loc 1 5327 0
 600 0012 2A43     		orr	r2, r5
 601              	.LVL87:
5328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the filter */
5330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_IC3F;
 602              		.loc 1 5330 0
 603 0014 F025     		mov	r5, #240
 604 0016 AA43     		bic	r2, r5
 605              	.LVL88:
 606 0018 151C     		mov	r5, r2
 607              	.LVL89:
5331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr2 |= ((TIM_ICFilter << 4U) & TIM_CCMR2_IC3F);
 608              		.loc 1 5331 0
 609 001a 1B01     		lsl	r3, r3, #4
 610              	.LVL90:
ARM GAS  /tmp/ccNBoJ9q.s 			page 105


 611 001c FF22     		mov	r2, #255
 612              	.LVL91:
 613 001e 1A40     		and	r2, r3
 614 0020 2A43     		orr	r2, r5
 615              	.LVL92:
5332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Polarity and set the CC3E Bit */
5334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 616              		.loc 1 5334 0
 617 0022 064B     		ldr	r3, .L27+4
 618 0024 2340     		and	r3, r4
 619              	.LVL93:
5335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 8U) & (TIM_CCER_CC3P | TIM_CCER_CC3NP));
 620              		.loc 1 5335 0
 621 0026 0902     		lsl	r1, r1, #8
 622              	.LVL94:
 623 0028 A024     		mov	r4, #160
 624 002a 2401     		lsl	r4, r4, #4
 625 002c 2140     		and	r1, r4
 626 002e 1943     		orr	r1, r3
 627              	.LVL95:
5336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
5338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 628              		.loc 1 5338 0
 629 0030 C261     		str	r2, [r0, #28]
5339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 630              		.loc 1 5339 0
 631 0032 0162     		str	r1, [r0, #32]
5340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 632              		.loc 1 5340 0
 633              		@ sp needed
 634 0034 70BD     		pop	{r4, r5, r6, pc}
 635              	.L28:
 636 0036 C046     		.align	2
 637              	.L27:
 638 0038 FFFEFFFF 		.word	-257
 639 003c FFF5FFFF 		.word	-2561
 640              		.cfi_endproc
 641              	.LFE137:
 643              		.section	.text.TIM_TI4_SetConfig,"ax",%progbits
 644              		.align	2
 645              		.code	16
 646              		.thumb_func
 648              	TIM_TI4_SetConfig:
 649              	.LFB138:
5341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
5343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configure the TI4 as Input.
5344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
5345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
5346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
5347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
5348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
5349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE 
5350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICSelection : specifies the input to be used.
5351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccNBoJ9q.s 			page 106


5352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI : TIM Input 4 is selected to be connected to IC4.
5353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI : TIM Input 4 is selected to be connected to IC3.
5354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC : TIM Input 4 is selected to be connected to TRC.
5355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ICFilter : Specifies the Input Capture Filter.
5356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
5357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI4FP3 
5358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR2 must be 
5359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
5360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
5361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
5362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_TI4_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
5363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                        uint32_t TIM_ICFilter)
5364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 650              		.loc 1 5364 0
 651              		.cfi_startproc
 652              	.LVL96:
 653 0000 70B5     		push	{r4, r5, r6, lr}
 654              	.LCFI7:
 655              		.cfi_def_cfa_offset 16
 656              		.cfi_offset 4, -16
 657              		.cfi_offset 5, -12
 658              		.cfi_offset 6, -8
 659              		.cfi_offset 14, -4
 660              	.LVL97:
5365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccmr2 = 0U;
5366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpccer = 0U;
5367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
5369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC4E;
 661              		.loc 1 5369 0
 662 0002 056A     		ldr	r5, [r0, #32]
 663 0004 0B4C     		ldr	r4, .L30
 664 0006 2C40     		and	r4, r5
 665 0008 0462     		str	r4, [r0, #32]
5370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 666              		.loc 1 5370 0
 667 000a C669     		ldr	r6, [r0, #28]
 668              	.LVL98:
5371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 669              		.loc 1 5371 0
 670 000c 046A     		ldr	r4, [r0, #32]
 671              	.LVL99:
5372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Input */
5374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_CC4S;
 672              		.loc 1 5374 0
 673 000e 0A4D     		ldr	r5, .L30+4
 674 0010 3540     		and	r5, r6
 675              	.LVL100:
5375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr2 |= (TIM_ICSelection << 8U);
 676              		.loc 1 5375 0
 677 0012 1202     		lsl	r2, r2, #8
 678              	.LVL101:
 679 0014 2A43     		orr	r2, r5
 680              	.LVL102:
5376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the filter */
ARM GAS  /tmp/ccNBoJ9q.s 			page 107


5378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_IC4F;
 681              		.loc 1 5378 0
 682 0016 094D     		ldr	r5, .L30+8
 683 0018 2A40     		and	r2, r5
 684              	.LVL103:
5379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr2 |= ((TIM_ICFilter << 12U) & TIM_CCMR2_IC4F);
 685              		.loc 1 5379 0
 686 001a 1B07     		lsl	r3, r3, #28
 687              	.LVL104:
 688 001c 1B0C     		lsr	r3, r3, #16
 689 001e 1A43     		orr	r2, r3
 690              	.LVL105:
5380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Select the Polarity and set the CC4E Bit */
5382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 691              		.loc 1 5382 0
 692 0020 074B     		ldr	r3, .L30+12
 693 0022 2340     		and	r3, r4
 694              	.LVL106:
5383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 12U) & (TIM_CCER_CC4P | TIM_CCER_CC4NP));
 695              		.loc 1 5383 0
 696 0024 0903     		lsl	r1, r1, #12
 697              	.LVL107:
 698 0026 A024     		mov	r4, #160
 699 0028 2402     		lsl	r4, r4, #8
 700 002a 2140     		and	r1, r4
 701 002c 1943     		orr	r1, r3
 702              	.LVL108:
5384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
5386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 703              		.loc 1 5386 0
 704 002e C261     		str	r2, [r0, #28]
5387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER = tmpccer ;
 705              		.loc 1 5387 0
 706 0030 0162     		str	r1, [r0, #32]
5388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 707              		.loc 1 5388 0
 708              		@ sp needed
 709 0032 70BD     		pop	{r4, r5, r6, pc}
 710              	.L31:
 711              		.align	2
 712              	.L30:
 713 0034 FFEFFFFF 		.word	-4097
 714 0038 FFFCFFFF 		.word	-769
 715 003c FF0FFFFF 		.word	-61441
 716 0040 FF5FFFFF 		.word	-40961
 717              		.cfi_endproc
 718              	.LFE138:
 720              		.section	.text.TIM_ITRx_SetConfig,"ax",%progbits
 721              		.align	2
 722              		.code	16
 723              		.thumb_func
 725              	TIM_ITRx_SetConfig:
 726              	.LFB139:
5389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
ARM GAS  /tmp/ccNBoJ9q.s 			page 108


5391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Selects the Input Trigger source
5392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx  to select the TIM peripheral
5393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  InputTriggerSource : The Input Trigger source.
5394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
5395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_TS_ITR0 : Internal Trigger 0
5396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_TS_ITR1 : Internal Trigger 1
5397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_TS_ITR2 : Internal Trigger 2
5398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_TS_ITR3 : Internal Trigger 3
5399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_TS_TI1F_ED : TI1 Edge Detector
5400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_TS_TI1FP1 : Filtered Timer Input 1
5401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_TS_TI2FP2 : Filtered Timer Input 2
5402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_TS_ETRF : External Trigger input
5403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
5404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
5405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint16_t InputTriggerSource)
5406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 727              		.loc 1 5406 0
 728              		.cfi_startproc
 729              	.LVL109:
5407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpsmcr = 0U;
5408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    /* Get the TIMx SMCR register value */
5410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    tmpsmcr = TIMx->SMCR;
 730              		.loc 1 5410 0
 731 0000 8368     		ldr	r3, [r0, #8]
 732              	.LVL110:
5411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    /* Reset the TS Bits */
5412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    tmpsmcr &= ~TIM_SMCR_TS;
 733              		.loc 1 5412 0
 734 0002 7022     		mov	r2, #112
 735 0004 9343     		bic	r3, r2
 736              	.LVL111:
5413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    /* Set the Input Trigger source and the slave mode*/
5414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    tmpsmcr |= InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1;
 737              		.loc 1 5414 0
 738 0006 0722     		mov	r2, #7
 739 0008 1143     		orr	r1, r2
 740              	.LVL112:
 741 000a 1943     		orr	r1, r3
 742              	.LVL113:
5415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    /* Write to TIMx SMCR */
5416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    TIMx->SMCR = tmpsmcr;
 743              		.loc 1 5416 0
 744 000c 8160     		str	r1, [r0, #8]
5417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 745              		.loc 1 5417 0
 746              		@ sp needed
 747 000e 7047     		bx	lr
 748              		.cfi_endproc
 749              	.LFE139:
 751              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 752              		.align	2
 753              		.weak	HAL_TIM_Base_MspInit
 754              		.code	16
 755              		.thumb_func
 757              	HAL_TIM_Base_MspInit:
 758              	.LFB36:
ARM GAS  /tmp/ccNBoJ9q.s 			page 109


 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 759              		.loc 1 271 0
 760              		.cfi_startproc
 761              	.LVL114:
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 762              		.loc 1 278 0
 763              		@ sp needed
 764 0000 7047     		bx	lr
 765              		.cfi_endproc
 766              	.LFE36:
 768 0002 C046     		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 769              		.align	2
 770              		.weak	HAL_TIM_Base_MspDeInit
 771              		.code	16
 772              		.thumb_func
 774              	HAL_TIM_Base_MspDeInit:
 775              	.LFB37:
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 776              		.loc 1 286 0
 777              		.cfi_startproc
 778              	.LVL115:
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 779              		.loc 1 293 0
 780              		@ sp needed
 781 0000 7047     		bx	lr
 782              		.cfi_endproc
 783              	.LFE37:
 785 0002 C046     		.section	.text.HAL_TIM_Base_DeInit,"ax",%progbits
 786              		.align	2
 787              		.global	HAL_TIM_Base_DeInit
 788              		.code	16
 789              		.thumb_func
 791              	HAL_TIM_Base_DeInit:
 792              	.LFB35:
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 793              		.loc 1 244 0
 794              		.cfi_startproc
 795              	.LVL116:
 796 0000 10B5     		push	{r4, lr}
 797              	.LCFI8:
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 4, -8
 800              		.cfi_offset 14, -4
 801 0002 041C     		mov	r4, r0
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 802              		.loc 1 248 0
 803 0004 0222     		mov	r2, #2
 804 0006 3D23     		mov	r3, #61
 805 0008 C254     		strb	r2, [r0, r3]
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 806              		.loc 1 251 0
 807 000a 0368     		ldr	r3, [r0]
 808 000c 196A     		ldr	r1, [r3, #32]
 809 000e 0A4A     		ldr	r2, .L37
 810 0010 1142     		tst	r1, r2
 811 0012 07D1     		bne	.L36
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
ARM GAS  /tmp/ccNBoJ9q.s 			page 110


 812              		.loc 1 251 0 is_stmt 0 discriminator 1
 813 0014 196A     		ldr	r1, [r3, #32]
 814 0016 094A     		ldr	r2, .L37+4
 815 0018 1142     		tst	r1, r2
 816 001a 03D1     		bne	.L36
 817 001c 1A68     		ldr	r2, [r3]
 818 001e 0121     		mov	r1, #1
 819 0020 8A43     		bic	r2, r1
 820 0022 1A60     		str	r2, [r3]
 821              	.L36:
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_Base_MspDeInit(htim);
 822              		.loc 1 254 0 is_stmt 1
 823 0024 201C     		mov	r0, r4
 824              	.LVL117:
 825 0026 FFF7FEFF 		bl	HAL_TIM_Base_MspDeInit
 826              	.LVL118:
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 827              		.loc 1 257 0
 828 002a 0023     		mov	r3, #0
 829 002c 3D22     		mov	r2, #61
 830 002e A354     		strb	r3, [r4, r2]
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 831              		.loc 1 260 0
 832 0030 3C22     		mov	r2, #60
 833 0032 A354     		strb	r3, [r4, r2]
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 834              		.loc 1 263 0
 835 0034 0020     		mov	r0, #0
 836              		@ sp needed
 837              	.LVL119:
 838 0036 10BD     		pop	{r4, pc}
 839              	.L38:
 840              		.align	2
 841              	.L37:
 842 0038 11110000 		.word	4369
 843 003c 44040000 		.word	1092
 844              		.cfi_endproc
 845              	.LFE35:
 847              		.section	.text.HAL_TIM_Base_Start,"ax",%progbits
 848              		.align	2
 849              		.global	HAL_TIM_Base_Start
 850              		.code	16
 851              		.thumb_func
 853              	HAL_TIM_Base_Start:
 854              	.LFB38:
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 855              		.loc 1 302 0
 856              		.cfi_startproc
 857              	.LVL120:
 858 0000 10B5     		push	{r4, lr}
 859              	.LCFI9:
 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 4, -8
 862              		.cfi_offset 14, -4
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 863              		.loc 1 307 0
 864 0002 3D23     		mov	r3, #61
ARM GAS  /tmp/ccNBoJ9q.s 			page 111


 865 0004 0222     		mov	r2, #2
 866 0006 C254     		strb	r2, [r0, r3]
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 867              		.loc 1 310 0
 868 0008 0168     		ldr	r1, [r0]
 869 000a 0C68     		ldr	r4, [r1]
 870 000c 0122     		mov	r2, #1
 871 000e 1443     		orr	r4, r2
 872 0010 0C60     		str	r4, [r1]
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 873              		.loc 1 313 0
 874 0012 C254     		strb	r2, [r0, r3]
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 875              		.loc 1 317 0
 876 0014 0020     		mov	r0, #0
 877              	.LVL121:
 878              		@ sp needed
 879 0016 10BD     		pop	{r4, pc}
 880              		.cfi_endproc
 881              	.LFE38:
 883              		.section	.text.HAL_TIM_Base_Stop,"ax",%progbits
 884              		.align	2
 885              		.global	HAL_TIM_Base_Stop
 886              		.code	16
 887              		.thumb_func
 889              	HAL_TIM_Base_Stop:
 890              	.LFB39:
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 891              		.loc 1 325 0
 892              		.cfi_startproc
 893              	.LVL122:
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 894              		.loc 1 330 0
 895 0000 0222     		mov	r2, #2
 896 0002 3D23     		mov	r3, #61
 897 0004 C254     		strb	r2, [r0, r3]
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 898              		.loc 1 333 0
 899 0006 0368     		ldr	r3, [r0]
 900 0008 196A     		ldr	r1, [r3, #32]
 901 000a 084A     		ldr	r2, .L42
 902 000c 1142     		tst	r1, r2
 903 000e 07D1     		bne	.L41
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 904              		.loc 1 333 0 is_stmt 0 discriminator 1
 905 0010 196A     		ldr	r1, [r3, #32]
 906 0012 074A     		ldr	r2, .L42+4
 907 0014 1142     		tst	r1, r2
 908 0016 03D1     		bne	.L41
 909 0018 1A68     		ldr	r2, [r3]
 910 001a 0121     		mov	r1, #1
 911 001c 8A43     		bic	r2, r1
 912 001e 1A60     		str	r2, [r3]
 913              	.L41:
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 914              		.loc 1 336 0 is_stmt 1
 915 0020 0122     		mov	r2, #1
ARM GAS  /tmp/ccNBoJ9q.s 			page 112


 916 0022 3D23     		mov	r3, #61
 917 0024 C254     		strb	r2, [r0, r3]
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 918              		.loc 1 340 0
 919 0026 0020     		mov	r0, #0
 920              	.LVL123:
 921              		@ sp needed
 922 0028 7047     		bx	lr
 923              	.L43:
 924 002a C046     		.align	2
 925              	.L42:
 926 002c 11110000 		.word	4369
 927 0030 44040000 		.word	1092
 928              		.cfi_endproc
 929              	.LFE39:
 931              		.section	.text.HAL_TIM_Base_Start_IT,"ax",%progbits
 932              		.align	2
 933              		.global	HAL_TIM_Base_Start_IT
 934              		.code	16
 935              		.thumb_func
 937              	HAL_TIM_Base_Start_IT:
 938              	.LFB40:
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 939              		.loc 1 348 0
 940              		.cfi_startproc
 941              	.LVL124:
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 942              		.loc 1 353 0
 943 0000 0368     		ldr	r3, [r0]
 944 0002 D968     		ldr	r1, [r3, #12]
 945 0004 0122     		mov	r2, #1
 946 0006 1143     		orr	r1, r2
 947 0008 D960     		str	r1, [r3, #12]
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 948              		.loc 1 356 0
 949 000a 0368     		ldr	r3, [r0]
 950 000c 1968     		ldr	r1, [r3]
 951 000e 0A43     		orr	r2, r1
 952 0010 1A60     		str	r2, [r3]
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 953              		.loc 1 360 0
 954 0012 0020     		mov	r0, #0
 955              	.LVL125:
 956              		@ sp needed
 957 0014 7047     		bx	lr
 958              		.cfi_endproc
 959              	.LFE40:
 961 0016 C046     		.section	.text.HAL_TIM_Base_Stop_IT,"ax",%progbits
 962              		.align	2
 963              		.global	HAL_TIM_Base_Stop_IT
 964              		.code	16
 965              		.thumb_func
 967              	HAL_TIM_Base_Stop_IT:
 968              	.LFB41:
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 969              		.loc 1 368 0
 970              		.cfi_startproc
ARM GAS  /tmp/ccNBoJ9q.s 			page 113


 971              	.LVL126:
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
 972              		.loc 1 372 0
 973 0000 0368     		ldr	r3, [r0]
 974 0002 DA68     		ldr	r2, [r3, #12]
 975 0004 0121     		mov	r1, #1
 976 0006 8A43     		bic	r2, r1
 977 0008 DA60     		str	r2, [r3, #12]
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 978              		.loc 1 375 0
 979 000a 0368     		ldr	r3, [r0]
 980 000c 196A     		ldr	r1, [r3, #32]
 981 000e 064A     		ldr	r2, .L47
 982 0010 1142     		tst	r1, r2
 983 0012 07D1     		bne	.L46
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 984              		.loc 1 375 0 is_stmt 0 discriminator 1
 985 0014 196A     		ldr	r1, [r3, #32]
 986 0016 054A     		ldr	r2, .L47+4
 987 0018 1142     		tst	r1, r2
 988 001a 03D1     		bne	.L46
 989 001c 1A68     		ldr	r2, [r3]
 990 001e 0121     		mov	r1, #1
 991 0020 8A43     		bic	r2, r1
 992 0022 1A60     		str	r2, [r3]
 993              	.L46:
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 994              		.loc 1 379 0 is_stmt 1
 995 0024 0020     		mov	r0, #0
 996              	.LVL127:
 997              		@ sp needed
 998 0026 7047     		bx	lr
 999              	.L48:
 1000              		.align	2
 1001              	.L47:
 1002 0028 11110000 		.word	4369
 1003 002c 44040000 		.word	1092
 1004              		.cfi_endproc
 1005              	.LFE41:
 1007              		.section	.text.HAL_TIM_Base_Start_DMA,"ax",%progbits
 1008              		.align	2
 1009              		.global	HAL_TIM_Base_Start_DMA
 1010              		.code	16
 1011              		.thumb_func
 1013              	HAL_TIM_Base_Start_DMA:
 1014              	.LFB42:
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1015              		.loc 1 389 0
 1016              		.cfi_startproc
 1017              	.LVL128:
 1018 0000 10B5     		push	{r4, lr}
 1019              	.LCFI10:
 1020              		.cfi_def_cfa_offset 8
 1021              		.cfi_offset 4, -8
 1022              		.cfi_offset 14, -4
 1023 0002 041C     		mov	r4, r0
 1024 0004 131C     		mov	r3, r2
ARM GAS  /tmp/ccNBoJ9q.s 			page 114


 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 1025              		.loc 1 393 0
 1026 0006 3D20     		mov	r0, #61
 1027              	.LVL129:
 1028 0008 205C     		ldrb	r0, [r4, r0]
 1029 000a 0228     		cmp	r0, #2
 1030 000c 22D0     		beq	.L53
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 1031              		.loc 1 397 0
 1032 000e 3D22     		mov	r2, #61
 1033              	.LVL130:
 1034 0010 A25C     		ldrb	r2, [r4, r2]
 1035 0012 012A     		cmp	r2, #1
 1036 0014 06D1     		bne	.L51
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((pData == 0 ) && (Length > 0))
 1037              		.loc 1 399 0
 1038 0016 0029     		cmp	r1, #0
 1039 0018 01D1     		bne	.L52
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((pData == 0 ) && (Length > 0))
 1040              		.loc 1 399 0 is_stmt 0 discriminator 1
 1041 001a 002B     		cmp	r3, #0
 1042 001c 1CD1     		bne	.L54
 1043              	.L52:
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 1044              		.loc 1 405 0 is_stmt 1
 1045 001e 0220     		mov	r0, #2
 1046 0020 3D22     		mov	r2, #61
 1047 0022 A054     		strb	r0, [r4, r2]
 1048              	.L51:
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
 1049              		.loc 1 409 0
 1050 0024 226A     		ldr	r2, [r4, #32]
 1051 0026 0D48     		ldr	r0, .L55
 1052 0028 9062     		str	r0, [r2, #40]
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
 1053              		.loc 1 412 0
 1054 002a 226A     		ldr	r2, [r4, #32]
 1055 002c 0C48     		ldr	r0, .L55+4
 1056 002e 1063     		str	r0, [r2, #48]
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)pData, (uint32_t)&htim->Instance->ARR, 
 1057              		.loc 1 415 0
 1058 0030 2268     		ldr	r2, [r4]
 1059 0032 2C32     		add	r2, r2, #44
 1060 0034 206A     		ldr	r0, [r4, #32]
 1061 0036 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1062              	.LVL131:
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_UPDATE);
 1063              		.loc 1 418 0
 1064 003a 2368     		ldr	r3, [r4]
 1065 003c D968     		ldr	r1, [r3, #12]
 1066 003e 8022     		mov	r2, #128
 1067 0040 5200     		lsl	r2, r2, #1
 1068 0042 0A43     		orr	r2, r1
 1069 0044 DA60     		str	r2, [r3, #12]
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 1070              		.loc 1 421 0
 1071 0046 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccNBoJ9q.s 			page 115


 1072 0048 1968     		ldr	r1, [r3]
 1073 004a 0122     		mov	r2, #1
 1074 004c 0A43     		orr	r2, r1
 1075 004e 1A60     		str	r2, [r3]
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 1076              		.loc 1 424 0
 1077 0050 0020     		mov	r0, #0
 1078 0052 02E0     		b	.L50
 1079              	.LVL132:
 1080              	.L53:
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
 1081              		.loc 1 395 0
 1082 0054 0220     		mov	r0, #2
 1083 0056 00E0     		b	.L50
 1084              	.LVL133:
 1085              	.L54:
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
 1086              		.loc 1 401 0
 1087 0058 0120     		mov	r0, #1
 1088              	.LVL134:
 1089              	.L50:
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1090              		.loc 1 425 0
 1091              		@ sp needed
 1092              	.LVL135:
 1093 005a 10BD     		pop	{r4, pc}
 1094              	.L56:
 1095              		.align	2
 1096              	.L55:
 1097 005c 00000000 		.word	TIM_DMAPeriodElapsedCplt
 1098 0060 00000000 		.word	TIM_DMAError
 1099              		.cfi_endproc
 1100              	.LFE42:
 1102              		.section	.text.HAL_TIM_Base_Stop_DMA,"ax",%progbits
 1103              		.align	2
 1104              		.global	HAL_TIM_Base_Stop_DMA
 1105              		.code	16
 1106              		.thumb_func
 1108              	HAL_TIM_Base_Stop_DMA:
 1109              	.LFB43:
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1110              		.loc 1 433 0
 1111              		.cfi_startproc
 1112              	.LVL136:
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_UPDATE);
 1113              		.loc 1 438 0
 1114 0000 0368     		ldr	r3, [r0]
 1115 0002 D968     		ldr	r1, [r3, #12]
 1116 0004 0A4A     		ldr	r2, .L59
 1117 0006 0A40     		and	r2, r1
 1118 0008 DA60     		str	r2, [r3, #12]
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1119              		.loc 1 441 0
 1120 000a 0368     		ldr	r3, [r0]
 1121 000c 196A     		ldr	r1, [r3, #32]
 1122 000e 094A     		ldr	r2, .L59+4
 1123 0010 1142     		tst	r1, r2
ARM GAS  /tmp/ccNBoJ9q.s 			page 116


 1124 0012 07D1     		bne	.L58
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1125              		.loc 1 441 0 is_stmt 0 discriminator 1
 1126 0014 196A     		ldr	r1, [r3, #32]
 1127 0016 084A     		ldr	r2, .L59+8
 1128 0018 1142     		tst	r1, r2
 1129 001a 03D1     		bne	.L58
 1130 001c 1A68     		ldr	r2, [r3]
 1131 001e 0121     		mov	r1, #1
 1132 0020 8A43     		bic	r2, r1
 1133 0022 1A60     		str	r2, [r3]
 1134              	.L58:
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 1135              		.loc 1 444 0 is_stmt 1
 1136 0024 0122     		mov	r2, #1
 1137 0026 3D23     		mov	r3, #61
 1138 0028 C254     		strb	r2, [r0, r3]
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1139              		.loc 1 448 0
 1140 002a 0020     		mov	r0, #0
 1141              	.LVL137:
 1142              		@ sp needed
 1143 002c 7047     		bx	lr
 1144              	.L60:
 1145 002e C046     		.align	2
 1146              	.L59:
 1147 0030 FFFEFFFF 		.word	-257
 1148 0034 11110000 		.word	4369
 1149 0038 44040000 		.word	1092
 1150              		.cfi_endproc
 1151              	.LFE43:
 1153              		.section	.text.HAL_TIM_OC_MspInit,"ax",%progbits
 1154              		.align	2
 1155              		.weak	HAL_TIM_OC_MspInit
 1156              		.code	16
 1157              		.thumb_func
 1159              	HAL_TIM_OC_MspInit:
 1160              	.LFB46:
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1161              		.loc 1 549 0
 1162              		.cfi_startproc
 1163              	.LVL138:
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1164              		.loc 1 556 0
 1165              		@ sp needed
 1166 0000 7047     		bx	lr
 1167              		.cfi_endproc
 1168              	.LFE46:
 1170 0002 C046     		.section	.text.HAL_TIM_OC_MspDeInit,"ax",%progbits
 1171              		.align	2
 1172              		.weak	HAL_TIM_OC_MspDeInit
 1173              		.code	16
 1174              		.thumb_func
 1176              	HAL_TIM_OC_MspDeInit:
 1177              	.LFB47:
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1178              		.loc 1 564 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 117


 1179              		.cfi_startproc
 1180              	.LVL139:
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1181              		.loc 1 571 0
 1182              		@ sp needed
 1183 0000 7047     		bx	lr
 1184              		.cfi_endproc
 1185              	.LFE47:
 1187 0002 C046     		.section	.text.HAL_TIM_OC_DeInit,"ax",%progbits
 1188              		.align	2
 1189              		.global	HAL_TIM_OC_DeInit
 1190              		.code	16
 1191              		.thumb_func
 1193              	HAL_TIM_OC_DeInit:
 1194              	.LFB45:
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1195              		.loc 1 522 0
 1196              		.cfi_startproc
 1197              	.LVL140:
 1198 0000 10B5     		push	{r4, lr}
 1199              	.LCFI11:
 1200              		.cfi_def_cfa_offset 8
 1201              		.cfi_offset 4, -8
 1202              		.cfi_offset 14, -4
 1203 0002 041C     		mov	r4, r0
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    htim->State = HAL_TIM_STATE_BUSY;
 1204              		.loc 1 526 0
 1205 0004 0222     		mov	r2, #2
 1206 0006 3D23     		mov	r3, #61
 1207 0008 C254     		strb	r2, [r0, r3]
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1208              		.loc 1 529 0
 1209 000a 0368     		ldr	r3, [r0]
 1210 000c 196A     		ldr	r1, [r3, #32]
 1211 000e 0A4A     		ldr	r2, .L65
 1212 0010 1142     		tst	r1, r2
 1213 0012 07D1     		bne	.L64
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1214              		.loc 1 529 0 is_stmt 0 discriminator 1
 1215 0014 196A     		ldr	r1, [r3, #32]
 1216 0016 094A     		ldr	r2, .L65+4
 1217 0018 1142     		tst	r1, r2
 1218 001a 03D1     		bne	.L64
 1219 001c 1A68     		ldr	r2, [r3]
 1220 001e 0121     		mov	r1, #1
 1221 0020 8A43     		bic	r2, r1
 1222 0022 1A60     		str	r2, [r3]
 1223              	.L64:
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_OC_MspDeInit(htim);
 1224              		.loc 1 532 0 is_stmt 1
 1225 0024 201C     		mov	r0, r4
 1226              	.LVL141:
 1227 0026 FFF7FEFF 		bl	HAL_TIM_OC_MspDeInit
 1228              	.LVL142:
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 1229              		.loc 1 535 0
 1230 002a 0023     		mov	r3, #0
ARM GAS  /tmp/ccNBoJ9q.s 			page 118


 1231 002c 3D22     		mov	r2, #61
 1232 002e A354     		strb	r3, [r4, r2]
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 1233              		.loc 1 538 0
 1234 0030 3C22     		mov	r2, #60
 1235 0032 A354     		strb	r3, [r4, r2]
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1236              		.loc 1 541 0
 1237 0034 0020     		mov	r0, #0
 1238              		@ sp needed
 1239              	.LVL143:
 1240 0036 10BD     		pop	{r4, pc}
 1241              	.L66:
 1242              		.align	2
 1243              	.L65:
 1244 0038 11110000 		.word	4369
 1245 003c 44040000 		.word	1092
 1246              		.cfi_endproc
 1247              	.LFE45:
 1249              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
 1250              		.align	2
 1251              		.weak	HAL_TIM_PWM_MspInit
 1252              		.code	16
 1253              		.thumb_func
 1255              	HAL_TIM_PWM_MspInit:
 1256              	.LFB56:
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1257              		.loc 1 1056 0
 1258              		.cfi_startproc
 1259              	.LVL144:
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1260              		.loc 1 1063 0
 1261              		@ sp needed
 1262 0000 7047     		bx	lr
 1263              		.cfi_endproc
 1264              	.LFE56:
 1266 0002 C046     		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 1267              		.align	2
 1268              		.weak	HAL_TIM_PWM_MspDeInit
 1269              		.code	16
 1270              		.thumb_func
 1272              	HAL_TIM_PWM_MspDeInit:
 1273              	.LFB57:
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1274              		.loc 1 1071 0
 1275              		.cfi_startproc
 1276              	.LVL145:
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1277              		.loc 1 1078 0
 1278              		@ sp needed
 1279 0000 7047     		bx	lr
 1280              		.cfi_endproc
 1281              	.LFE57:
 1283 0002 C046     		.section	.text.HAL_TIM_PWM_DeInit,"ax",%progbits
 1284              		.align	2
 1285              		.global	HAL_TIM_PWM_DeInit
 1286              		.code	16
ARM GAS  /tmp/ccNBoJ9q.s 			page 119


 1287              		.thumb_func
 1289              	HAL_TIM_PWM_DeInit:
 1290              	.LFB55:
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1291              		.loc 1 1029 0
 1292              		.cfi_startproc
 1293              	.LVL146:
 1294 0000 10B5     		push	{r4, lr}
 1295              	.LCFI12:
 1296              		.cfi_def_cfa_offset 8
 1297              		.cfi_offset 4, -8
 1298              		.cfi_offset 14, -4
 1299 0002 041C     		mov	r4, r0
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 1300              		.loc 1 1033 0
 1301 0004 0222     		mov	r2, #2
 1302 0006 3D23     		mov	r3, #61
 1303 0008 C254     		strb	r2, [r0, r3]
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1304              		.loc 1 1036 0
 1305 000a 0368     		ldr	r3, [r0]
 1306 000c 196A     		ldr	r1, [r3, #32]
 1307 000e 0A4A     		ldr	r2, .L71
 1308 0010 1142     		tst	r1, r2
 1309 0012 07D1     		bne	.L70
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1310              		.loc 1 1036 0 is_stmt 0 discriminator 1
 1311 0014 196A     		ldr	r1, [r3, #32]
 1312 0016 094A     		ldr	r2, .L71+4
 1313 0018 1142     		tst	r1, r2
 1314 001a 03D1     		bne	.L70
 1315 001c 1A68     		ldr	r2, [r3]
 1316 001e 0121     		mov	r1, #1
 1317 0020 8A43     		bic	r2, r1
 1318 0022 1A60     		str	r2, [r3]
 1319              	.L70:
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_PWM_MspDeInit(htim);
 1320              		.loc 1 1039 0 is_stmt 1
 1321 0024 201C     		mov	r0, r4
 1322              	.LVL147:
 1323 0026 FFF7FEFF 		bl	HAL_TIM_PWM_MspDeInit
 1324              	.LVL148:
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 1325              		.loc 1 1042 0
 1326 002a 0023     		mov	r3, #0
 1327 002c 3D22     		mov	r2, #61
 1328 002e A354     		strb	r3, [r4, r2]
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 1329              		.loc 1 1045 0
 1330 0030 3C22     		mov	r2, #60
 1331 0032 A354     		strb	r3, [r4, r2]
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1332              		.loc 1 1048 0
 1333 0034 0020     		mov	r0, #0
 1334              		@ sp needed
 1335              	.LVL149:
 1336 0036 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccNBoJ9q.s 			page 120


 1337              	.L72:
 1338              		.align	2
 1339              	.L71:
 1340 0038 11110000 		.word	4369
 1341 003c 44040000 		.word	1092
 1342              		.cfi_endproc
 1343              	.LFE55:
 1345              		.section	.text.HAL_TIM_IC_MspInit,"ax",%progbits
 1346              		.align	2
 1347              		.weak	HAL_TIM_IC_MspInit
 1348              		.code	16
 1349              		.thumb_func
 1351              	HAL_TIM_IC_MspInit:
 1352              	.LFB66:
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1353              		.loc 1 1566 0
 1354              		.cfi_startproc
 1355              	.LVL150:
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1356              		.loc 1 1573 0
 1357              		@ sp needed
 1358 0000 7047     		bx	lr
 1359              		.cfi_endproc
 1360              	.LFE66:
 1362 0002 C046     		.section	.text.HAL_TIM_IC_MspDeInit,"ax",%progbits
 1363              		.align	2
 1364              		.weak	HAL_TIM_IC_MspDeInit
 1365              		.code	16
 1366              		.thumb_func
 1368              	HAL_TIM_IC_MspDeInit:
 1369              	.LFB67:
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1370              		.loc 1 1581 0
 1371              		.cfi_startproc
 1372              	.LVL151:
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1373              		.loc 1 1588 0
 1374              		@ sp needed
 1375 0000 7047     		bx	lr
 1376              		.cfi_endproc
 1377              	.LFE67:
 1379 0002 C046     		.section	.text.HAL_TIM_IC_DeInit,"ax",%progbits
 1380              		.align	2
 1381              		.global	HAL_TIM_IC_DeInit
 1382              		.code	16
 1383              		.thumb_func
 1385              	HAL_TIM_IC_DeInit:
 1386              	.LFB65:
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1387              		.loc 1 1539 0
 1388              		.cfi_startproc
 1389              	.LVL152:
 1390 0000 10B5     		push	{r4, lr}
 1391              	.LCFI13:
 1392              		.cfi_def_cfa_offset 8
 1393              		.cfi_offset 4, -8
 1394              		.cfi_offset 14, -4
ARM GAS  /tmp/ccNBoJ9q.s 			page 121


 1395 0002 041C     		mov	r4, r0
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 1396              		.loc 1 1543 0
 1397 0004 0222     		mov	r2, #2
 1398 0006 3D23     		mov	r3, #61
 1399 0008 C254     		strb	r2, [r0, r3]
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1400              		.loc 1 1546 0
 1401 000a 0368     		ldr	r3, [r0]
 1402 000c 196A     		ldr	r1, [r3, #32]
 1403 000e 0A4A     		ldr	r2, .L77
 1404 0010 1142     		tst	r1, r2
 1405 0012 07D1     		bne	.L76
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1406              		.loc 1 1546 0 is_stmt 0 discriminator 1
 1407 0014 196A     		ldr	r1, [r3, #32]
 1408 0016 094A     		ldr	r2, .L77+4
 1409 0018 1142     		tst	r1, r2
 1410 001a 03D1     		bne	.L76
 1411 001c 1A68     		ldr	r2, [r3]
 1412 001e 0121     		mov	r1, #1
 1413 0020 8A43     		bic	r2, r1
 1414 0022 1A60     		str	r2, [r3]
 1415              	.L76:
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_IC_MspDeInit(htim);
 1416              		.loc 1 1549 0 is_stmt 1
 1417 0024 201C     		mov	r0, r4
 1418              	.LVL153:
 1419 0026 FFF7FEFF 		bl	HAL_TIM_IC_MspDeInit
 1420              	.LVL154:
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 1421              		.loc 1 1552 0
 1422 002a 0023     		mov	r3, #0
 1423 002c 3D22     		mov	r2, #61
 1424 002e A354     		strb	r3, [r4, r2]
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 1425              		.loc 1 1555 0
 1426 0030 3C22     		mov	r2, #60
 1427 0032 A354     		strb	r3, [r4, r2]
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1428              		.loc 1 1558 0
 1429 0034 0020     		mov	r0, #0
 1430              		@ sp needed
 1431              	.LVL155:
 1432 0036 10BD     		pop	{r4, pc}
 1433              	.L78:
 1434              		.align	2
 1435              	.L77:
 1436 0038 11110000 		.word	4369
 1437 003c 44040000 		.word	1092
 1438              		.cfi_endproc
 1439              	.LFE65:
 1441              		.section	.text.HAL_TIM_OnePulse_MspInit,"ax",%progbits
 1442              		.align	2
 1443              		.weak	HAL_TIM_OnePulse_MspInit
 1444              		.code	16
 1445              		.thumb_func
ARM GAS  /tmp/ccNBoJ9q.s 			page 122


 1447              	HAL_TIM_OnePulse_MspInit:
 1448              	.LFB76:
2049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1449              		.loc 1 2049 0
 1450              		.cfi_startproc
 1451              	.LVL156:
2056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1452              		.loc 1 2056 0
 1453              		@ sp needed
 1454 0000 7047     		bx	lr
 1455              		.cfi_endproc
 1456              	.LFE76:
 1458 0002 C046     		.section	.text.HAL_TIM_OnePulse_MspDeInit,"ax",%progbits
 1459              		.align	2
 1460              		.weak	HAL_TIM_OnePulse_MspDeInit
 1461              		.code	16
 1462              		.thumb_func
 1464              	HAL_TIM_OnePulse_MspDeInit:
 1465              	.LFB77:
2064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1466              		.loc 1 2064 0
 1467              		.cfi_startproc
 1468              	.LVL157:
2071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1469              		.loc 1 2071 0
 1470              		@ sp needed
 1471 0000 7047     		bx	lr
 1472              		.cfi_endproc
 1473              	.LFE77:
 1475 0002 C046     		.section	.text.HAL_TIM_OnePulse_DeInit,"ax",%progbits
 1476              		.align	2
 1477              		.global	HAL_TIM_OnePulse_DeInit
 1478              		.code	16
 1479              		.thumb_func
 1481              	HAL_TIM_OnePulse_DeInit:
 1482              	.LFB75:
2022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1483              		.loc 1 2022 0
 1484              		.cfi_startproc
 1485              	.LVL158:
 1486 0000 10B5     		push	{r4, lr}
 1487              	.LCFI14:
 1488              		.cfi_def_cfa_offset 8
 1489              		.cfi_offset 4, -8
 1490              		.cfi_offset 14, -4
 1491 0002 041C     		mov	r4, r0
2026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 1492              		.loc 1 2026 0
 1493 0004 0222     		mov	r2, #2
 1494 0006 3D23     		mov	r3, #61
 1495 0008 C254     		strb	r2, [r0, r3]
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1496              		.loc 1 2029 0
 1497 000a 0368     		ldr	r3, [r0]
 1498 000c 196A     		ldr	r1, [r3, #32]
 1499 000e 0A4A     		ldr	r2, .L83
 1500 0010 1142     		tst	r1, r2
ARM GAS  /tmp/ccNBoJ9q.s 			page 123


 1501 0012 07D1     		bne	.L82
2029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1502              		.loc 1 2029 0 is_stmt 0 discriminator 1
 1503 0014 196A     		ldr	r1, [r3, #32]
 1504 0016 094A     		ldr	r2, .L83+4
 1505 0018 1142     		tst	r1, r2
 1506 001a 03D1     		bne	.L82
 1507 001c 1A68     		ldr	r2, [r3]
 1508 001e 0121     		mov	r1, #1
 1509 0020 8A43     		bic	r2, r1
 1510 0022 1A60     		str	r2, [r3]
 1511              	.L82:
2032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_OnePulse_MspDeInit(htim);
 1512              		.loc 1 2032 0 is_stmt 1
 1513 0024 201C     		mov	r0, r4
 1514              	.LVL159:
 1515 0026 FFF7FEFF 		bl	HAL_TIM_OnePulse_MspDeInit
 1516              	.LVL160:
2035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 1517              		.loc 1 2035 0
 1518 002a 0023     		mov	r3, #0
 1519 002c 3D22     		mov	r2, #61
 1520 002e A354     		strb	r3, [r4, r2]
2038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 1521              		.loc 1 2038 0
 1522 0030 3C22     		mov	r2, #60
 1523 0032 A354     		strb	r3, [r4, r2]
2041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1524              		.loc 1 2041 0
 1525 0034 0020     		mov	r0, #0
 1526              		@ sp needed
 1527              	.LVL161:
 1528 0036 10BD     		pop	{r4, pc}
 1529              	.L84:
 1530              		.align	2
 1531              	.L83:
 1532 0038 11110000 		.word	4369
 1533 003c 44040000 		.word	1092
 1534              		.cfi_endproc
 1535              	.LFE75:
 1537              		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
 1538              		.align	2
 1539              		.weak	HAL_TIM_Encoder_MspInit
 1540              		.code	16
 1541              		.thumb_func
 1543              	HAL_TIM_Encoder_MspInit:
 1544              	.LFB84:
2368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1545              		.loc 1 2368 0
 1546              		.cfi_startproc
 1547              	.LVL162:
2375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1548              		.loc 1 2375 0
 1549              		@ sp needed
 1550 0000 7047     		bx	lr
 1551              		.cfi_endproc
 1552              	.LFE84:
ARM GAS  /tmp/ccNBoJ9q.s 			page 124


 1554 0002 C046     		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 1555              		.align	2
 1556              		.weak	HAL_TIM_Encoder_MspDeInit
 1557              		.code	16
 1558              		.thumb_func
 1560              	HAL_TIM_Encoder_MspDeInit:
 1561              	.LFB85:
2383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1562              		.loc 1 2383 0
 1563              		.cfi_startproc
 1564              	.LVL163:
2390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1565              		.loc 1 2390 0
 1566              		@ sp needed
 1567 0000 7047     		bx	lr
 1568              		.cfi_endproc
 1569              	.LFE85:
 1571 0002 C046     		.section	.text.HAL_TIM_Encoder_DeInit,"ax",%progbits
 1572              		.align	2
 1573              		.global	HAL_TIM_Encoder_DeInit
 1574              		.code	16
 1575              		.thumb_func
 1577              	HAL_TIM_Encoder_DeInit:
 1578              	.LFB83:
2341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1579              		.loc 1 2341 0
 1580              		.cfi_startproc
 1581              	.LVL164:
 1582 0000 10B5     		push	{r4, lr}
 1583              	.LCFI15:
 1584              		.cfi_def_cfa_offset 8
 1585              		.cfi_offset 4, -8
 1586              		.cfi_offset 14, -4
 1587 0002 041C     		mov	r4, r0
2345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 1588              		.loc 1 2345 0
 1589 0004 0222     		mov	r2, #2
 1590 0006 3D23     		mov	r3, #61
 1591 0008 C254     		strb	r2, [r0, r3]
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1592              		.loc 1 2348 0
 1593 000a 0368     		ldr	r3, [r0]
 1594 000c 196A     		ldr	r1, [r3, #32]
 1595 000e 0A4A     		ldr	r2, .L89
 1596 0010 1142     		tst	r1, r2
 1597 0012 07D1     		bne	.L88
2348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1598              		.loc 1 2348 0 is_stmt 0 discriminator 1
 1599 0014 196A     		ldr	r1, [r3, #32]
 1600 0016 094A     		ldr	r2, .L89+4
 1601 0018 1142     		tst	r1, r2
 1602 001a 03D1     		bne	.L88
 1603 001c 1A68     		ldr	r2, [r3]
 1604 001e 0121     		mov	r1, #1
 1605 0020 8A43     		bic	r2, r1
 1606 0022 1A60     		str	r2, [r3]
 1607              	.L88:
ARM GAS  /tmp/ccNBoJ9q.s 			page 125


2351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_Encoder_MspDeInit(htim);
 1608              		.loc 1 2351 0 is_stmt 1
 1609 0024 201C     		mov	r0, r4
 1610              	.LVL165:
 1611 0026 FFF7FEFF 		bl	HAL_TIM_Encoder_MspDeInit
 1612              	.LVL166:
2354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 1613              		.loc 1 2354 0
 1614 002a 0023     		mov	r3, #0
 1615 002c 3D22     		mov	r2, #61
 1616 002e A354     		strb	r3, [r4, r2]
2357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 1617              		.loc 1 2357 0
 1618 0030 3C22     		mov	r2, #60
 1619 0032 A354     		strb	r3, [r4, r2]
2360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1620              		.loc 1 2360 0
 1621 0034 0020     		mov	r0, #0
 1622              		@ sp needed
 1623              	.LVL167:
 1624 0036 10BD     		pop	{r4, pc}
 1625              	.L90:
 1626              		.align	2
 1627              	.L89:
 1628 0038 11110000 		.word	4369
 1629 003c 44040000 		.word	1092
 1630              		.cfi_endproc
 1631              	.LFE83:
 1633              		.section	.text.HAL_TIM_DMABurst_MultiWriteStart,"ax",%progbits
 1634              		.align	2
 1635              		.global	HAL_TIM_DMABurst_MultiWriteStart
 1636              		.code	16
 1637              		.thumb_func
 1639              	HAL_TIM_DMABurst_MultiWriteStart:
 1640              	.LFB98:
3381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1641              		.loc 1 3381 0
 1642              		.cfi_startproc
 1643              	.LVL168:
 1644 0000 70B5     		push	{r4, r5, r6, lr}
 1645              	.LCFI16:
 1646              		.cfi_def_cfa_offset 16
 1647              		.cfi_offset 4, -16
 1648              		.cfi_offset 5, -12
 1649              		.cfi_offset 6, -8
 1650              		.cfi_offset 14, -4
 1651 0002 041C     		mov	r4, r0
 1652 0004 0E1C     		mov	r6, r1
 1653 0006 151C     		mov	r5, r2
3389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 1654              		.loc 1 3389 0
 1655 0008 3D22     		mov	r2, #61
 1656              	.LVL169:
 1657 000a 825C     		ldrb	r2, [r0, r2]
 1658 000c 022A     		cmp	r2, #2
 1659 000e 00D1     		bne	.LCB1504
 1660 0010 9CE0     		b	.L104	@long jump
ARM GAS  /tmp/ccNBoJ9q.s 			page 126


 1661              	.LCB1504:
3393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 1662              		.loc 1 3393 0
 1663 0012 3D22     		mov	r2, #61
 1664 0014 825C     		ldrb	r2, [r0, r2]
 1665 0016 012A     		cmp	r2, #1
 1666 0018 08D1     		bne	.L93
3395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((BurstBuffer == 0U ) && (BurstLength > 0U))
 1667              		.loc 1 3395 0
 1668 001a 002B     		cmp	r3, #0
 1669 001c 03D1     		bne	.L94
3395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((BurstBuffer == 0U ) && (BurstLength > 0U))
 1670              		.loc 1 3395 0 is_stmt 0 discriminator 1
 1671 001e 0499     		ldr	r1, [sp, #16]
 1672              	.LVL170:
 1673 0020 0029     		cmp	r1, #0
 1674 0022 00D0     		beq	.LCB1515
 1675 0024 94E0     		b	.L105	@long jump
 1676              	.LCB1515:
 1677              	.L94:
3401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 1678              		.loc 1 3401 0 is_stmt 1
 1679 0026 0221     		mov	r1, #2
 1680 0028 3D22     		mov	r2, #61
 1681 002a A154     		strb	r1, [r4, r2]
 1682              	.L93:
3404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch(BurstRequestSrc)
 1683              		.loc 1 3404 0
 1684 002c 8022     		mov	r2, #128
 1685 002e 1201     		lsl	r2, r2, #4
 1686 0030 9542     		cmp	r5, r2
 1687 0032 47D0     		beq	.L96
 1688 0034 8022     		mov	r2, #128
 1689 0036 1201     		lsl	r2, r2, #4
 1690 0038 9542     		cmp	r5, r2
 1691 003a 0CD8     		bhi	.L97
 1692 003c 8022     		mov	r2, #128
 1693 003e 9200     		lsl	r2, r2, #2
 1694 0040 9542     		cmp	r5, r2
 1695 0042 23D0     		beq	.L98
 1696 0044 8022     		mov	r2, #128
 1697 0046 D200     		lsl	r2, r2, #3
 1698 0048 9542     		cmp	r5, r2
 1699 004a 2DD0     		beq	.L99
 1700 004c 8022     		mov	r2, #128
 1701 004e 5200     		lsl	r2, r2, #1
 1702 0050 9542     		cmp	r5, r2
 1703 0052 6ED1     		bne	.L95
 1704 0054 0CE0     		b	.L100
 1705              	.L97:
 1706 0056 8022     		mov	r2, #128
 1707 0058 9201     		lsl	r2, r2, #6
 1708 005a 9542     		cmp	r5, r2
 1709 005c 4ED0     		beq	.L101
 1710 005e 8022     		mov	r2, #128
 1711 0060 D201     		lsl	r2, r2, #7
 1712 0062 9542     		cmp	r5, r2
ARM GAS  /tmp/ccNBoJ9q.s 			page 127


 1713 0064 58D0     		beq	.L102
 1714 0066 8022     		mov	r2, #128
 1715 0068 5201     		lsl	r2, r2, #5
 1716 006a 9542     		cmp	r5, r2
 1717 006c 61D1     		bne	.L95
 1718 006e 37E0     		b	.L103
 1719              	.L100:
3409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
 1720              		.loc 1 3409 0
 1721 0070 226A     		ldr	r2, [r4, #32]
 1722 0072 3849     		ldr	r1, .L106
 1723 0074 9162     		str	r1, [r2, #40]
3412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
 1724              		.loc 1 3412 0
 1725 0076 226A     		ldr	r2, [r4, #32]
 1726 0078 3749     		ldr	r1, .L106+4
 1727 007a 1163     		str	r1, [r2, #48]
3415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)BurstBuffer, (uint32_t)&htim->Insta
 1728              		.loc 1 3415 0
 1729 007c 2268     		ldr	r2, [r4]
 1730 007e 4C32     		add	r2, r2, #76
 1731 0080 206A     		ldr	r0, [r4, #32]
 1732              	.LVL171:
 1733 0082 191C     		mov	r1, r3
 1734 0084 059B     		ldr	r3, [sp, #20]
 1735              	.LVL172:
 1736 0086 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1737              	.LVL173:
3417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 1738              		.loc 1 3417 0
 1739 008a 52E0     		b	.L95
 1740              	.LVL174:
 1741              	.L98:
3421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback =  TIM_DMADelayPulseCplt;
 1742              		.loc 1 3421 0
 1743 008c 626A     		ldr	r2, [r4, #36]
 1744 008e 3349     		ldr	r1, .L106+8
 1745 0090 9162     		str	r1, [r2, #40]
3424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 1746              		.loc 1 3424 0
 1747 0092 626A     		ldr	r2, [r4, #36]
 1748 0094 3049     		ldr	r1, .L106+4
 1749 0096 1163     		str	r1, [r2, #48]
3427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
 1750              		.loc 1 3427 0
 1751 0098 2268     		ldr	r2, [r4]
 1752 009a 4C32     		add	r2, r2, #76
 1753 009c 606A     		ldr	r0, [r4, #36]
 1754              	.LVL175:
 1755 009e 191C     		mov	r1, r3
 1756 00a0 059B     		ldr	r3, [sp, #20]
 1757              	.LVL176:
 1758 00a2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1759              	.LVL177:
3429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 1760              		.loc 1 3429 0
 1761 00a6 44E0     		b	.L95
ARM GAS  /tmp/ccNBoJ9q.s 			page 128


 1762              	.LVL178:
 1763              	.L99:
3433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback =  TIM_DMADelayPulseCplt;
 1764              		.loc 1 3433 0
 1765 00a8 A26A     		ldr	r2, [r4, #40]
 1766 00aa 2C49     		ldr	r1, .L106+8
 1767 00ac 9162     		str	r1, [r2, #40]
3436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 1768              		.loc 1 3436 0
 1769 00ae A26A     		ldr	r2, [r4, #40]
 1770 00b0 2949     		ldr	r1, .L106+4
 1771 00b2 1163     		str	r1, [r2, #48]
3439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
 1772              		.loc 1 3439 0
 1773 00b4 2268     		ldr	r2, [r4]
 1774 00b6 4C32     		add	r2, r2, #76
 1775 00b8 A06A     		ldr	r0, [r4, #40]
 1776              	.LVL179:
 1777 00ba 191C     		mov	r1, r3
 1778 00bc 059B     		ldr	r3, [sp, #20]
 1779              	.LVL180:
 1780 00be FFF7FEFF 		bl	HAL_DMA_Start_IT
 1781              	.LVL181:
3441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 1782              		.loc 1 3441 0
 1783 00c2 36E0     		b	.L95
 1784              	.LVL182:
 1785              	.L96:
3445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback =  TIM_DMADelayPulseCplt;
 1786              		.loc 1 3445 0
 1787 00c4 E26A     		ldr	r2, [r4, #44]
 1788 00c6 2549     		ldr	r1, .L106+8
 1789 00c8 9162     		str	r1, [r2, #40]
3448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 1790              		.loc 1 3448 0
 1791 00ca E26A     		ldr	r2, [r4, #44]
 1792 00cc 2249     		ldr	r1, .L106+4
 1793 00ce 1163     		str	r1, [r2, #48]
3451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
 1794              		.loc 1 3451 0
 1795 00d0 2268     		ldr	r2, [r4]
 1796 00d2 4C32     		add	r2, r2, #76
 1797 00d4 E06A     		ldr	r0, [r4, #44]
 1798              	.LVL183:
 1799 00d6 191C     		mov	r1, r3
 1800 00d8 059B     		ldr	r3, [sp, #20]
 1801              	.LVL184:
 1802 00da FFF7FEFF 		bl	HAL_DMA_Start_IT
 1803              	.LVL185:
3453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 1804              		.loc 1 3453 0
 1805 00de 28E0     		b	.L95
 1806              	.LVL186:
 1807              	.L103:
3457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback =  TIM_DMADelayPulseCplt;
 1808              		.loc 1 3457 0
 1809 00e0 226B     		ldr	r2, [r4, #48]
ARM GAS  /tmp/ccNBoJ9q.s 			page 129


 1810 00e2 1E49     		ldr	r1, .L106+8
 1811 00e4 9162     		str	r1, [r2, #40]
3460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 1812              		.loc 1 3460 0
 1813 00e6 226B     		ldr	r2, [r4, #48]
 1814 00e8 1B49     		ldr	r1, .L106+4
 1815 00ea 1163     		str	r1, [r2, #48]
3463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
 1816              		.loc 1 3463 0
 1817 00ec 2268     		ldr	r2, [r4]
 1818 00ee 4C32     		add	r2, r2, #76
 1819 00f0 206B     		ldr	r0, [r4, #48]
 1820              	.LVL187:
 1821 00f2 191C     		mov	r1, r3
 1822 00f4 059B     		ldr	r3, [sp, #20]
 1823              	.LVL188:
 1824 00f6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1825              	.LVL189:
3465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 1826              		.loc 1 3465 0
 1827 00fa 1AE0     		b	.L95
 1828              	.LVL190:
 1829              	.L101:
3469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
 1830              		.loc 1 3469 0
 1831 00fc 626B     		ldr	r2, [r4, #52]
 1832 00fe 1849     		ldr	r1, .L106+12
 1833 0100 9162     		str	r1, [r2, #40]
3472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
 1834              		.loc 1 3472 0
 1835 0102 626B     		ldr	r2, [r4, #52]
 1836 0104 1449     		ldr	r1, .L106+4
 1837 0106 1163     		str	r1, [r2, #48]
3475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)BurstBuffer, (uint32_t)&htim->
 1838              		.loc 1 3475 0
 1839 0108 2268     		ldr	r2, [r4]
 1840 010a 4C32     		add	r2, r2, #76
 1841 010c 606B     		ldr	r0, [r4, #52]
 1842              	.LVL191:
 1843 010e 191C     		mov	r1, r3
 1844 0110 059B     		ldr	r3, [sp, #20]
 1845              	.LVL192:
 1846 0112 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1847              	.LVL193:
3477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 1848              		.loc 1 3477 0
 1849 0116 0CE0     		b	.L95
 1850              	.LVL194:
 1851              	.L102:
3481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
 1852              		.loc 1 3481 0
 1853 0118 A26B     		ldr	r2, [r4, #56]
 1854 011a 1249     		ldr	r1, .L106+16
 1855 011c 9162     		str	r1, [r2, #40]
3484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
 1856              		.loc 1 3484 0
 1857 011e A26B     		ldr	r2, [r4, #56]
ARM GAS  /tmp/ccNBoJ9q.s 			page 130


 1858 0120 0D49     		ldr	r1, .L106+4
 1859 0122 1163     		str	r1, [r2, #48]
3487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)BurstBuffer, (uint32_t)&htim->Inst
 1860              		.loc 1 3487 0
 1861 0124 2268     		ldr	r2, [r4]
 1862 0126 4C32     		add	r2, r2, #76
 1863 0128 A06B     		ldr	r0, [r4, #56]
 1864              	.LVL195:
 1865 012a 191C     		mov	r1, r3
 1866 012c 059B     		ldr	r3, [sp, #20]
 1867              	.LVL196:
 1868 012e FFF7FEFF 		bl	HAL_DMA_Start_IT
 1869              	.LVL197:
 1870              	.L95:
3494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    htim->Instance->DCR = BurstBaseAddress | BurstLength;
 1871              		.loc 1 3494 0
 1872 0132 2368     		ldr	r3, [r4]
 1873 0134 049A     		ldr	r2, [sp, #16]
 1874 0136 1643     		orr	r6, r2
 1875              	.LVL198:
 1876 0138 9E64     		str	r6, [r3, #72]
3497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);
 1877              		.loc 1 3497 0
 1878 013a 2368     		ldr	r3, [r4]
 1879 013c DA68     		ldr	r2, [r3, #12]
 1880 013e 1543     		orr	r5, r2
 1881              	.LVL199:
 1882 0140 DD60     		str	r5, [r3, #12]
3499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    htim->State = HAL_TIM_STATE_READY;
 1883              		.loc 1 3499 0
 1884 0142 0122     		mov	r2, #1
 1885 0144 3D23     		mov	r3, #61
 1886 0146 E254     		strb	r2, [r4, r3]
3502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 1887              		.loc 1 3502 0
 1888 0148 0020     		mov	r0, #0
 1889 014a 02E0     		b	.L92
 1890              	.LVL200:
 1891              	.L104:
3391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
 1892              		.loc 1 3391 0
 1893 014c 0220     		mov	r0, #2
 1894              	.LVL201:
 1895 014e 00E0     		b	.L92
 1896              	.LVL202:
 1897              	.L105:
3397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
 1898              		.loc 1 3397 0
 1899 0150 0120     		mov	r0, #1
 1900              	.LVL203:
 1901              	.L92:
3503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1902              		.loc 1 3503 0
 1903              		@ sp needed
 1904              	.LVL204:
 1905 0152 70BD     		pop	{r4, r5, r6, pc}
 1906              	.L107:
ARM GAS  /tmp/ccNBoJ9q.s 			page 131


 1907              		.align	2
 1908              	.L106:
 1909 0154 00000000 		.word	TIM_DMAPeriodElapsedCplt
 1910 0158 00000000 		.word	TIM_DMAError
 1911 015c 00000000 		.word	TIM_DMADelayPulseCplt
 1912 0160 00000000 		.word	TIMEx_DMACommutationCplt
 1913 0164 00000000 		.word	TIM_DMATriggerCplt
 1914              		.cfi_endproc
 1915              	.LFE98:
 1917              		.section	.text.HAL_TIM_DMABurst_WriteStart,"ax",%progbits
 1918              		.align	2
 1919              		.global	HAL_TIM_DMABurst_WriteStart
 1920              		.code	16
 1921              		.thumb_func
 1923              	HAL_TIM_DMABurst_WriteStart:
 1924              	.LFB97:
3335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1925              		.loc 1 3335 0
 1926              		.cfi_startproc
 1927              	.LVL205:
 1928 0000 30B5     		push	{r4, r5, lr}
 1929              	.LCFI17:
 1930              		.cfi_def_cfa_offset 12
 1931              		.cfi_offset 4, -12
 1932              		.cfi_offset 5, -8
 1933              		.cfi_offset 14, -4
 1934 0002 83B0     		sub	sp, sp, #12
 1935              	.LCFI18:
 1936              		.cfi_def_cfa_offset 24
 1937 0004 069C     		ldr	r4, [sp, #24]
3336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** return HAL_TIM_DMABurst_MultiWriteStart(htim, BurstBaseAddress, BurstRequestSrc, BurstBuffer, Burst
 1938              		.loc 1 3336 0
 1939 0006 250A     		lsr	r5, r4, #8
 1940 0008 0135     		add	r5, r5, #1
 1941 000a 0094     		str	r4, [sp]
 1942 000c 0195     		str	r5, [sp, #4]
 1943 000e FFF7FEFF 		bl	HAL_TIM_DMABurst_MultiWriteStart
 1944              	.LVL206:
3337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 1945              		.loc 1 3337 0
 1946 0012 03B0     		add	sp, sp, #12
 1947              		@ sp needed
 1948 0014 30BD     		pop	{r4, r5, pc}
 1949              		.cfi_endproc
 1950              	.LFE97:
 1952 0016 C046     		.section	.text.HAL_TIM_DMABurst_WriteStop,"ax",%progbits
 1953              		.align	2
 1954              		.global	HAL_TIM_DMABurst_WriteStop
 1955              		.code	16
 1956              		.thumb_func
 1958              	HAL_TIM_DMABurst_WriteStop:
 1959              	.LFB99:
3512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 1960              		.loc 1 3512 0
 1961              		.cfi_startproc
 1962              	.LVL207:
 1963 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccNBoJ9q.s 			page 132


 1964              	.LCFI19:
 1965              		.cfi_def_cfa_offset 16
 1966              		.cfi_offset 3, -16
 1967              		.cfi_offset 4, -12
 1968              		.cfi_offset 5, -8
 1969              		.cfi_offset 14, -4
 1970 0002 051C     		mov	r5, r0
 1971 0004 0C1C     		mov	r4, r1
3517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch(BurstRequestSrc)
 1972              		.loc 1 3517 0
 1973 0006 8023     		mov	r3, #128
 1974 0008 1B01     		lsl	r3, r3, #4
 1975 000a 9942     		cmp	r1, r3
 1976 000c 29D0     		beq	.L111
 1977 000e 8023     		mov	r3, #128
 1978 0010 1B01     		lsl	r3, r3, #4
 1979 0012 9942     		cmp	r1, r3
 1980 0014 0CD8     		bhi	.L112
 1981 0016 8023     		mov	r3, #128
 1982 0018 9B00     		lsl	r3, r3, #2
 1983 001a 9942     		cmp	r1, r3
 1984 001c 19D0     		beq	.L113
 1985 001e 8023     		mov	r3, #128
 1986 0020 DB00     		lsl	r3, r3, #3
 1987 0022 9942     		cmp	r1, r3
 1988 0024 19D0     		beq	.L114
 1989 0026 8023     		mov	r3, #128
 1990 0028 5B00     		lsl	r3, r3, #1
 1991 002a 9942     		cmp	r1, r3
 1992 002c 28D1     		bne	.L110
 1993 002e 0CE0     		b	.L115
 1994              	.L112:
 1995 0030 8023     		mov	r3, #128
 1996 0032 9B01     		lsl	r3, r3, #6
 1997 0034 9942     		cmp	r1, r3
 1998 0036 1CD0     		beq	.L116
 1999 0038 8023     		mov	r3, #128
 2000 003a DB01     		lsl	r3, r3, #7
 2001 003c 9942     		cmp	r1, r3
 2002 003e 1CD0     		beq	.L117
 2003 0040 8023     		mov	r3, #128
 2004 0042 5B01     		lsl	r3, r3, #5
 2005 0044 9942     		cmp	r1, r3
 2006 0046 1BD1     		bne	.L110
 2007 0048 0FE0     		b	.L118
 2008              	.L115:
3521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_UPDATE]);
 2009              		.loc 1 3521 0
 2010 004a 006A     		ldr	r0, [r0, #32]
 2011              	.LVL208:
 2012 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2013              	.LVL209:
3523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2014              		.loc 1 3523 0
 2015 0050 16E0     		b	.L110
 2016              	.LVL210:
 2017              	.L113:
ARM GAS  /tmp/ccNBoJ9q.s 			page 133


3526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC1]);
 2018              		.loc 1 3526 0
 2019 0052 406A     		ldr	r0, [r0, #36]
 2020              	.LVL211:
 2021 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2022              	.LVL212:
3528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2023              		.loc 1 3528 0
 2024 0058 12E0     		b	.L110
 2025              	.LVL213:
 2026              	.L114:
3531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC2]);
 2027              		.loc 1 3531 0
 2028 005a 806A     		ldr	r0, [r0, #40]
 2029              	.LVL214:
 2030 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2031              	.LVL215:
3533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2032              		.loc 1 3533 0
 2033 0060 0EE0     		b	.L110
 2034              	.LVL216:
 2035              	.L111:
3536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC3]);
 2036              		.loc 1 3536 0
 2037 0062 C06A     		ldr	r0, [r0, #44]
 2038              	.LVL217:
 2039 0064 FFF7FEFF 		bl	HAL_DMA_Abort
 2040              	.LVL218:
3538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2041              		.loc 1 3538 0
 2042 0068 0AE0     		b	.L110
 2043              	.LVL219:
 2044              	.L118:
3541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC4]);
 2045              		.loc 1 3541 0
 2046 006a 006B     		ldr	r0, [r0, #48]
 2047              	.LVL220:
 2048 006c FFF7FEFF 		bl	HAL_DMA_Abort
 2049              	.LVL221:
3543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2050              		.loc 1 3543 0
 2051 0070 06E0     		b	.L110
 2052              	.LVL222:
 2053              	.L116:
3546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_COMMUTATION]);
 2054              		.loc 1 3546 0
 2055 0072 406B     		ldr	r0, [r0, #52]
 2056              	.LVL223:
 2057 0074 FFF7FEFF 		bl	HAL_DMA_Abort
 2058              	.LVL224:
3548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2059              		.loc 1 3548 0
 2060 0078 02E0     		b	.L110
 2061              	.LVL225:
 2062              	.L117:
3551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_TRIGGER]);
 2063              		.loc 1 3551 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 134


 2064 007a 806B     		ldr	r0, [r0, #56]
 2065              	.LVL226:
 2066 007c FFF7FEFF 		bl	HAL_DMA_Abort
 2067              	.LVL227:
 2068              	.L110:
3559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
 2069              		.loc 1 3559 0
 2070 0080 2B68     		ldr	r3, [r5]
 2071 0082 DA68     		ldr	r2, [r3, #12]
 2072 0084 A243     		bic	r2, r4
 2073 0086 DA60     		str	r2, [r3, #12]
3563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2074              		.loc 1 3563 0
 2075 0088 0020     		mov	r0, #0
 2076              		@ sp needed
 2077              	.LVL228:
 2078              	.LVL229:
 2079 008a 38BD     		pop	{r3, r4, r5, pc}
 2080              		.cfi_endproc
 2081              	.LFE99:
 2083              		.section	.text.HAL_TIM_DMABurst_MultiReadStart,"ax",%progbits
 2084              		.align	2
 2085              		.global	HAL_TIM_DMABurst_MultiReadStart
 2086              		.code	16
 2087              		.thumb_func
 2089              	HAL_TIM_DMABurst_MultiReadStart:
 2090              	.LFB101:
3651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2091              		.loc 1 3651 0
 2092              		.cfi_startproc
 2093              	.LVL230:
 2094 0000 70B5     		push	{r4, r5, r6, lr}
 2095              	.LCFI20:
 2096              		.cfi_def_cfa_offset 16
 2097              		.cfi_offset 4, -16
 2098              		.cfi_offset 5, -12
 2099              		.cfi_offset 6, -8
 2100              		.cfi_offset 14, -4
 2101 0002 041C     		mov	r4, r0
 2102 0004 0E1C     		mov	r6, r1
 2103 0006 151C     		mov	r5, r2
3659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 2104              		.loc 1 3659 0
 2105 0008 3D20     		mov	r0, #61
 2106              	.LVL231:
 2107 000a 205C     		ldrb	r0, [r4, r0]
 2108 000c 0228     		cmp	r0, #2
 2109 000e 00D1     		bne	.LCB2020
 2110 0010 9CE0     		b	.L132	@long jump
 2111              	.LCB2020:
3663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 2112              		.loc 1 3663 0
 2113 0012 3D22     		mov	r2, #61
 2114              	.LVL232:
 2115 0014 A25C     		ldrb	r2, [r4, r2]
 2116 0016 012A     		cmp	r2, #1
 2117 0018 08D1     		bne	.L121
ARM GAS  /tmp/ccNBoJ9q.s 			page 135


3665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((BurstBuffer == 0U ) && (BurstLength > 0U))
 2118              		.loc 1 3665 0
 2119 001a 002B     		cmp	r3, #0
 2120 001c 03D1     		bne	.L122
3665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((BurstBuffer == 0U ) && (BurstLength > 0U))
 2121              		.loc 1 3665 0 is_stmt 0 discriminator 1
 2122 001e 049A     		ldr	r2, [sp, #16]
 2123 0020 002A     		cmp	r2, #0
 2124 0022 00D0     		beq	.LCB2031
 2125 0024 94E0     		b	.L133	@long jump
 2126              	.LCB2031:
 2127              	.L122:
3671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 2128              		.loc 1 3671 0 is_stmt 1
 2129 0026 0221     		mov	r1, #2
 2130              	.LVL233:
 2131 0028 3D22     		mov	r2, #61
 2132 002a A154     		strb	r1, [r4, r2]
 2133              	.L121:
3674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch(BurstRequestSrc)
 2134              		.loc 1 3674 0
 2135 002c 8022     		mov	r2, #128
 2136 002e 1201     		lsl	r2, r2, #4
 2137 0030 9542     		cmp	r5, r2
 2138 0032 47D0     		beq	.L124
 2139 0034 8022     		mov	r2, #128
 2140 0036 1201     		lsl	r2, r2, #4
 2141 0038 9542     		cmp	r5, r2
 2142 003a 0CD8     		bhi	.L125
 2143 003c 8022     		mov	r2, #128
 2144 003e 9200     		lsl	r2, r2, #2
 2145 0040 9542     		cmp	r5, r2
 2146 0042 23D0     		beq	.L126
 2147 0044 8022     		mov	r2, #128
 2148 0046 D200     		lsl	r2, r2, #3
 2149 0048 9542     		cmp	r5, r2
 2150 004a 2DD0     		beq	.L127
 2151 004c 8022     		mov	r2, #128
 2152 004e 5200     		lsl	r2, r2, #1
 2153 0050 9542     		cmp	r5, r2
 2154 0052 6ED1     		bne	.L123
 2155 0054 0CE0     		b	.L128
 2156              	.L125:
 2157 0056 8022     		mov	r2, #128
 2158 0058 9201     		lsl	r2, r2, #6
 2159 005a 9542     		cmp	r5, r2
 2160 005c 4ED0     		beq	.L129
 2161 005e 8022     		mov	r2, #128
 2162 0060 D201     		lsl	r2, r2, #7
 2163 0062 9542     		cmp	r5, r2
 2164 0064 58D0     		beq	.L130
 2165 0066 8022     		mov	r2, #128
 2166 0068 5201     		lsl	r2, r2, #5
 2167 006a 9542     		cmp	r5, r2
 2168 006c 61D1     		bne	.L123
 2169 006e 37E0     		b	.L131
 2170              	.L128:
ARM GAS  /tmp/ccNBoJ9q.s 			page 136


3679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
 2171              		.loc 1 3679 0
 2172 0070 226A     		ldr	r2, [r4, #32]
 2173 0072 3849     		ldr	r1, .L134
 2174 0074 9162     		str	r1, [r2, #40]
3682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
 2175              		.loc 1 3682 0
 2176 0076 226A     		ldr	r2, [r4, #32]
 2177 0078 3749     		ldr	r1, .L134+4
 2178 007a 1163     		str	r1, [r2, #48]
3685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
 2179              		.loc 1 3685 0
 2180 007c 2168     		ldr	r1, [r4]
 2181 007e 4C31     		add	r1, r1, #76
 2182 0080 206A     		ldr	r0, [r4, #32]
 2183 0082 1A1C     		mov	r2, r3
 2184 0084 059B     		ldr	r3, [sp, #20]
 2185              	.LVL234:
 2186 0086 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2187              	.LVL235:
3687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2188              		.loc 1 3687 0
 2189 008a 52E0     		b	.L123
 2190              	.LVL236:
 2191              	.L126:
3691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback =  TIM_DMACaptureCplt;
 2192              		.loc 1 3691 0
 2193 008c 626A     		ldr	r2, [r4, #36]
 2194 008e 3349     		ldr	r1, .L134+8
 2195 0090 9162     		str	r1, [r2, #40]
3694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 2196              		.loc 1 3694 0
 2197 0092 626A     		ldr	r2, [r4, #36]
 2198 0094 3049     		ldr	r1, .L134+4
 2199 0096 1163     		str	r1, [r2, #48]
3697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
 2200              		.loc 1 3697 0
 2201 0098 2168     		ldr	r1, [r4]
 2202 009a 4C31     		add	r1, r1, #76
 2203 009c 606A     		ldr	r0, [r4, #36]
 2204 009e 1A1C     		mov	r2, r3
 2205 00a0 059B     		ldr	r3, [sp, #20]
 2206              	.LVL237:
 2207 00a2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2208              	.LVL238:
3699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2209              		.loc 1 3699 0
 2210 00a6 44E0     		b	.L123
 2211              	.LVL239:
 2212              	.L127:
3703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback =  TIM_DMACaptureCplt;
 2213              		.loc 1 3703 0
 2214 00a8 A26A     		ldr	r2, [r4, #40]
 2215 00aa 2C49     		ldr	r1, .L134+8
 2216 00ac 9162     		str	r1, [r2, #40]
3706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 2217              		.loc 1 3706 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 137


 2218 00ae A26A     		ldr	r2, [r4, #40]
 2219 00b0 2949     		ldr	r1, .L134+4
 2220 00b2 1163     		str	r1, [r2, #48]
3709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
 2221              		.loc 1 3709 0
 2222 00b4 2168     		ldr	r1, [r4]
 2223 00b6 4C31     		add	r1, r1, #76
 2224 00b8 A06A     		ldr	r0, [r4, #40]
 2225 00ba 1A1C     		mov	r2, r3
 2226 00bc 059B     		ldr	r3, [sp, #20]
 2227              	.LVL240:
 2228 00be FFF7FEFF 		bl	HAL_DMA_Start_IT
 2229              	.LVL241:
3711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2230              		.loc 1 3711 0
 2231 00c2 36E0     		b	.L123
 2232              	.LVL242:
 2233              	.L124:
3715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback =  TIM_DMACaptureCplt;
 2234              		.loc 1 3715 0
 2235 00c4 E26A     		ldr	r2, [r4, #44]
 2236 00c6 2549     		ldr	r1, .L134+8
 2237 00c8 9162     		str	r1, [r2, #40]
3718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 2238              		.loc 1 3718 0
 2239 00ca E26A     		ldr	r2, [r4, #44]
 2240 00cc 2249     		ldr	r1, .L134+4
 2241 00ce 1163     		str	r1, [r2, #48]
3721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
 2242              		.loc 1 3721 0
 2243 00d0 2168     		ldr	r1, [r4]
 2244 00d2 4C31     		add	r1, r1, #76
 2245 00d4 E06A     		ldr	r0, [r4, #44]
 2246 00d6 1A1C     		mov	r2, r3
 2247 00d8 059B     		ldr	r3, [sp, #20]
 2248              	.LVL243:
 2249 00da FFF7FEFF 		bl	HAL_DMA_Start_IT
 2250              	.LVL244:
3723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2251              		.loc 1 3723 0
 2252 00de 28E0     		b	.L123
 2253              	.LVL245:
 2254              	.L131:
3727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback =  TIM_DMACaptureCplt;
 2255              		.loc 1 3727 0
 2256 00e0 226B     		ldr	r2, [r4, #48]
 2257 00e2 1E49     		ldr	r1, .L134+8
 2258 00e4 9162     		str	r1, [r2, #40]
3730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 2259              		.loc 1 3730 0
 2260 00e6 226B     		ldr	r2, [r4, #48]
 2261 00e8 1B49     		ldr	r1, .L134+4
 2262 00ea 1163     		str	r1, [r2, #48]
3733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
 2263              		.loc 1 3733 0
 2264 00ec 2168     		ldr	r1, [r4]
 2265 00ee 4C31     		add	r1, r1, #76
ARM GAS  /tmp/ccNBoJ9q.s 			page 138


 2266 00f0 206B     		ldr	r0, [r4, #48]
 2267 00f2 1A1C     		mov	r2, r3
 2268 00f4 059B     		ldr	r3, [sp, #20]
 2269              	.LVL246:
 2270 00f6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2271              	.LVL247:
3735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2272              		.loc 1 3735 0
 2273 00fa 1AE0     		b	.L123
 2274              	.LVL248:
 2275              	.L129:
3739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
 2276              		.loc 1 3739 0
 2277 00fc 626B     		ldr	r2, [r4, #52]
 2278 00fe 1849     		ldr	r1, .L134+12
 2279 0100 9162     		str	r1, [r2, #40]
3742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
 2280              		.loc 1 3742 0
 2281 0102 626B     		ldr	r2, [r4, #52]
 2282 0104 1449     		ldr	r1, .L134+4
 2283 0106 1163     		str	r1, [r2, #48]
3745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)&htim->Instance->DMAR, (uint32
 2284              		.loc 1 3745 0
 2285 0108 2168     		ldr	r1, [r4]
 2286 010a 4C31     		add	r1, r1, #76
 2287 010c 606B     		ldr	r0, [r4, #52]
 2288 010e 1A1C     		mov	r2, r3
 2289 0110 059B     		ldr	r3, [sp, #20]
 2290              	.LVL249:
 2291 0112 FFF7FEFF 		bl	HAL_DMA_Start_IT
 2292              	.LVL250:
3747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2293              		.loc 1 3747 0
 2294 0116 0CE0     		b	.L123
 2295              	.LVL251:
 2296              	.L130:
3751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
 2297              		.loc 1 3751 0
 2298 0118 A26B     		ldr	r2, [r4, #56]
 2299 011a 1249     		ldr	r1, .L134+16
 2300 011c 9162     		str	r1, [r2, #40]
3754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
 2301              		.loc 1 3754 0
 2302 011e A26B     		ldr	r2, [r4, #56]
 2303 0120 0D49     		ldr	r1, .L134+4
 2304 0122 1163     		str	r1, [r2, #48]
3757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
 2305              		.loc 1 3757 0
 2306 0124 2168     		ldr	r1, [r4]
 2307 0126 4C31     		add	r1, r1, #76
 2308 0128 A06B     		ldr	r0, [r4, #56]
 2309 012a 1A1C     		mov	r2, r3
 2310 012c 059B     		ldr	r3, [sp, #20]
 2311              	.LVL252:
 2312 012e FFF7FEFF 		bl	HAL_DMA_Start_IT
 2313              	.LVL253:
 2314              	.L123:
ARM GAS  /tmp/ccNBoJ9q.s 			page 139


3765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->DCR = BurstBaseAddress | BurstLength;
 2315              		.loc 1 3765 0
 2316 0132 2368     		ldr	r3, [r4]
 2317 0134 049A     		ldr	r2, [sp, #16]
 2318 0136 1643     		orr	r6, r2
 2319              	.LVL254:
 2320 0138 9E64     		str	r6, [r3, #72]
3768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);
 2321              		.loc 1 3768 0
 2322 013a 2368     		ldr	r3, [r4]
 2323 013c DA68     		ldr	r2, [r3, #12]
 2324 013e 1543     		orr	r5, r2
 2325              	.LVL255:
 2326 0140 DD60     		str	r5, [r3, #12]
3770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 2327              		.loc 1 3770 0
 2328 0142 0122     		mov	r2, #1
 2329 0144 3D23     		mov	r3, #61
 2330 0146 E254     		strb	r2, [r4, r3]
3773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 2331              		.loc 1 3773 0
 2332 0148 0020     		mov	r0, #0
 2333 014a 02E0     		b	.L120
 2334              	.LVL256:
 2335              	.L132:
3661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
 2336              		.loc 1 3661 0
 2337 014c 0220     		mov	r0, #2
 2338 014e 00E0     		b	.L120
 2339              	.LVL257:
 2340              	.L133:
3667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
 2341              		.loc 1 3667 0
 2342 0150 0120     		mov	r0, #1
 2343              	.LVL258:
 2344              	.L120:
3774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2345              		.loc 1 3774 0
 2346              		@ sp needed
 2347              	.LVL259:
 2348 0152 70BD     		pop	{r4, r5, r6, pc}
 2349              	.L135:
 2350              		.align	2
 2351              	.L134:
 2352 0154 00000000 		.word	TIM_DMAPeriodElapsedCplt
 2353 0158 00000000 		.word	TIM_DMAError
 2354 015c 00000000 		.word	TIM_DMACaptureCplt
 2355 0160 00000000 		.word	TIMEx_DMACommutationCplt
 2356 0164 00000000 		.word	TIM_DMATriggerCplt
 2357              		.cfi_endproc
 2358              	.LFE101:
 2360              		.section	.text.HAL_TIM_DMABurst_ReadStart,"ax",%progbits
 2361              		.align	2
 2362              		.global	HAL_TIM_DMABurst_ReadStart
 2363              		.code	16
 2364              		.thumb_func
 2366              	HAL_TIM_DMABurst_ReadStart:
ARM GAS  /tmp/ccNBoJ9q.s 			page 140


 2367              	.LFB100:
3605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2368              		.loc 1 3605 0
 2369              		.cfi_startproc
 2370              	.LVL260:
 2371 0000 30B5     		push	{r4, r5, lr}
 2372              	.LCFI21:
 2373              		.cfi_def_cfa_offset 12
 2374              		.cfi_offset 4, -12
 2375              		.cfi_offset 5, -8
 2376              		.cfi_offset 14, -4
 2377 0002 83B0     		sub	sp, sp, #12
 2378              	.LCFI22:
 2379              		.cfi_def_cfa_offset 24
 2380 0004 069C     		ldr	r4, [sp, #24]
3606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** return HAL_TIM_DMABurst_MultiReadStart(htim, BurstBaseAddress, BurstRequestSrc, BurstBuffer, BurstL
 2381              		.loc 1 3606 0
 2382 0006 250A     		lsr	r5, r4, #8
 2383 0008 0135     		add	r5, r5, #1
 2384 000a 0094     		str	r4, [sp]
 2385 000c 0195     		str	r5, [sp, #4]
 2386 000e FFF7FEFF 		bl	HAL_TIM_DMABurst_MultiReadStart
 2387              	.LVL261:
3607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2388              		.loc 1 3607 0
 2389 0012 03B0     		add	sp, sp, #12
 2390              		@ sp needed
 2391 0014 30BD     		pop	{r4, r5, pc}
 2392              		.cfi_endproc
 2393              	.LFE100:
 2395 0016 C046     		.section	.text.HAL_TIM_DMABurst_ReadStop,"ax",%progbits
 2396              		.align	2
 2397              		.global	HAL_TIM_DMABurst_ReadStop
 2398              		.code	16
 2399              		.thumb_func
 2401              	HAL_TIM_DMABurst_ReadStop:
 2402              	.LFB102:
3783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2403              		.loc 1 3783 0
 2404              		.cfi_startproc
 2405              	.LVL262:
 2406 0000 38B5     		push	{r3, r4, r5, lr}
 2407              	.LCFI23:
 2408              		.cfi_def_cfa_offset 16
 2409              		.cfi_offset 3, -16
 2410              		.cfi_offset 4, -12
 2411              		.cfi_offset 5, -8
 2412              		.cfi_offset 14, -4
 2413 0002 051C     		mov	r5, r0
 2414 0004 0C1C     		mov	r4, r1
3788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch(BurstRequestSrc)
 2415              		.loc 1 3788 0
 2416 0006 8023     		mov	r3, #128
 2417 0008 1B01     		lsl	r3, r3, #4
 2418 000a 9942     		cmp	r1, r3
 2419 000c 29D0     		beq	.L139
 2420 000e 8023     		mov	r3, #128
ARM GAS  /tmp/ccNBoJ9q.s 			page 141


 2421 0010 1B01     		lsl	r3, r3, #4
 2422 0012 9942     		cmp	r1, r3
 2423 0014 0CD8     		bhi	.L140
 2424 0016 8023     		mov	r3, #128
 2425 0018 9B00     		lsl	r3, r3, #2
 2426 001a 9942     		cmp	r1, r3
 2427 001c 19D0     		beq	.L141
 2428 001e 8023     		mov	r3, #128
 2429 0020 DB00     		lsl	r3, r3, #3
 2430 0022 9942     		cmp	r1, r3
 2431 0024 19D0     		beq	.L142
 2432 0026 8023     		mov	r3, #128
 2433 0028 5B00     		lsl	r3, r3, #1
 2434 002a 9942     		cmp	r1, r3
 2435 002c 28D1     		bne	.L138
 2436 002e 0CE0     		b	.L143
 2437              	.L140:
 2438 0030 8023     		mov	r3, #128
 2439 0032 9B01     		lsl	r3, r3, #6
 2440 0034 9942     		cmp	r1, r3
 2441 0036 1CD0     		beq	.L144
 2442 0038 8023     		mov	r3, #128
 2443 003a DB01     		lsl	r3, r3, #7
 2444 003c 9942     		cmp	r1, r3
 2445 003e 1CD0     		beq	.L145
 2446 0040 8023     		mov	r3, #128
 2447 0042 5B01     		lsl	r3, r3, #5
 2448 0044 9942     		cmp	r1, r3
 2449 0046 1BD1     		bne	.L138
 2450 0048 0FE0     		b	.L146
 2451              	.L143:
3792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_UPDATE]);
 2452              		.loc 1 3792 0
 2453 004a 006A     		ldr	r0, [r0, #32]
 2454              	.LVL263:
 2455 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2456              	.LVL264:
3794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2457              		.loc 1 3794 0
 2458 0050 16E0     		b	.L138
 2459              	.LVL265:
 2460              	.L141:
3797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC1]);
 2461              		.loc 1 3797 0
 2462 0052 406A     		ldr	r0, [r0, #36]
 2463              	.LVL266:
 2464 0054 FFF7FEFF 		bl	HAL_DMA_Abort
 2465              	.LVL267:
3799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2466              		.loc 1 3799 0
 2467 0058 12E0     		b	.L138
 2468              	.LVL268:
 2469              	.L142:
3802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC2]);
 2470              		.loc 1 3802 0
 2471 005a 806A     		ldr	r0, [r0, #40]
 2472              	.LVL269:
ARM GAS  /tmp/ccNBoJ9q.s 			page 142


 2473 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2474              	.LVL270:
3804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2475              		.loc 1 3804 0
 2476 0060 0EE0     		b	.L138
 2477              	.LVL271:
 2478              	.L139:
3807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC3]);
 2479              		.loc 1 3807 0
 2480 0062 C06A     		ldr	r0, [r0, #44]
 2481              	.LVL272:
 2482 0064 FFF7FEFF 		bl	HAL_DMA_Abort
 2483              	.LVL273:
3809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2484              		.loc 1 3809 0
 2485 0068 0AE0     		b	.L138
 2486              	.LVL274:
 2487              	.L146:
3812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC4]);
 2488              		.loc 1 3812 0
 2489 006a 006B     		ldr	r0, [r0, #48]
 2490              	.LVL275:
 2491 006c FFF7FEFF 		bl	HAL_DMA_Abort
 2492              	.LVL276:
3814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2493              		.loc 1 3814 0
 2494 0070 06E0     		b	.L138
 2495              	.LVL277:
 2496              	.L144:
3817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_COMMUTATION]);
 2497              		.loc 1 3817 0
 2498 0072 406B     		ldr	r0, [r0, #52]
 2499              	.LVL278:
 2500 0074 FFF7FEFF 		bl	HAL_DMA_Abort
 2501              	.LVL279:
3819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 2502              		.loc 1 3819 0
 2503 0078 02E0     		b	.L138
 2504              	.LVL280:
 2505              	.L145:
3822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_TRIGGER]);
 2506              		.loc 1 3822 0
 2507 007a 806B     		ldr	r0, [r0, #56]
 2508              	.LVL281:
 2509 007c FFF7FEFF 		bl	HAL_DMA_Abort
 2510              	.LVL282:
 2511              	.L138:
3830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
 2512              		.loc 1 3830 0
 2513 0080 2B68     		ldr	r3, [r5]
 2514 0082 DA68     		ldr	r2, [r3, #12]
 2515 0084 A243     		bic	r2, r4
 2516 0086 DA60     		str	r2, [r3, #12]
3834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2517              		.loc 1 3834 0
 2518 0088 0020     		mov	r0, #0
 2519              		@ sp needed
ARM GAS  /tmp/ccNBoJ9q.s 			page 143


 2520              	.LVL283:
 2521              	.LVL284:
 2522 008a 38BD     		pop	{r3, r4, r5, pc}
 2523              		.cfi_endproc
 2524              	.LFE102:
 2526              		.section	.text.HAL_TIM_GenerateEvent,"ax",%progbits
 2527              		.align	2
 2528              		.global	HAL_TIM_GenerateEvent
 2529              		.code	16
 2530              		.thumb_func
 2532              	HAL_TIM_GenerateEvent:
 2533              	.LFB103:
3855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2534              		.loc 1 3855 0
 2535              		.cfi_startproc
 2536              	.LVL285:
3861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 2537              		.loc 1 3861 0
 2538 0000 3C23     		mov	r3, #60
 2539 0002 C35C     		ldrb	r3, [r0, r3]
 2540 0004 012B     		cmp	r3, #1
 2541 0006 0BD0     		beq	.L149
3864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 2542              		.loc 1 3864 0 discriminator 2
 2543 0008 3D23     		mov	r3, #61
 2544 000a 0222     		mov	r2, #2
 2545 000c C254     		strb	r2, [r0, r3]
3867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->EGR = EventSource;
 2546              		.loc 1 3867 0 discriminator 2
 2547 000e 0268     		ldr	r2, [r0]
 2548 0010 5161     		str	r1, [r2, #20]
3870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 2549              		.loc 1 3870 0 discriminator 2
 2550 0012 0122     		mov	r2, #1
 2551 0014 C254     		strb	r2, [r0, r3]
3872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 2552              		.loc 1 3872 0 discriminator 2
 2553 0016 0022     		mov	r2, #0
 2554 0018 3C23     		mov	r3, #60
 2555 001a C254     		strb	r2, [r0, r3]
3875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 2556              		.loc 1 3875 0 discriminator 2
 2557 001c 0020     		mov	r0, #0
 2558              	.LVL286:
 2559 001e 00E0     		b	.L148
 2560              	.LVL287:
 2561              	.L149:
3861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 2562              		.loc 1 3861 0
 2563 0020 0220     		mov	r0, #2
 2564              	.LVL288:
 2565              	.L148:
3876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2566              		.loc 1 3876 0
 2567              		@ sp needed
 2568 0022 7047     		bx	lr
 2569              		.cfi_endproc
ARM GAS  /tmp/ccNBoJ9q.s 			page 144


 2570              	.LFE103:
 2572              		.section	.text.HAL_TIM_ConfigTI1Input,"ax",%progbits
 2573              		.align	2
 2574              		.global	HAL_TIM_ConfigTI1Input
 2575              		.code	16
 2576              		.thumb_func
 2578              	HAL_TIM_ConfigTI1Input:
 2579              	.LFB106:
4194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2580              		.loc 1 4194 0
 2581              		.cfi_startproc
 2582              	.LVL289:
4202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpcr2 = htim->Instance->CR2;
 2583              		.loc 1 4202 0
 2584 0000 0368     		ldr	r3, [r0]
 2585 0002 5A68     		ldr	r2, [r3, #4]
 2586              	.LVL290:
4205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpcr2 &= ~TIM_CR2_TI1S;
 2587              		.loc 1 4205 0
 2588 0004 8020     		mov	r0, #128
 2589              	.LVL291:
 2590 0006 8243     		bic	r2, r0
 2591              	.LVL292:
4208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpcr2 |= TI1_Selection;
 2592              		.loc 1 4208 0
 2593 0008 1143     		orr	r1, r2
 2594              	.LVL293:
4211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->CR2 = tmpcr2;
 2595              		.loc 1 4211 0
 2596 000a 5960     		str	r1, [r3, #4]
4214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2597              		.loc 1 4214 0
 2598 000c 0020     		mov	r0, #0
 2599              		@ sp needed
 2600 000e 7047     		bx	lr
 2601              		.cfi_endproc
 2602              	.LFE106:
 2604              		.section	.text.HAL_TIM_ReadCapturedValue,"ax",%progbits
 2605              		.align	2
 2606              		.global	HAL_TIM_ReadCapturedValue
 2607              		.code	16
 2608              		.thumb_func
 2610              	HAL_TIM_ReadCapturedValue:
 2611              	.LFB109:
4299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2612              		.loc 1 4299 0
 2613              		.cfi_startproc
 2614              	.LVL294:
4302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 2615              		.loc 1 4302 0
 2616 0000 3C23     		mov	r3, #60
 2617 0002 C35C     		ldrb	r3, [r0, r3]
 2618 0004 012B     		cmp	r3, #1
 2619 0006 1FD0     		beq	.L159
4302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 2620              		.loc 1 4302 0 is_stmt 0 discriminator 2
 2621 0008 0122     		mov	r2, #1
ARM GAS  /tmp/ccNBoJ9q.s 			page 145


 2622 000a 3C23     		mov	r3, #60
 2623 000c C254     		strb	r2, [r0, r3]
4304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 2624              		.loc 1 4304 0 is_stmt 1 discriminator 2
 2625 000e 0429     		cmp	r1, #4
 2626 0010 0BD0     		beq	.L154
 2627 0012 02D8     		bhi	.L155
 2628 0014 0029     		cmp	r1, #0
 2629 0016 05D0     		beq	.L156
 2630 0018 10E0     		b	.L160
 2631              	.L155:
 2632 001a 0829     		cmp	r1, #8
 2633 001c 08D0     		beq	.L157
 2634 001e 0C29     		cmp	r1, #12
 2635 0020 09D0     		beq	.L158
 2636 0022 0BE0     		b	.L160
 2637              	.L156:
4312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpreg =  htim->Instance->CCR1;
 2638              		.loc 1 4312 0
 2639 0024 0368     		ldr	r3, [r0]
 2640 0026 596B     		ldr	r1, [r3, #52]
 2641              	.LVL295:
4314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
 2642              		.loc 1 4314 0
 2643 0028 09E0     		b	.L153
 2644              	.LVL296:
 2645              	.L154:
4322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR2;
 2646              		.loc 1 4322 0
 2647 002a 0368     		ldr	r3, [r0]
 2648 002c 996B     		ldr	r1, [r3, #56]
 2649              	.LVL297:
4324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
 2650              		.loc 1 4324 0
 2651 002e 06E0     		b	.L153
 2652              	.LVL298:
 2653              	.L157:
4333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR3;
 2654              		.loc 1 4333 0
 2655 0030 0368     		ldr	r3, [r0]
 2656 0032 D96B     		ldr	r1, [r3, #60]
 2657              	.LVL299:
4335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
 2658              		.loc 1 4335 0
 2659 0034 03E0     		b	.L153
 2660              	.LVL300:
 2661              	.L158:
4344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR4;
 2662              		.loc 1 4344 0
 2663 0036 0368     		ldr	r3, [r0]
 2664 0038 196C     		ldr	r1, [r3, #64]
 2665              	.LVL301:
4346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
 2666              		.loc 1 4346 0
 2667 003a 00E0     		b	.L153
 2668              	.LVL302:
 2669              	.L160:
ARM GAS  /tmp/ccNBoJ9q.s 			page 146


4300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpreg = 0U;
 2670              		.loc 1 4300 0
 2671 003c 0021     		mov	r1, #0
 2672              	.LVL303:
 2673              	.L153:
4353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 2674              		.loc 1 4353 0
 2675 003e 0022     		mov	r2, #0
 2676 0040 3C23     		mov	r3, #60
 2677 0042 C254     		strb	r2, [r0, r3]
4354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return tmpreg;
 2678              		.loc 1 4354 0
 2679 0044 081C     		mov	r0, r1
 2680              	.LVL304:
 2681 0046 00E0     		b	.L152
 2682              	.LVL305:
 2683              	.L159:
4302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 2684              		.loc 1 4302 0
 2685 0048 0220     		mov	r0, #2
 2686              	.LVL306:
 2687              	.L152:
4355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2688              		.loc 1 4355 0
 2689              		@ sp needed
 2690 004a 7047     		bx	lr
 2691              		.cfi_endproc
 2692              	.LFE109:
 2694              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 2695              		.align	2
 2696              		.weak	HAL_TIM_PeriodElapsedCallback
 2697              		.code	16
 2698              		.thumb_func
 2700              	HAL_TIM_PeriodElapsedCallback:
 2701              	.LFB110:
4386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2702              		.loc 1 4386 0
 2703              		.cfi_startproc
 2704              	.LVL307:
4394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2705              		.loc 1 4394 0
 2706              		@ sp needed
 2707 0000 7047     		bx	lr
 2708              		.cfi_endproc
 2709              	.LFE110:
 2711 0002 C046     		.section	.text.TIM_DMAPeriodElapsedCplt,"ax",%progbits
 2712              		.align	2
 2713              		.code	16
 2714              		.thumb_func
 2716              	TIM_DMAPeriodElapsedCplt:
 2717              	.LFB125:
4645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2718              		.loc 1 4645 0
 2719              		.cfi_startproc
 2720              	.LVL308:
 2721 0000 08B5     		push	{r3, lr}
 2722              	.LCFI24:
ARM GAS  /tmp/ccNBoJ9q.s 			page 147


 2723              		.cfi_def_cfa_offset 8
 2724              		.cfi_offset 3, -8
 2725              		.cfi_offset 14, -4
4646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2726              		.loc 1 4646 0
 2727 0002 406A     		ldr	r0, [r0, #36]
 2728              	.LVL309:
4648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 2729              		.loc 1 4648 0
 2730 0004 0122     		mov	r2, #1
 2731 0006 3D23     		mov	r3, #61
 2732 0008 C254     		strb	r2, [r0, r3]
4650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_PeriodElapsedCallback(htim);
 2733              		.loc 1 4650 0
 2734 000a FFF7FEFF 		bl	HAL_TIM_PeriodElapsedCallback
 2735              	.LVL310:
4651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2736              		.loc 1 4651 0
 2737              		@ sp needed
 2738 000e 08BD     		pop	{r3, pc}
 2739              		.cfi_endproc
 2740              	.LFE125:
 2742              		.section	.text.HAL_TIM_OC_DelayElapsedCallback,"ax",%progbits
 2743              		.align	2
 2744              		.weak	HAL_TIM_OC_DelayElapsedCallback
 2745              		.code	16
 2746              		.thumb_func
 2748              	HAL_TIM_OC_DelayElapsedCallback:
 2749              	.LFB111:
4401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2750              		.loc 1 4401 0
 2751              		.cfi_startproc
 2752              	.LVL311:
4408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2753              		.loc 1 4408 0
 2754              		@ sp needed
 2755 0000 7047     		bx	lr
 2756              		.cfi_endproc
 2757              	.LFE111:
 2759 0002 C046     		.section	.text.HAL_TIM_IC_CaptureCallback,"ax",%progbits
 2760              		.align	2
 2761              		.weak	HAL_TIM_IC_CaptureCallback
 2762              		.code	16
 2763              		.thumb_func
 2765              	HAL_TIM_IC_CaptureCallback:
 2766              	.LFB112:
4415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2767              		.loc 1 4415 0
 2768              		.cfi_startproc
 2769              	.LVL312:
4422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2770              		.loc 1 4422 0
 2771              		@ sp needed
 2772 0000 7047     		bx	lr
 2773              		.cfi_endproc
 2774              	.LFE112:
 2776 0002 C046     		.section	.text.TIM_DMACaptureCplt,"ax",%progbits
ARM GAS  /tmp/ccNBoJ9q.s 			page 148


 2777              		.align	2
 2778              		.global	TIM_DMACaptureCplt
 2779              		.code	16
 2780              		.thumb_func
 2782              	TIM_DMACaptureCplt:
 2783              	.LFB124:
4612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2784              		.loc 1 4612 0
 2785              		.cfi_startproc
 2786              	.LVL313:
 2787 0000 10B5     		push	{r4, lr}
 2788              	.LCFI25:
 2789              		.cfi_def_cfa_offset 8
 2790              		.cfi_offset 4, -8
 2791              		.cfi_offset 14, -4
4613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2792              		.loc 1 4613 0
 2793 0002 446A     		ldr	r4, [r0, #36]
 2794              	.LVL314:
4615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 2795              		.loc 1 4615 0
 2796 0004 0122     		mov	r2, #1
 2797 0006 3D23     		mov	r3, #61
 2798 0008 E254     		strb	r2, [r4, r3]
4617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 2799              		.loc 1 4617 0
 2800 000a 636A     		ldr	r3, [r4, #36]
 2801 000c 8342     		cmp	r3, r0
 2802 000e 02D1     		bne	.L166
4619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 2803              		.loc 1 4619 0
 2804 0010 0123     		mov	r3, #1
 2805 0012 2377     		strb	r3, [r4, #28]
 2806 0014 10E0     		b	.L167
 2807              	.L166:
4621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 2808              		.loc 1 4621 0
 2809 0016 A36A     		ldr	r3, [r4, #40]
 2810 0018 8342     		cmp	r3, r0
 2811 001a 02D1     		bne	.L168
4623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 2812              		.loc 1 4623 0
 2813 001c 0223     		mov	r3, #2
 2814 001e 2377     		strb	r3, [r4, #28]
 2815 0020 0AE0     		b	.L167
 2816              	.L168:
4625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 2817              		.loc 1 4625 0
 2818 0022 E36A     		ldr	r3, [r4, #44]
 2819 0024 8342     		cmp	r3, r0
 2820 0026 02D1     		bne	.L169
4627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 2821              		.loc 1 4627 0
 2822 0028 0423     		mov	r3, #4
 2823 002a 2377     		strb	r3, [r4, #28]
 2824 002c 04E0     		b	.L167
 2825              	.L169:
ARM GAS  /tmp/ccNBoJ9q.s 			page 149


4629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 2826              		.loc 1 4629 0
 2827 002e 236B     		ldr	r3, [r4, #48]
 2828 0030 8342     		cmp	r3, r0
 2829 0032 01D1     		bne	.L167
4631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 2830              		.loc 1 4631 0
 2831 0034 0823     		mov	r3, #8
 2832 0036 2377     		strb	r3, [r4, #28]
 2833              	.L167:
4634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_IC_CaptureCallback(htim);
 2834              		.loc 1 4634 0
 2835 0038 201C     		mov	r0, r4
 2836              	.LVL315:
 2837 003a FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 2838              	.LVL316:
4636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 2839              		.loc 1 4636 0
 2840 003e 0023     		mov	r3, #0
 2841 0040 2377     		strb	r3, [r4, #28]
4637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2842              		.loc 1 4637 0
 2843              		@ sp needed
 2844              	.LVL317:
 2845 0042 10BD     		pop	{r4, pc}
 2846              		.cfi_endproc
 2847              	.LFE124:
 2849              		.section	.text.HAL_TIM_PWM_PulseFinishedCallback,"ax",%progbits
 2850              		.align	2
 2851              		.weak	HAL_TIM_PWM_PulseFinishedCallback
 2852              		.code	16
 2853              		.thumb_func
 2855              	HAL_TIM_PWM_PulseFinishedCallback:
 2856              	.LFB113:
4430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2857              		.loc 1 4430 0
 2858              		.cfi_startproc
 2859              	.LVL318:
4437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2860              		.loc 1 4437 0
 2861              		@ sp needed
 2862 0000 7047     		bx	lr
 2863              		.cfi_endproc
 2864              	.LFE113:
 2866 0002 C046     		.section	.text.TIM_DMADelayPulseCplt,"ax",%progbits
 2867              		.align	2
 2868              		.global	TIM_DMADelayPulseCplt
 2869              		.code	16
 2870              		.thumb_func
 2872              	TIM_DMADelayPulseCplt:
 2873              	.LFB123:
4580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2874              		.loc 1 4580 0
 2875              		.cfi_startproc
 2876              	.LVL319:
 2877 0000 10B5     		push	{r4, lr}
 2878              	.LCFI26:
ARM GAS  /tmp/ccNBoJ9q.s 			page 150


 2879              		.cfi_def_cfa_offset 8
 2880              		.cfi_offset 4, -8
 2881              		.cfi_offset 14, -4
4581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2882              		.loc 1 4581 0
 2883 0002 446A     		ldr	r4, [r0, #36]
 2884              	.LVL320:
4583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 2885              		.loc 1 4583 0
 2886 0004 0122     		mov	r2, #1
 2887 0006 3D23     		mov	r3, #61
 2888 0008 E254     		strb	r2, [r4, r3]
4585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 2889              		.loc 1 4585 0
 2890 000a 636A     		ldr	r3, [r4, #36]
 2891 000c 8342     		cmp	r3, r0
 2892 000e 02D1     		bne	.L172
4587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 2893              		.loc 1 4587 0
 2894 0010 0123     		mov	r3, #1
 2895 0012 2377     		strb	r3, [r4, #28]
 2896 0014 10E0     		b	.L173
 2897              	.L172:
4589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 2898              		.loc 1 4589 0
 2899 0016 A36A     		ldr	r3, [r4, #40]
 2900 0018 8342     		cmp	r3, r0
 2901 001a 02D1     		bne	.L174
4591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 2902              		.loc 1 4591 0
 2903 001c 0223     		mov	r3, #2
 2904 001e 2377     		strb	r3, [r4, #28]
 2905 0020 0AE0     		b	.L173
 2906              	.L174:
4593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 2907              		.loc 1 4593 0
 2908 0022 E36A     		ldr	r3, [r4, #44]
 2909 0024 8342     		cmp	r3, r0
 2910 0026 02D1     		bne	.L175
4595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 2911              		.loc 1 4595 0
 2912 0028 0423     		mov	r3, #4
 2913 002a 2377     		strb	r3, [r4, #28]
 2914 002c 04E0     		b	.L173
 2915              	.L175:
4597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 2916              		.loc 1 4597 0
 2917 002e 236B     		ldr	r3, [r4, #48]
 2918 0030 8342     		cmp	r3, r0
 2919 0032 01D1     		bne	.L173
4599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 2920              		.loc 1 4599 0
 2921 0034 0823     		mov	r3, #8
 2922 0036 2377     		strb	r3, [r4, #28]
 2923              	.L173:
4602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_PWM_PulseFinishedCallback(htim);
 2924              		.loc 1 4602 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 151


 2925 0038 201C     		mov	r0, r4
 2926              	.LVL321:
 2927 003a FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 2928              	.LVL322:
4604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 2929              		.loc 1 4604 0
 2930 003e 0023     		mov	r3, #0
 2931 0040 2377     		strb	r3, [r4, #28]
4605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2932              		.loc 1 4605 0
 2933              		@ sp needed
 2934              	.LVL323:
 2935 0042 10BD     		pop	{r4, pc}
 2936              		.cfi_endproc
 2937              	.LFE123:
 2939              		.section	.text.HAL_TIM_TriggerCallback,"ax",%progbits
 2940              		.align	2
 2941              		.weak	HAL_TIM_TriggerCallback
 2942              		.code	16
 2943              		.thumb_func
 2945              	HAL_TIM_TriggerCallback:
 2946              	.LFB114:
4445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2947              		.loc 1 4445 0
 2948              		.cfi_startproc
 2949              	.LVL324:
4452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 2950              		.loc 1 4452 0
 2951              		@ sp needed
 2952 0000 7047     		bx	lr
 2953              		.cfi_endproc
 2954              	.LFE114:
 2956 0002 C046     		.section	.text.HAL_TIM_IRQHandler,"ax",%progbits
 2957              		.align	2
 2958              		.global	HAL_TIM_IRQHandler
 2959              		.code	16
 2960              		.thumb_func
 2962              	HAL_TIM_IRQHandler:
 2963              	.LFB92:
2770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 2964              		.loc 1 2770 0
 2965              		.cfi_startproc
 2966              	.LVL325:
 2967 0000 10B5     		push	{r4, lr}
 2968              	.LCFI27:
 2969              		.cfi_def_cfa_offset 8
 2970              		.cfi_offset 4, -8
 2971              		.cfi_offset 14, -4
 2972 0002 041C     		mov	r4, r0
2772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 2973              		.loc 1 2772 0
 2974 0004 0368     		ldr	r3, [r0]
 2975 0006 1A69     		ldr	r2, [r3, #16]
 2976 0008 9107     		lsl	r1, r2, #30
 2977 000a 15D5     		bpl	.L178
2774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) !=RESET)
 2978              		.loc 1 2774 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 152


 2979 000c DA68     		ldr	r2, [r3, #12]
 2980 000e 9107     		lsl	r1, r2, #30
 2981 0010 12D5     		bpl	.L178
2777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 2982              		.loc 1 2777 0
 2983 0012 0322     		mov	r2, #3
 2984 0014 5242     		neg	r2, r2
 2985 0016 1A61     		str	r2, [r3, #16]
2778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 2986              		.loc 1 2778 0
 2987 0018 0123     		mov	r3, #1
 2988 001a 0377     		strb	r3, [r0, #28]
2781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         if((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 2989              		.loc 1 2781 0
 2990 001c 0368     		ldr	r3, [r0]
 2991 001e 9B69     		ldr	r3, [r3, #24]
 2992 0020 9A07     		lsl	r2, r3, #30
 2993 0022 02D0     		beq	.L179
2783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           HAL_TIM_IC_CaptureCallback(htim);
 2994              		.loc 1 2783 0
 2995 0024 FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 2996              	.LVL326:
 2997 0028 04E0     		b	.L180
 2998              	.LVL327:
 2999              	.L179:
2788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           HAL_TIM_OC_DelayElapsedCallback(htim);
 3000              		.loc 1 2788 0
 3001 002a FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback
 3002              	.LVL328:
2789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           HAL_TIM_PWM_PulseFinishedCallback(htim);
 3003              		.loc 1 2789 0
 3004 002e 201C     		mov	r0, r4
 3005 0030 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 3006              	.LVL329:
 3007              	.L180:
2791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 3008              		.loc 1 2791 0
 3009 0034 0023     		mov	r3, #0
 3010 0036 2377     		strb	r3, [r4, #28]
 3011              	.L178:
2796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 3012              		.loc 1 2796 0
 3013 0038 2368     		ldr	r3, [r4]
 3014 003a 1A69     		ldr	r2, [r3, #16]
 3015 003c 5107     		lsl	r1, r2, #29
 3016 003e 19D5     		bpl	.L181
2798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) !=RESET)
 3017              		.loc 1 2798 0
 3018 0040 DA68     		ldr	r2, [r3, #12]
 3019 0042 5107     		lsl	r1, r2, #29
 3020 0044 16D5     		bpl	.L181
2800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 3021              		.loc 1 2800 0
 3022 0046 0522     		mov	r2, #5
 3023 0048 5242     		neg	r2, r2
 3024 004a 1A61     		str	r2, [r3, #16]
2801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
ARM GAS  /tmp/ccNBoJ9q.s 			page 153


 3025              		.loc 1 2801 0
 3026 004c 0223     		mov	r3, #2
 3027 004e 2377     		strb	r3, [r4, #28]
2803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       if((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 3028              		.loc 1 2803 0
 3029 0050 2368     		ldr	r3, [r4]
 3030 0052 9A69     		ldr	r2, [r3, #24]
 3031 0054 C023     		mov	r3, #192
 3032 0056 9B00     		lsl	r3, r3, #2
 3033 0058 1A42     		tst	r2, r3
 3034 005a 03D0     		beq	.L182
2805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
 3035              		.loc 1 2805 0
 3036 005c 201C     		mov	r0, r4
 3037 005e FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 3038              	.LVL330:
 3039 0062 05E0     		b	.L183
 3040              	.L182:
2810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
 3041              		.loc 1 2810 0
 3042 0064 201C     		mov	r0, r4
 3043 0066 FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback
 3044              	.LVL331:
2811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
 3045              		.loc 1 2811 0
 3046 006a 201C     		mov	r0, r4
 3047 006c FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 3048              	.LVL332:
 3049              	.L183:
2813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 3050              		.loc 1 2813 0
 3051 0070 0023     		mov	r3, #0
 3052 0072 2377     		strb	r3, [r4, #28]
 3053              	.L181:
2817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 3054              		.loc 1 2817 0
 3055 0074 2368     		ldr	r3, [r4]
 3056 0076 1A69     		ldr	r2, [r3, #16]
 3057 0078 1107     		lsl	r1, r2, #28
 3058 007a 17D5     		bpl	.L184
2819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) !=RESET)
 3059              		.loc 1 2819 0
 3060 007c DA68     		ldr	r2, [r3, #12]
 3061 007e 1107     		lsl	r1, r2, #28
 3062 0080 14D5     		bpl	.L184
2821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 3063              		.loc 1 2821 0
 3064 0082 0922     		mov	r2, #9
 3065 0084 5242     		neg	r2, r2
 3066 0086 1A61     		str	r2, [r3, #16]
2822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 3067              		.loc 1 2822 0
 3068 0088 0423     		mov	r3, #4
 3069 008a 2377     		strb	r3, [r4, #28]
2824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       if((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 3070              		.loc 1 2824 0
 3071 008c 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccNBoJ9q.s 			page 154


 3072 008e DB69     		ldr	r3, [r3, #28]
 3073 0090 9A07     		lsl	r2, r3, #30
 3074 0092 03D0     		beq	.L185
2826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
 3075              		.loc 1 2826 0
 3076 0094 201C     		mov	r0, r4
 3077 0096 FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 3078              	.LVL333:
 3079 009a 05E0     		b	.L186
 3080              	.L185:
2831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
 3081              		.loc 1 2831 0
 3082 009c 201C     		mov	r0, r4
 3083 009e FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback
 3084              	.LVL334:
2832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
 3085              		.loc 1 2832 0
 3086 00a2 201C     		mov	r0, r4
 3087 00a4 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 3088              	.LVL335:
 3089              	.L186:
2834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 3090              		.loc 1 2834 0
 3091 00a8 0023     		mov	r3, #0
 3092 00aa 2377     		strb	r3, [r4, #28]
 3093              	.L184:
2838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 3094              		.loc 1 2838 0
 3095 00ac 2368     		ldr	r3, [r4]
 3096 00ae 1A69     		ldr	r2, [r3, #16]
 3097 00b0 D106     		lsl	r1, r2, #27
 3098 00b2 19D5     		bpl	.L187
2840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) !=RESET)
 3099              		.loc 1 2840 0
 3100 00b4 DA68     		ldr	r2, [r3, #12]
 3101 00b6 D106     		lsl	r1, r2, #27
 3102 00b8 16D5     		bpl	.L187
2842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 3103              		.loc 1 2842 0
 3104 00ba 1122     		mov	r2, #17
 3105 00bc 5242     		neg	r2, r2
 3106 00be 1A61     		str	r2, [r3, #16]
2843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 3107              		.loc 1 2843 0
 3108 00c0 0823     		mov	r3, #8
 3109 00c2 2377     		strb	r3, [r4, #28]
2845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       if((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 3110              		.loc 1 2845 0
 3111 00c4 2368     		ldr	r3, [r4]
 3112 00c6 DA69     		ldr	r2, [r3, #28]
 3113 00c8 C023     		mov	r3, #192
 3114 00ca 9B00     		lsl	r3, r3, #2
 3115 00cc 1A42     		tst	r2, r3
 3116 00ce 03D0     		beq	.L188
2847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
 3117              		.loc 1 2847 0
 3118 00d0 201C     		mov	r0, r4
ARM GAS  /tmp/ccNBoJ9q.s 			page 155


 3119 00d2 FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 3120              	.LVL336:
 3121 00d6 05E0     		b	.L189
 3122              	.L188:
2852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
 3123              		.loc 1 2852 0
 3124 00d8 201C     		mov	r0, r4
 3125 00da FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback
 3126              	.LVL337:
2853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
 3127              		.loc 1 2853 0
 3128 00de 201C     		mov	r0, r4
 3129 00e0 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 3130              	.LVL338:
 3131              	.L189:
2855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 3132              		.loc 1 2855 0
 3133 00e4 0023     		mov	r3, #0
 3134 00e6 2377     		strb	r3, [r4, #28]
 3135              	.L187:
2859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 3136              		.loc 1 2859 0
 3137 00e8 2368     		ldr	r3, [r4]
 3138 00ea 1A69     		ldr	r2, [r3, #16]
 3139 00ec D107     		lsl	r1, r2, #31
 3140 00ee 08D5     		bpl	.L190
2861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) !=RESET)
 3141              		.loc 1 2861 0
 3142 00f0 DA68     		ldr	r2, [r3, #12]
 3143 00f2 D107     		lsl	r1, r2, #31
 3144 00f4 05D5     		bpl	.L190
2863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 3145              		.loc 1 2863 0
 3146 00f6 0222     		mov	r2, #2
 3147 00f8 5242     		neg	r2, r2
 3148 00fa 1A61     		str	r2, [r3, #16]
2864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_TIM_PeriodElapsedCallback(htim);
 3149              		.loc 1 2864 0
 3150 00fc 201C     		mov	r0, r4
 3151 00fe FFF7FEFF 		bl	HAL_TIM_PeriodElapsedCallback
 3152              	.LVL339:
 3153              	.L190:
2868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 3154              		.loc 1 2868 0
 3155 0102 2368     		ldr	r3, [r4]
 3156 0104 1A69     		ldr	r2, [r3, #16]
 3157 0106 1106     		lsl	r1, r2, #24
 3158 0108 08D5     		bpl	.L191
2870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) !=RESET)
 3159              		.loc 1 2870 0
 3160 010a DA68     		ldr	r2, [r3, #12]
 3161 010c 1106     		lsl	r1, r2, #24
 3162 010e 05D5     		bpl	.L191
2872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 3163              		.loc 1 2872 0
 3164 0110 8122     		mov	r2, #129
 3165 0112 5242     		neg	r2, r2
ARM GAS  /tmp/ccNBoJ9q.s 			page 156


 3166 0114 1A61     		str	r2, [r3, #16]
2873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_TIMEx_BreakCallback(htim);
 3167              		.loc 1 2873 0
 3168 0116 201C     		mov	r0, r4
 3169 0118 FFF7FEFF 		bl	HAL_TIMEx_BreakCallback
 3170              	.LVL340:
 3171              	.L191:
2877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 3172              		.loc 1 2877 0
 3173 011c 2368     		ldr	r3, [r4]
 3174 011e 1A69     		ldr	r2, [r3, #16]
 3175 0120 5106     		lsl	r1, r2, #25
 3176 0122 08D5     		bpl	.L192
2879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) !=RESET)
 3177              		.loc 1 2879 0
 3178 0124 DA68     		ldr	r2, [r3, #12]
 3179 0126 5106     		lsl	r1, r2, #25
 3180 0128 05D5     		bpl	.L192
2881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 3181              		.loc 1 2881 0
 3182 012a 4122     		mov	r2, #65
 3183 012c 5242     		neg	r2, r2
 3184 012e 1A61     		str	r2, [r3, #16]
2882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_TIM_TriggerCallback(htim);
 3185              		.loc 1 2882 0
 3186 0130 201C     		mov	r0, r4
 3187 0132 FFF7FEFF 		bl	HAL_TIM_TriggerCallback
 3188              	.LVL341:
 3189              	.L192:
2886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 3190              		.loc 1 2886 0
 3191 0136 2368     		ldr	r3, [r4]
 3192 0138 1A69     		ldr	r2, [r3, #16]
 3193 013a 9106     		lsl	r1, r2, #26
 3194 013c 08D5     		bpl	.L177
2888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) !=RESET)
 3195              		.loc 1 2888 0
 3196 013e DA68     		ldr	r2, [r3, #12]
 3197 0140 9106     		lsl	r1, r2, #26
 3198 0142 05D5     		bpl	.L177
2890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 3199              		.loc 1 2890 0
 3200 0144 2122     		mov	r2, #33
 3201 0146 5242     		neg	r2, r2
 3202 0148 1A61     		str	r2, [r3, #16]
2891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_TIMEx_CommutationCallback(htim);
 3203              		.loc 1 2891 0
 3204 014a 201C     		mov	r0, r4
 3205 014c FFF7FEFF 		bl	HAL_TIMEx_CommutationCallback
 3206              	.LVL342:
 3207              	.L177:
2894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3208              		.loc 1 2894 0
 3209              		@ sp needed
 3210              	.LVL343:
 3211 0150 10BD     		pop	{r4, pc}
 3212              		.cfi_endproc
ARM GAS  /tmp/ccNBoJ9q.s 			page 157


 3213              	.LFE92:
 3215 0152 C046     		.section	.text.TIM_DMATriggerCplt,"ax",%progbits
 3216              		.align	2
 3217              		.code	16
 3218              		.thumb_func
 3220              	TIM_DMATriggerCplt:
 3221              	.LFB126:
4659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3222              		.loc 1 4659 0
 3223              		.cfi_startproc
 3224              	.LVL344:
 3225 0000 08B5     		push	{r3, lr}
 3226              	.LCFI28:
 3227              		.cfi_def_cfa_offset 8
 3228              		.cfi_offset 3, -8
 3229              		.cfi_offset 14, -4
4660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3230              		.loc 1 4660 0
 3231 0002 406A     		ldr	r0, [r0, #36]
 3232              	.LVL345:
4662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 3233              		.loc 1 4662 0
 3234 0004 0122     		mov	r2, #1
 3235 0006 3D23     		mov	r3, #61
 3236 0008 C254     		strb	r2, [r0, r3]
4664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_TriggerCallback(htim);
 3237              		.loc 1 4664 0
 3238 000a FFF7FEFF 		bl	HAL_TIM_TriggerCallback
 3239              	.LVL346:
4665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3240              		.loc 1 4665 0
 3241              		@ sp needed
 3242 000e 08BD     		pop	{r3, pc}
 3243              		.cfi_endproc
 3244              	.LFE126:
 3246              		.section	.text.HAL_TIM_ErrorCallback,"ax",%progbits
 3247              		.align	2
 3248              		.weak	HAL_TIM_ErrorCallback
 3249              		.code	16
 3250              		.thumb_func
 3252              	HAL_TIM_ErrorCallback:
 3253              	.LFB115:
4460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3254              		.loc 1 4460 0
 3255              		.cfi_startproc
 3256              	.LVL347:
4467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3257              		.loc 1 4467 0
 3258              		@ sp needed
 3259 0000 7047     		bx	lr
 3260              		.cfi_endproc
 3261              	.LFE115:
 3263 0002 C046     		.section	.text.TIM_DMAError,"ax",%progbits
 3264              		.align	2
 3265              		.global	TIM_DMAError
 3266              		.code	16
 3267              		.thumb_func
ARM GAS  /tmp/ccNBoJ9q.s 			page 158


 3269              	TIM_DMAError:
 3270              	.LFB122:
4566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3271              		.loc 1 4566 0
 3272              		.cfi_startproc
 3273              	.LVL348:
 3274 0000 08B5     		push	{r3, lr}
 3275              	.LCFI29:
 3276              		.cfi_def_cfa_offset 8
 3277              		.cfi_offset 3, -8
 3278              		.cfi_offset 14, -4
4567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 3279              		.loc 1 4567 0
 3280 0002 406A     		ldr	r0, [r0, #36]
 3281              	.LVL349:
4569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 3282              		.loc 1 4569 0
 3283 0004 0122     		mov	r2, #1
 3284 0006 3D23     		mov	r3, #61
 3285 0008 C254     		strb	r2, [r0, r3]
4571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   HAL_TIM_ErrorCallback(htim);
 3286              		.loc 1 4571 0
 3287 000a FFF7FEFF 		bl	HAL_TIM_ErrorCallback
 3288              	.LVL350:
4572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3289              		.loc 1 4572 0
 3290              		@ sp needed
 3291 000e 08BD     		pop	{r3, pc}
 3292              		.cfi_endproc
 3293              	.LFE122:
 3295              		.section	.text.HAL_TIM_Base_GetState,"ax",%progbits
 3296              		.align	2
 3297              		.global	HAL_TIM_Base_GetState
 3298              		.code	16
 3299              		.thumb_func
 3301              	HAL_TIM_Base_GetState:
 3302              	.LFB116:
4494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3303              		.loc 1 4494 0
 3304              		.cfi_startproc
 3305              	.LVL351:
4495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return htim->State;
 3306              		.loc 1 4495 0
 3307 0000 3D23     		mov	r3, #61
 3308 0002 C05C     		ldrb	r0, [r0, r3]
 3309              	.LVL352:
 3310 0004 C0B2     		uxtb	r0, r0
4496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3311              		.loc 1 4496 0
 3312              		@ sp needed
 3313 0006 7047     		bx	lr
 3314              		.cfi_endproc
 3315              	.LFE116:
 3317              		.section	.text.HAL_TIM_OC_GetState,"ax",%progbits
 3318              		.align	2
 3319              		.global	HAL_TIM_OC_GetState
 3320              		.code	16
ARM GAS  /tmp/ccNBoJ9q.s 			page 159


 3321              		.thumb_func
 3323              	HAL_TIM_OC_GetState:
 3324              	.LFB117:
4504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3325              		.loc 1 4504 0
 3326              		.cfi_startproc
 3327              	.LVL353:
4505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return htim->State;
 3328              		.loc 1 4505 0
 3329 0000 3D23     		mov	r3, #61
 3330 0002 C05C     		ldrb	r0, [r0, r3]
 3331              	.LVL354:
 3332 0004 C0B2     		uxtb	r0, r0
4506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3333              		.loc 1 4506 0
 3334              		@ sp needed
 3335 0006 7047     		bx	lr
 3336              		.cfi_endproc
 3337              	.LFE117:
 3339              		.section	.text.HAL_TIM_PWM_GetState,"ax",%progbits
 3340              		.align	2
 3341              		.global	HAL_TIM_PWM_GetState
 3342              		.code	16
 3343              		.thumb_func
 3345              	HAL_TIM_PWM_GetState:
 3346              	.LFB118:
4514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3347              		.loc 1 4514 0
 3348              		.cfi_startproc
 3349              	.LVL355:
4515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return htim->State;
 3350              		.loc 1 4515 0
 3351 0000 3D23     		mov	r3, #61
 3352 0002 C05C     		ldrb	r0, [r0, r3]
 3353              	.LVL356:
 3354 0004 C0B2     		uxtb	r0, r0
4516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3355              		.loc 1 4516 0
 3356              		@ sp needed
 3357 0006 7047     		bx	lr
 3358              		.cfi_endproc
 3359              	.LFE118:
 3361              		.section	.text.HAL_TIM_IC_GetState,"ax",%progbits
 3362              		.align	2
 3363              		.global	HAL_TIM_IC_GetState
 3364              		.code	16
 3365              		.thumb_func
 3367              	HAL_TIM_IC_GetState:
 3368              	.LFB119:
4524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3369              		.loc 1 4524 0
 3370              		.cfi_startproc
 3371              	.LVL357:
4525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return htim->State;
 3372              		.loc 1 4525 0
 3373 0000 3D23     		mov	r3, #61
 3374 0002 C05C     		ldrb	r0, [r0, r3]
ARM GAS  /tmp/ccNBoJ9q.s 			page 160


 3375              	.LVL358:
 3376 0004 C0B2     		uxtb	r0, r0
4526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3377              		.loc 1 4526 0
 3378              		@ sp needed
 3379 0006 7047     		bx	lr
 3380              		.cfi_endproc
 3381              	.LFE119:
 3383              		.section	.text.HAL_TIM_OnePulse_GetState,"ax",%progbits
 3384              		.align	2
 3385              		.global	HAL_TIM_OnePulse_GetState
 3386              		.code	16
 3387              		.thumb_func
 3389              	HAL_TIM_OnePulse_GetState:
 3390              	.LFB120:
4534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3391              		.loc 1 4534 0
 3392              		.cfi_startproc
 3393              	.LVL359:
4535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return htim->State;
 3394              		.loc 1 4535 0
 3395 0000 3D23     		mov	r3, #61
 3396 0002 C05C     		ldrb	r0, [r0, r3]
 3397              	.LVL360:
 3398 0004 C0B2     		uxtb	r0, r0
4536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3399              		.loc 1 4536 0
 3400              		@ sp needed
 3401 0006 7047     		bx	lr
 3402              		.cfi_endproc
 3403              	.LFE120:
 3405              		.section	.text.HAL_TIM_Encoder_GetState,"ax",%progbits
 3406              		.align	2
 3407              		.global	HAL_TIM_Encoder_GetState
 3408              		.code	16
 3409              		.thumb_func
 3411              	HAL_TIM_Encoder_GetState:
 3412              	.LFB121:
4544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3413              		.loc 1 4544 0
 3414              		.cfi_startproc
 3415              	.LVL361:
4545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return htim->State;
 3416              		.loc 1 4545 0
 3417 0000 3D23     		mov	r3, #61
 3418 0002 C05C     		ldrb	r0, [r0, r3]
 3419              	.LVL362:
 3420 0004 C0B2     		uxtb	r0, r0
4546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3421              		.loc 1 4546 0
 3422              		@ sp needed
 3423 0006 7047     		bx	lr
 3424              		.cfi_endproc
 3425              	.LFE121:
 3427              		.section	.text.TIM_Base_SetConfig,"ax",%progbits
 3428              		.align	2
 3429              		.global	TIM_Base_SetConfig
ARM GAS  /tmp/ccNBoJ9q.s 			page 161


 3430              		.code	16
 3431              		.thumb_func
 3433              	TIM_Base_SetConfig:
 3434              	.LFB127:
4674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3435              		.loc 1 4674 0
 3436              		.cfi_startproc
 3437              	.LVL363:
4676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpcr1 = TIMx->CR1;
 3438              		.loc 1 4676 0
 3439 0000 0368     		ldr	r3, [r0]
 3440              	.LVL364:
4679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 3441              		.loc 1 4679 0
 3442 0002 214A     		ldr	r2, .L210
 3443 0004 9042     		cmp	r0, r2
 3444 0006 06D0     		beq	.L204
4679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 3445              		.loc 1 4679 0 is_stmt 0 discriminator 1
 3446 0008 8022     		mov	r2, #128
 3447 000a D205     		lsl	r2, r2, #23
 3448 000c 9042     		cmp	r0, r2
 3449 000e 02D0     		beq	.L204
 3450 0010 1E4A     		ldr	r2, .L210+4
 3451 0012 9042     		cmp	r0, r2
 3452 0014 03D1     		bne	.L205
 3453              	.L204:
4682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 3454              		.loc 1 4682 0 is_stmt 1
 3455 0016 7022     		mov	r2, #112
 3456 0018 9343     		bic	r3, r2
 3457              	.LVL365:
4683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr1 |= Structure->CounterMode;
 3458              		.loc 1 4683 0
 3459 001a 4A68     		ldr	r2, [r1, #4]
 3460 001c 1343     		orr	r3, r2
 3461              	.LVL366:
 3462              	.L205:
4686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 3463              		.loc 1 4686 0
 3464 001e 1A4A     		ldr	r2, .L210
 3465 0020 9042     		cmp	r0, r2
 3466 0022 12D0     		beq	.L206
4686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 3467              		.loc 1 4686 0 is_stmt 0 discriminator 1
 3468 0024 8022     		mov	r2, #128
 3469 0026 D205     		lsl	r2, r2, #23
 3470 0028 9042     		cmp	r0, r2
 3471 002a 0ED0     		beq	.L206
 3472 002c 174A     		ldr	r2, .L210+4
 3473 002e 9042     		cmp	r0, r2
 3474 0030 0BD0     		beq	.L206
 3475 0032 174A     		ldr	r2, .L210+8
 3476 0034 9042     		cmp	r0, r2
 3477 0036 08D0     		beq	.L206
 3478 0038 164A     		ldr	r2, .L210+12
 3479 003a 9042     		cmp	r0, r2
ARM GAS  /tmp/ccNBoJ9q.s 			page 162


 3480 003c 05D0     		beq	.L206
 3481 003e 164A     		ldr	r2, .L210+16
 3482 0040 9042     		cmp	r0, r2
 3483 0042 02D0     		beq	.L206
 3484 0044 154A     		ldr	r2, .L210+20
 3485 0046 9042     		cmp	r0, r2
 3486 0048 03D1     		bne	.L207
 3487              	.L206:
4689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr1 &= ~TIM_CR1_CKD;
 3488              		.loc 1 4689 0 is_stmt 1
 3489 004a 154A     		ldr	r2, .L210+24
 3490 004c 1340     		and	r3, r2
 3491              	.LVL367:
4690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr1 |= (uint32_t)Structure->ClockDivision;
 3492              		.loc 1 4690 0
 3493 004e CA68     		ldr	r2, [r1, #12]
 3494 0050 1343     		orr	r3, r2
 3495              	.LVL368:
 3496              	.L207:
4694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 3497              		.loc 1 4694 0
 3498 0052 8022     		mov	r2, #128
 3499 0054 9343     		bic	r3, r2
 3500              	.LVL369:
 3501 0056 4A69     		ldr	r2, [r1, #20]
 3502 0058 1343     		orr	r3, r2
 3503              	.LVL370:
4696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CR1 = tmpcr1;
 3504              		.loc 1 4696 0
 3505 005a 0360     		str	r3, [r0]
4699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->ARR = (uint32_t)Structure->Period ;
 3506              		.loc 1 4699 0
 3507 005c 8B68     		ldr	r3, [r1, #8]
 3508              	.LVL371:
 3509 005e C362     		str	r3, [r0, #44]
 3510              	.LVL372:
4702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->PSC = (uint32_t)Structure->Prescaler;
 3511              		.loc 1 4702 0
 3512 0060 0A68     		ldr	r2, [r1]
 3513 0062 8262     		str	r2, [r0, #40]
4704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 3514              		.loc 1 4704 0
 3515 0064 084B     		ldr	r3, .L210
 3516 0066 9842     		cmp	r0, r3
 3517 0068 08D0     		beq	.L208
4704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 3518              		.loc 1 4704 0 is_stmt 0 discriminator 1
 3519 006a 0A4B     		ldr	r3, .L210+12
 3520 006c 9842     		cmp	r0, r3
 3521 006e 05D0     		beq	.L208
 3522 0070 094B     		ldr	r3, .L210+16
 3523 0072 9842     		cmp	r0, r3
 3524 0074 02D0     		beq	.L208
 3525 0076 094B     		ldr	r3, .L210+20
 3526 0078 9842     		cmp	r0, r3
 3527 007a 01D1     		bne	.L209
 3528              	.L208:
ARM GAS  /tmp/ccNBoJ9q.s 			page 163


4707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIMx->RCR = Structure->RepetitionCounter;
 3529              		.loc 1 4707 0 is_stmt 1
 3530 007c 0B69     		ldr	r3, [r1, #16]
 3531 007e 0363     		str	r3, [r0, #48]
 3532              	.L209:
4712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->EGR = TIM_EGR_UG;
 3533              		.loc 1 4712 0
 3534 0080 0123     		mov	r3, #1
 3535 0082 4361     		str	r3, [r0, #20]
4713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3536              		.loc 1 4713 0
 3537              		@ sp needed
 3538 0084 7047     		bx	lr
 3539              	.L211:
 3540 0086 C046     		.align	2
 3541              	.L210:
 3542 0088 002C0140 		.word	1073818624
 3543 008c 00040040 		.word	1073742848
 3544 0090 00200040 		.word	1073750016
 3545 0094 00400140 		.word	1073823744
 3546 0098 00440140 		.word	1073824768
 3547 009c 00480140 		.word	1073825792
 3548 00a0 FFFCFFFF 		.word	-769
 3549              		.cfi_endproc
 3550              	.LFE127:
 3552              		.section	.text.HAL_TIM_Base_Init,"ax",%progbits
 3553              		.align	2
 3554              		.global	HAL_TIM_Base_Init
 3555              		.code	16
 3556              		.thumb_func
 3558              	HAL_TIM_Base_Init:
 3559              	.LFB34:
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3560              		.loc 1 204 0
 3561              		.cfi_startproc
 3562              	.LVL373:
 3563 0000 38B5     		push	{r3, r4, r5, lr}
 3564              	.LCFI30:
 3565              		.cfi_def_cfa_offset 16
 3566              		.cfi_offset 3, -16
 3567              		.cfi_offset 4, -12
 3568              		.cfi_offset 5, -8
 3569              		.cfi_offset 14, -4
 3570 0002 041E     		sub	r4, r0, #0
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim == NULL)
 3571              		.loc 1 206 0
 3572 0004 13D0     		beq	.L215
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 3573              		.loc 1 217 0
 3574 0006 3D23     		mov	r3, #61
 3575 0008 C35C     		ldrb	r3, [r0, r3]
 3576 000a 002B     		cmp	r3, #0
 3577 000c 04D1     		bne	.L214
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 3578              		.loc 1 220 0
 3579 000e 0022     		mov	r2, #0
 3580 0010 3C23     		mov	r3, #60
ARM GAS  /tmp/ccNBoJ9q.s 			page 164


 3581 0012 C254     		strb	r2, [r0, r3]
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     HAL_TIM_Base_MspInit(htim);
 3582              		.loc 1 223 0
 3583 0014 FFF7FEFF 		bl	HAL_TIM_Base_MspInit
 3584              	.LVL374:
 3585              	.L214:
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 3586              		.loc 1 227 0
 3587 0018 3D25     		mov	r5, #61
 3588 001a 0223     		mov	r3, #2
 3589 001c 6355     		strb	r3, [r4, r5]
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
 3590              		.loc 1 230 0
 3591 001e 211C     		mov	r1, r4
 3592 0020 01C9     		ldmia	r1!, {r0}
 3593 0022 FFF7FEFF 		bl	TIM_Base_SetConfig
 3594              	.LVL375:
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 3595              		.loc 1 233 0
 3596 0026 0123     		mov	r3, #1
 3597 0028 6355     		strb	r3, [r4, r5]
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 3598              		.loc 1 235 0
 3599 002a 0020     		mov	r0, #0
 3600 002c 00E0     		b	.L213
 3601              	.LVL376:
 3602              	.L215:
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
 3603              		.loc 1 208 0
 3604 002e 0120     		mov	r0, #1
 3605              	.LVL377:
 3606              	.L213:
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3607              		.loc 1 236 0
 3608              		@ sp needed
 3609              	.LVL378:
 3610 0030 38BD     		pop	{r3, r4, r5, pc}
 3611              		.cfi_endproc
 3612              	.LFE34:
 3614 0032 C046     		.section	.text.HAL_TIM_OC_Init,"ax",%progbits
 3615              		.align	2
 3616              		.global	HAL_TIM_OC_Init
 3617              		.code	16
 3618              		.thumb_func
 3620              	HAL_TIM_OC_Init:
 3621              	.LFB44:
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3622              		.loc 1 482 0
 3623              		.cfi_startproc
 3624              	.LVL379:
 3625 0000 38B5     		push	{r3, r4, r5, lr}
 3626              	.LCFI31:
 3627              		.cfi_def_cfa_offset 16
 3628              		.cfi_offset 3, -16
 3629              		.cfi_offset 4, -12
 3630              		.cfi_offset 5, -8
 3631              		.cfi_offset 14, -4
ARM GAS  /tmp/ccNBoJ9q.s 			page 165


 3632 0002 041E     		sub	r4, r0, #0
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim == NULL)
 3633              		.loc 1 484 0
 3634 0004 13D0     		beq	.L219
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 3635              		.loc 1 495 0
 3636 0006 3D23     		mov	r3, #61
 3637 0008 C35C     		ldrb	r3, [r0, r3]
 3638 000a 002B     		cmp	r3, #0
 3639 000c 04D1     		bne	.L218
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 3640              		.loc 1 498 0
 3641 000e 0022     		mov	r2, #0
 3642 0010 3C23     		mov	r3, #60
 3643 0012 C254     		strb	r2, [r0, r3]
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     HAL_TIM_OC_MspInit(htim);
 3644              		.loc 1 501 0
 3645 0014 FFF7FEFF 		bl	HAL_TIM_OC_MspInit
 3646              	.LVL380:
 3647              	.L218:
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 3648              		.loc 1 505 0
 3649 0018 3D25     		mov	r5, #61
 3650 001a 0223     		mov	r3, #2
 3651 001c 6355     		strb	r3, [r4, r5]
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance,  &htim->Init);
 3652              		.loc 1 508 0
 3653 001e 211C     		mov	r1, r4
 3654 0020 01C9     		ldmia	r1!, {r0}
 3655 0022 FFF7FEFF 		bl	TIM_Base_SetConfig
 3656              	.LVL381:
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 3657              		.loc 1 511 0
 3658 0026 0123     		mov	r3, #1
 3659 0028 6355     		strb	r3, [r4, r5]
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 3660              		.loc 1 513 0
 3661 002a 0020     		mov	r0, #0
 3662 002c 00E0     		b	.L217
 3663              	.LVL382:
 3664              	.L219:
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
 3665              		.loc 1 486 0
 3666 002e 0120     		mov	r0, #1
 3667              	.LVL383:
 3668              	.L217:
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3669              		.loc 1 514 0
 3670              		@ sp needed
 3671              	.LVL384:
 3672 0030 38BD     		pop	{r3, r4, r5, pc}
 3673              		.cfi_endproc
 3674              	.LFE44:
 3676 0032 C046     		.section	.text.HAL_TIM_PWM_Init,"ax",%progbits
 3677              		.align	2
 3678              		.global	HAL_TIM_PWM_Init
 3679              		.code	16
ARM GAS  /tmp/ccNBoJ9q.s 			page 166


 3680              		.thumb_func
 3682              	HAL_TIM_PWM_Init:
 3683              	.LFB54:
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3684              		.loc 1 989 0
 3685              		.cfi_startproc
 3686              	.LVL385:
 3687 0000 38B5     		push	{r3, r4, r5, lr}
 3688              	.LCFI32:
 3689              		.cfi_def_cfa_offset 16
 3690              		.cfi_offset 3, -16
 3691              		.cfi_offset 4, -12
 3692              		.cfi_offset 5, -8
 3693              		.cfi_offset 14, -4
 3694 0002 041E     		sub	r4, r0, #0
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim == NULL)
 3695              		.loc 1 991 0
 3696 0004 13D0     		beq	.L223
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 3697              		.loc 1 1002 0
 3698 0006 3D23     		mov	r3, #61
 3699 0008 C35C     		ldrb	r3, [r0, r3]
 3700 000a 002B     		cmp	r3, #0
 3701 000c 04D1     		bne	.L222
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 3702              		.loc 1 1005 0
 3703 000e 0022     		mov	r2, #0
 3704 0010 3C23     		mov	r3, #60
 3705 0012 C254     		strb	r2, [r0, r3]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     HAL_TIM_PWM_MspInit(htim);
 3706              		.loc 1 1008 0
 3707 0014 FFF7FEFF 		bl	HAL_TIM_PWM_MspInit
 3708              	.LVL386:
 3709              	.L222:
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 3710              		.loc 1 1012 0
 3711 0018 3D25     		mov	r5, #61
 3712 001a 0223     		mov	r3, #2
 3713 001c 6355     		strb	r3, [r4, r5]
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
 3714              		.loc 1 1015 0
 3715 001e 211C     		mov	r1, r4
 3716 0020 01C9     		ldmia	r1!, {r0}
 3717 0022 FFF7FEFF 		bl	TIM_Base_SetConfig
 3718              	.LVL387:
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 3719              		.loc 1 1018 0
 3720 0026 0123     		mov	r3, #1
 3721 0028 6355     		strb	r3, [r4, r5]
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 3722              		.loc 1 1020 0
 3723 002a 0020     		mov	r0, #0
 3724 002c 00E0     		b	.L221
 3725              	.LVL388:
 3726              	.L223:
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
 3727              		.loc 1 993 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 167


 3728 002e 0120     		mov	r0, #1
 3729              	.LVL389:
 3730              	.L221:
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3731              		.loc 1 1021 0
 3732              		@ sp needed
 3733              	.LVL390:
 3734 0030 38BD     		pop	{r3, r4, r5, pc}
 3735              		.cfi_endproc
 3736              	.LFE54:
 3738 0032 C046     		.section	.text.HAL_TIM_IC_Init,"ax",%progbits
 3739              		.align	2
 3740              		.global	HAL_TIM_IC_Init
 3741              		.code	16
 3742              		.thumb_func
 3744              	HAL_TIM_IC_Init:
 3745              	.LFB64:
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3746              		.loc 1 1499 0
 3747              		.cfi_startproc
 3748              	.LVL391:
 3749 0000 38B5     		push	{r3, r4, r5, lr}
 3750              	.LCFI33:
 3751              		.cfi_def_cfa_offset 16
 3752              		.cfi_offset 3, -16
 3753              		.cfi_offset 4, -12
 3754              		.cfi_offset 5, -8
 3755              		.cfi_offset 14, -4
 3756 0002 041E     		sub	r4, r0, #0
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim == NULL)
 3757              		.loc 1 1501 0
 3758 0004 13D0     		beq	.L227
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 3759              		.loc 1 1512 0
 3760 0006 3D23     		mov	r3, #61
 3761 0008 C35C     		ldrb	r3, [r0, r3]
 3762 000a 002B     		cmp	r3, #0
 3763 000c 04D1     		bne	.L226
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 3764              		.loc 1 1515 0
 3765 000e 0022     		mov	r2, #0
 3766 0010 3C23     		mov	r3, #60
 3767 0012 C254     		strb	r2, [r0, r3]
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     HAL_TIM_IC_MspInit(htim);
 3768              		.loc 1 1518 0
 3769 0014 FFF7FEFF 		bl	HAL_TIM_IC_MspInit
 3770              	.LVL392:
 3771              	.L226:
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 3772              		.loc 1 1522 0
 3773 0018 3D25     		mov	r5, #61
 3774 001a 0223     		mov	r3, #2
 3775 001c 6355     		strb	r3, [r4, r5]
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
 3776              		.loc 1 1525 0
 3777 001e 211C     		mov	r1, r4
 3778 0020 01C9     		ldmia	r1!, {r0}
ARM GAS  /tmp/ccNBoJ9q.s 			page 168


 3779 0022 FFF7FEFF 		bl	TIM_Base_SetConfig
 3780              	.LVL393:
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 3781              		.loc 1 1528 0
 3782 0026 0123     		mov	r3, #1
 3783 0028 6355     		strb	r3, [r4, r5]
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 3784              		.loc 1 1530 0
 3785 002a 0020     		mov	r0, #0
 3786 002c 00E0     		b	.L225
 3787              	.LVL394:
 3788              	.L227:
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
 3789              		.loc 1 1503 0
 3790 002e 0120     		mov	r0, #1
 3791              	.LVL395:
 3792              	.L225:
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3793              		.loc 1 1531 0
 3794              		@ sp needed
 3795              	.LVL396:
 3796 0030 38BD     		pop	{r3, r4, r5, pc}
 3797              		.cfi_endproc
 3798              	.LFE64:
 3800 0032 C046     		.section	.text.HAL_TIM_OnePulse_Init,"ax",%progbits
 3801              		.align	2
 3802              		.global	HAL_TIM_OnePulse_Init
 3803              		.code	16
 3804              		.thumb_func
 3806              	HAL_TIM_OnePulse_Init:
 3807              	.LFB74:
1975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3808              		.loc 1 1975 0
 3809              		.cfi_startproc
 3810              	.LVL397:
 3811 0000 70B5     		push	{r4, r5, r6, lr}
 3812              	.LCFI34:
 3813              		.cfi_def_cfa_offset 16
 3814              		.cfi_offset 4, -16
 3815              		.cfi_offset 5, -12
 3816              		.cfi_offset 6, -8
 3817              		.cfi_offset 14, -4
 3818 0002 041C     		mov	r4, r0
 3819 0004 0E1C     		mov	r6, r1
1977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim == NULL)
 3820              		.loc 1 1977 0
 3821 0006 0028     		cmp	r0, #0
 3822 0008 1CD0     		beq	.L231
1989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 3823              		.loc 1 1989 0
 3824 000a 3D23     		mov	r3, #61
 3825 000c C35C     		ldrb	r3, [r0, r3]
 3826 000e 002B     		cmp	r3, #0
 3827 0010 04D1     		bne	.L230
1992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 3828              		.loc 1 1992 0
 3829 0012 0022     		mov	r2, #0
ARM GAS  /tmp/ccNBoJ9q.s 			page 169


 3830 0014 3C23     		mov	r3, #60
 3831 0016 C254     		strb	r2, [r0, r3]
1995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     HAL_TIM_OnePulse_MspInit(htim);
 3832              		.loc 1 1995 0
 3833 0018 FFF7FEFF 		bl	HAL_TIM_OnePulse_MspInit
 3834              	.LVL398:
 3835              	.L230:
1999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 3836              		.loc 1 1999 0
 3837 001c 3D25     		mov	r5, #61
 3838 001e 0223     		mov	r3, #2
 3839 0020 6355     		strb	r3, [r4, r5]
2002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
 3840              		.loc 1 2002 0
 3841 0022 211C     		mov	r1, r4
 3842 0024 01C9     		ldmia	r1!, {r0}
 3843 0026 FFF7FEFF 		bl	TIM_Base_SetConfig
 3844              	.LVL399:
2005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->CR1 &= ~TIM_CR1_OPM;
 3845              		.loc 1 2005 0
 3846 002a 2368     		ldr	r3, [r4]
 3847 002c 1A68     		ldr	r2, [r3]
 3848 002e 0821     		mov	r1, #8
 3849 0030 8A43     		bic	r2, r1
 3850 0032 1A60     		str	r2, [r3]
2008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->CR1 |= OnePulseMode;
 3851              		.loc 1 2008 0
 3852 0034 2368     		ldr	r3, [r4]
 3853 0036 1A68     		ldr	r2, [r3]
 3854 0038 1643     		orr	r6, r2
 3855              	.LVL400:
 3856 003a 1E60     		str	r6, [r3]
2011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 3857              		.loc 1 2011 0
 3858 003c 0123     		mov	r3, #1
 3859 003e 6355     		strb	r3, [r4, r5]
2013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 3860              		.loc 1 2013 0
 3861 0040 0020     		mov	r0, #0
 3862 0042 00E0     		b	.L229
 3863              	.LVL401:
 3864              	.L231:
1979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
 3865              		.loc 1 1979 0
 3866 0044 0120     		mov	r0, #1
 3867              	.LVL402:
 3868              	.L229:
2014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 3869              		.loc 1 2014 0
 3870              		@ sp needed
 3871              	.LVL403:
 3872 0046 70BD     		pop	{r4, r5, r6, pc}
 3873              		.cfi_endproc
 3874              	.LFE74:
 3876              		.section	.text.HAL_TIM_Encoder_Init,"ax",%progbits
 3877              		.align	2
 3878              		.global	HAL_TIM_Encoder_Init
ARM GAS  /tmp/ccNBoJ9q.s 			page 170


 3879              		.code	16
 3880              		.thumb_func
 3882              	HAL_TIM_Encoder_Init:
 3883              	.LFB82:
2248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 3884              		.loc 1 2248 0
 3885              		.cfi_startproc
 3886              	.LVL404:
 3887 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3888              	.LCFI35:
 3889              		.cfi_def_cfa_offset 20
 3890              		.cfi_offset 4, -20
 3891              		.cfi_offset 5, -16
 3892              		.cfi_offset 6, -12
 3893              		.cfi_offset 7, -8
 3894              		.cfi_offset 14, -4
 3895 0002 4746     		mov	r7, r8
 3896 0004 80B4     		push	{r7}
 3897              	.LCFI36:
 3898              		.cfi_def_cfa_offset 24
 3899              		.cfi_offset 8, -24
 3900 0006 041C     		mov	r4, r0
 3901 0008 0D1C     		mov	r5, r1
 3902              	.LVL405:
2254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim == NULL)
 3903              		.loc 1 2254 0
 3904 000a 0028     		cmp	r0, #0
 3905 000c 48D0     		beq	.L235
2274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 3906              		.loc 1 2274 0
 3907 000e 3D23     		mov	r3, #61
 3908 0010 C35C     		ldrb	r3, [r0, r3]
 3909 0012 002B     		cmp	r3, #0
 3910 0014 04D1     		bne	.L234
2277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 3911              		.loc 1 2277 0
 3912 0016 0022     		mov	r2, #0
 3913 0018 3C23     		mov	r3, #60
 3914 001a C254     		strb	r2, [r0, r3]
2280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     HAL_TIM_Encoder_MspInit(htim);
 3915              		.loc 1 2280 0
 3916 001c FFF7FEFF 		bl	HAL_TIM_Encoder_MspInit
 3917              	.LVL406:
 3918              	.L234:
2284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 3919              		.loc 1 2284 0
 3920 0020 3D26     		mov	r6, #61
 3921 0022 0223     		mov	r3, #2
 3922 0024 A355     		strb	r3, [r4, r6]
2287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 3923              		.loc 1 2287 0
 3924 0026 2368     		ldr	r3, [r4]
 3925 0028 9A68     		ldr	r2, [r3, #8]
 3926 002a 0721     		mov	r1, #7
 3927 002c 8A43     		bic	r2, r1
 3928 002e 9A60     		str	r2, [r3, #8]
2290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
ARM GAS  /tmp/ccNBoJ9q.s 			page 171


 3929              		.loc 1 2290 0
 3930 0030 211C     		mov	r1, r4
 3931 0032 01C9     		ldmia	r1!, {r0}
 3932 0034 FFF7FEFF 		bl	TIM_Base_SetConfig
 3933              	.LVL407:
2293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
 3934              		.loc 1 2293 0
 3935 0038 2368     		ldr	r3, [r4]
 3936 003a 9868     		ldr	r0, [r3, #8]
 3937              	.LVL408:
2296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 = htim->Instance->CCMR1;
 3938              		.loc 1 2296 0
 3939 003c 9969     		ldr	r1, [r3, #24]
 3940              	.LVL409:
2299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = htim->Instance->CCER;
 3941              		.loc 1 2299 0
 3942 003e 1F6A     		ldr	r7, [r3, #32]
 3943              	.LVL410:
2302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr |= sConfig->EncoderMode;
 3944              		.loc 1 2302 0
 3945 0040 2A68     		ldr	r2, [r5]
 3946 0042 1043     		orr	r0, r2
 3947              	.LVL411:
2305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_CC1S | TIM_CCMR1_CC2S);
 3948              		.loc 1 2305 0
 3949 0044 184A     		ldr	r2, .L236
 3950 0046 0A40     		and	r2, r1
 3951 0048 9446     		mov	ip, r2
 3952              	.LVL412:
2306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
 3953              		.loc 1 2306 0
 3954 004a AA69     		ldr	r2, [r5, #24]
 3955              	.LVL413:
 3956 004c 1102     		lsl	r1, r2, #8
 3957 004e AA68     		ldr	r2, [r5, #8]
 3958 0050 1143     		orr	r1, r2
 3959 0052 6246     		mov	r2, ip
 3960 0054 1143     		orr	r1, r2
 3961              	.LVL414:
2310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_IC1F | TIM_CCMR1_IC2F);
 3962              		.loc 1 2310 0
 3963 0056 154A     		ldr	r2, .L236+4
 3964 0058 1140     		and	r1, r2
 3965              	.LVL415:
 3966 005a 8846     		mov	r8, r1
 3967              	.LVL416:
2311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
 3968              		.loc 1 2311 0
 3969 005c E969     		ldr	r1, [r5, #28]
 3970              	.LVL417:
 3971 005e 0902     		lsl	r1, r1, #8
 3972 0060 EA68     		ldr	r2, [r5, #12]
 3973 0062 1143     		orr	r1, r2
 3974 0064 4246     		mov	r2, r8
 3975 0066 1143     		orr	r1, r2
 3976 0068 8846     		mov	r8, r1
 3977              	.LVL418:
ARM GAS  /tmp/ccNBoJ9q.s 			page 172


2312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
 3978              		.loc 1 2312 0
 3979 006a 2969     		ldr	r1, [r5, #16]
 3980              	.LVL419:
 3981 006c 0901     		lsl	r1, r1, #4
 3982 006e 8C46     		mov	ip, r1
 3983 0070 2A6A     		ldr	r2, [r5, #32]
 3984 0072 1103     		lsl	r1, r2, #12
 3985 0074 6246     		mov	r2, ip
 3986 0076 1143     		orr	r1, r2
 3987 0078 4246     		mov	r2, r8
 3988 007a 1143     		orr	r1, r2
 3989              	.LVL420:
2316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1NP | TIM_CCER_CC2NP);
 3990              		.loc 1 2316 0
 3991 007c AA22     		mov	r2, #170
 3992 007e 9743     		bic	r7, r2
 3993              	.LVL421:
2317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= sConfig->IC1Polarity | (sConfig->IC2Polarity << 4U);
 3994              		.loc 1 2317 0
 3995 0080 6A68     		ldr	r2, [r5, #4]
 3996 0082 9446     		mov	ip, r2
 3997 0084 6A69     		ldr	r2, [r5, #20]
 3998 0086 1201     		lsl	r2, r2, #4
 3999 0088 6546     		mov	r5, ip
 4000              	.LVL422:
 4001 008a 2A43     		orr	r2, r5
 4002 008c 3A43     		orr	r2, r7
 4003              	.LVL423:
2320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
 4004              		.loc 1 2320 0
 4005 008e 9860     		str	r0, [r3, #8]
2323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->CCMR1 = tmpccmr1;
 4006              		.loc 1 2323 0
 4007 0090 2368     		ldr	r3, [r4]
 4008 0092 9961     		str	r1, [r3, #24]
2326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->CCER = tmpccer;
 4009              		.loc 1 2326 0
 4010 0094 2368     		ldr	r3, [r4]
 4011 0096 1A62     		str	r2, [r3, #32]
2329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 4012              		.loc 1 2329 0
 4013 0098 0123     		mov	r3, #1
 4014 009a A355     		strb	r3, [r4, r6]
2331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 4015              		.loc 1 2331 0
 4016 009c 0020     		mov	r0, #0
 4017              	.LVL424:
 4018 009e 00E0     		b	.L233
 4019              	.LVL425:
 4020              	.L235:
2256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
 4021              		.loc 1 2256 0
 4022 00a0 0120     		mov	r0, #1
 4023              	.LVL426:
 4024              	.L233:
2332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
ARM GAS  /tmp/ccNBoJ9q.s 			page 173


 4025              		.loc 1 2332 0
 4026              		@ sp needed
 4027              	.LVL427:
 4028 00a2 04BC     		pop	{r2}
 4029 00a4 9046     		mov	r8, r2
 4030 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 4031              	.L237:
 4032              		.align	2
 4033              	.L236:
 4034 00a8 FCFCFFFF 		.word	-772
 4035 00ac 0303FFFF 		.word	-64765
 4036              		.cfi_endproc
 4037              	.LFE82:
 4039              		.section	.text.TIM_OC2_SetConfig,"ax",%progbits
 4040              		.align	2
 4041              		.global	TIM_OC2_SetConfig
 4042              		.code	16
 4043              		.thumb_func
 4045              	TIM_OC2_SetConfig:
 4046              	.LFB129:
4796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 4047              		.loc 1 4796 0
 4048              		.cfi_startproc
 4049              	.LVL428:
 4050 0000 70B5     		push	{r4, r5, r6, lr}
 4051              	.LCFI37:
 4052              		.cfi_def_cfa_offset 16
 4053              		.cfi_offset 4, -16
 4054              		.cfi_offset 5, -12
 4055              		.cfi_offset 6, -8
 4056              		.cfi_offset 14, -4
 4057              	.LVL429:
4802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
 4058              		.loc 1 4802 0
 4059 0002 036A     		ldr	r3, [r0, #32]
 4060 0004 1022     		mov	r2, #16
 4061 0006 9343     		bic	r3, r2
 4062 0008 0362     		str	r3, [r0, #32]
4805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 4063              		.loc 1 4805 0
 4064 000a 026A     		ldr	r2, [r0, #32]
 4065              	.LVL430:
4807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2;
 4066              		.loc 1 4807 0
 4067 000c 4368     		ldr	r3, [r0, #4]
 4068              	.LVL431:
4810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR1;
 4069              		.loc 1 4810 0
 4070 000e 8569     		ldr	r5, [r0, #24]
 4071              	.LVL432:
4814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_CC2S;
 4072              		.loc 1 4814 0
 4073 0010 164C     		ldr	r4, .L242
 4074 0012 2C40     		and	r4, r5
 4075              	.LVL433:
4817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmrx |= (OC_Config->OCMode << 8U);
 4076              		.loc 1 4817 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 174


 4077 0014 0E68     		ldr	r6, [r1]
 4078 0016 3502     		lsl	r5, r6, #8
 4079 0018 2C43     		orr	r4, r5
 4080              	.LVL434:
4820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC2P;
 4081              		.loc 1 4820 0
 4082 001a 2025     		mov	r5, #32
 4083 001c AA43     		bic	r2, r5
 4084              	.LVL435:
4822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 4U);
 4085              		.loc 1 4822 0
 4086 001e 8E68     		ldr	r6, [r1, #8]
 4087 0020 3501     		lsl	r5, r6, #4
 4088 0022 2A43     		orr	r2, r5
 4089              	.LVL436:
4824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 4090              		.loc 1 4824 0
 4091 0024 124D     		ldr	r5, .L242+4
 4092 0026 A842     		cmp	r0, r5
 4093 0028 06D1     		bne	.L239
4829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NP;
 4094              		.loc 1 4829 0
 4095 002a 8025     		mov	r5, #128
 4096 002c AA43     		bic	r2, r5
 4097              	.LVL437:
4831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccer |= (OC_Config->OCNPolarity << 4U);
 4098              		.loc 1 4831 0
 4099 002e CE68     		ldr	r6, [r1, #12]
 4100 0030 3501     		lsl	r5, r6, #4
 4101 0032 2A43     		orr	r2, r5
 4102              	.LVL438:
4833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NE;
 4103              		.loc 1 4833 0
 4104 0034 4025     		mov	r5, #64
 4105 0036 AA43     		bic	r2, r5
 4106              	.LVL439:
 4107              	.L239:
4837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 4108              		.loc 1 4837 0
 4109 0038 0D4D     		ldr	r5, .L242+4
 4110 003a A842     		cmp	r0, r5
 4111 003c 08D0     		beq	.L240
4837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 4112              		.loc 1 4837 0 is_stmt 0 discriminator 1
 4113 003e 0D4D     		ldr	r5, .L242+8
 4114 0040 A842     		cmp	r0, r5
 4115 0042 05D0     		beq	.L240
 4116 0044 0C4D     		ldr	r5, .L242+12
 4117 0046 A842     		cmp	r0, r5
 4118 0048 02D0     		beq	.L240
 4119 004a 0C4D     		ldr	r5, .L242+16
 4120 004c A842     		cmp	r0, r5
 4121 004e 07D1     		bne	.L241
 4122              	.L240:
 4123              	.LVL440:
4845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS2N;
 4124              		.loc 1 4845 0 is_stmt 1
ARM GAS  /tmp/ccNBoJ9q.s 			page 175


 4125 0050 0B4D     		ldr	r5, .L242+20
 4126 0052 2B40     		and	r3, r5
 4127              	.LVL441:
4847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 2U);
 4128              		.loc 1 4847 0
 4129 0054 4E69     		ldr	r6, [r1, #20]
 4130 0056 B500     		lsl	r5, r6, #2
 4131 0058 2B43     		orr	r3, r5
 4132              	.LVL442:
4849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 4133              		.loc 1 4849 0
 4134 005a 8E69     		ldr	r6, [r1, #24]
 4135 005c B500     		lsl	r5, r6, #2
 4136 005e 2B43     		orr	r3, r5
 4137              	.LVL443:
 4138              	.L241:
4853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 4139              		.loc 1 4853 0
 4140 0060 4360     		str	r3, [r0, #4]
4856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 4141              		.loc 1 4856 0
 4142 0062 8461     		str	r4, [r0, #24]
4859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCR2 = OC_Config->Pulse;
 4143              		.loc 1 4859 0
 4144 0064 4B68     		ldr	r3, [r1, #4]
 4145              	.LVL444:
 4146 0066 8363     		str	r3, [r0, #56]
4862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 4147              		.loc 1 4862 0
 4148 0068 0262     		str	r2, [r0, #32]
4863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 4149              		.loc 1 4863 0
 4150              		@ sp needed
 4151              	.LVL445:
 4152 006a 70BD     		pop	{r4, r5, r6, pc}
 4153              	.L243:
 4154              		.align	2
 4155              	.L242:
 4156 006c FF8CFFFF 		.word	-29441
 4157 0070 002C0140 		.word	1073818624
 4158 0074 00400140 		.word	1073823744
 4159 0078 00440140 		.word	1073824768
 4160 007c 00480140 		.word	1073825792
 4161 0080 FFF3FFFF 		.word	-3073
 4162              		.cfi_endproc
 4163              	.LFE129:
 4165              		.section	.text.HAL_TIM_OC_ConfigChannel,"ax",%progbits
 4166              		.align	2
 4167              		.global	HAL_TIM_OC_ConfigChannel
 4168              		.code	16
 4169              		.thumb_func
 4171              	HAL_TIM_OC_ConfigChannel:
 4172              	.LFB93:
2933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 4173              		.loc 1 2933 0
 4174              		.cfi_startproc
 4175              	.LVL446:
ARM GAS  /tmp/ccNBoJ9q.s 			page 176


 4176 0000 10B5     		push	{r4, lr}
 4177              	.LCFI38:
 4178              		.cfi_def_cfa_offset 8
 4179              		.cfi_offset 4, -8
 4180              		.cfi_offset 14, -4
 4181 0002 041C     		mov	r4, r0
2940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 4182              		.loc 1 2940 0
 4183 0004 3C23     		mov	r3, #60
 4184 0006 C35C     		ldrb	r3, [r0, r3]
 4185 0008 012B     		cmp	r3, #1
 4186 000a 27D0     		beq	.L252
2940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 4187              		.loc 1 2940 0 is_stmt 0 discriminator 2
 4188 000c 0120     		mov	r0, #1
 4189              	.LVL447:
 4190 000e 3C23     		mov	r3, #60
 4191 0010 E054     		strb	r0, [r4, r3]
2942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 4192              		.loc 1 2942 0 is_stmt 1 discriminator 2
 4193 0012 0220     		mov	r0, #2
 4194 0014 3D23     		mov	r3, #61
 4195 0016 E054     		strb	r0, [r4, r3]
2944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 4196              		.loc 1 2944 0 discriminator 2
 4197 0018 042A     		cmp	r2, #4
 4198 001a 0CD0     		beq	.L247
 4199 001c 02D8     		bhi	.L248
 4200 001e 002A     		cmp	r2, #0
 4201 0020 05D0     		beq	.L249
 4202 0022 13E0     		b	.L246
 4203              	.L248:
 4204 0024 082A     		cmp	r2, #8
 4205 0026 0AD0     		beq	.L250
 4206 0028 0C2A     		cmp	r2, #12
 4207 002a 0CD0     		beq	.L251
 4208 002c 0EE0     		b	.L246
 4209              	.L249:
2950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
 4210              		.loc 1 2950 0
 4211 002e 2068     		ldr	r0, [r4]
 4212 0030 FFF7FEFF 		bl	TIM_OC1_SetConfig
 4213              	.LVL448:
2952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 4214              		.loc 1 2952 0
 4215 0034 0AE0     		b	.L246
 4216              	.LVL449:
 4217              	.L247:
2958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
 4218              		.loc 1 2958 0
 4219 0036 2068     		ldr	r0, [r4]
 4220 0038 FFF7FEFF 		bl	TIM_OC2_SetConfig
 4221              	.LVL450:
2960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 4222              		.loc 1 2960 0
 4223 003c 06E0     		b	.L246
 4224              	.LVL451:
ARM GAS  /tmp/ccNBoJ9q.s 			page 177


 4225              	.L250:
2966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
 4226              		.loc 1 2966 0
 4227 003e 2068     		ldr	r0, [r4]
 4228 0040 FFF7FEFF 		bl	TIM_OC3_SetConfig
 4229              	.LVL452:
2968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 4230              		.loc 1 2968 0
 4231 0044 02E0     		b	.L246
 4232              	.LVL453:
 4233              	.L251:
2974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****        TIM_OC4_SetConfig(htim->Instance, sConfig);
 4234              		.loc 1 2974 0
 4235 0046 2068     		ldr	r0, [r4]
 4236 0048 FFF7FEFF 		bl	TIM_OC4_SetConfig
 4237              	.LVL454:
 4238              	.L246:
2981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 4239              		.loc 1 2981 0
 4240 004c 0122     		mov	r2, #1
 4241 004e 3D23     		mov	r3, #61
 4242 0050 E254     		strb	r2, [r4, r3]
2983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 4243              		.loc 1 2983 0
 4244 0052 0022     		mov	r2, #0
 4245 0054 3C23     		mov	r3, #60
 4246 0056 E254     		strb	r2, [r4, r3]
2985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 4247              		.loc 1 2985 0
 4248 0058 0020     		mov	r0, #0
 4249 005a 00E0     		b	.L245
 4250              	.LVL455:
 4251              	.L252:
2940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 4252              		.loc 1 2940 0
 4253 005c 0220     		mov	r0, #2
 4254              	.LVL456:
 4255              	.L245:
2986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 4256              		.loc 1 2986 0
 4257              		@ sp needed
 4258              	.LVL457:
 4259 005e 10BD     		pop	{r4, pc}
 4260              		.cfi_endproc
 4261              	.LFE93:
 4263              		.section	.text.HAL_TIM_PWM_ConfigChannel,"ax",%progbits
 4264              		.align	2
 4265              		.global	HAL_TIM_PWM_ConfigChannel
 4266              		.code	16
 4267              		.thumb_func
 4269              	HAL_TIM_PWM_ConfigChannel:
 4270              	.LFB95:
3098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 4271              		.loc 1 3098 0
 4272              		.cfi_startproc
 4273              	.LVL458:
 4274 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /tmp/ccNBoJ9q.s 			page 178


 4275              	.LCFI39:
 4276              		.cfi_def_cfa_offset 16
 4277              		.cfi_offset 3, -16
 4278              		.cfi_offset 4, -12
 4279              		.cfi_offset 5, -8
 4280              		.cfi_offset 14, -4
 4281 0002 041C     		mov	r4, r0
 4282 0004 0D1C     		mov	r5, r1
3099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 4283              		.loc 1 3099 0
 4284 0006 3C23     		mov	r3, #60
 4285 0008 C35C     		ldrb	r3, [r0, r3]
 4286 000a 012B     		cmp	r3, #1
 4287 000c 6BD0     		beq	.L261
3099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 4288              		.loc 1 3099 0 is_stmt 0 discriminator 2
 4289 000e 0121     		mov	r1, #1
 4290              	.LVL459:
 4291 0010 3C23     		mov	r3, #60
 4292 0012 C154     		strb	r1, [r0, r3]
3107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 4293              		.loc 1 3107 0 is_stmt 1 discriminator 2
 4294 0014 0221     		mov	r1, #2
 4295 0016 3D23     		mov	r3, #61
 4296 0018 C154     		strb	r1, [r0, r3]
3109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 4297              		.loc 1 3109 0 discriminator 2
 4298 001a 042A     		cmp	r2, #4
 4299 001c 1CD0     		beq	.L256
 4300 001e 02D8     		bhi	.L257
 4301 0020 002A     		cmp	r2, #0
 4302 0022 05D0     		beq	.L258
 4303 0024 57E0     		b	.L255
 4304              	.L257:
 4305 0026 082A     		cmp	r2, #8
 4306 0028 2CD0     		beq	.L259
 4307 002a 0C2A     		cmp	r2, #12
 4308 002c 3ED0     		beq	.L260
 4309 002e 52E0     		b	.L255
 4310              	.L258:
3115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
 4311              		.loc 1 3115 0
 4312 0030 0068     		ldr	r0, [r0]
 4313              	.LVL460:
 4314 0032 291C     		mov	r1, r5
 4315 0034 FFF7FEFF 		bl	TIM_OC1_SetConfig
 4316              	.LVL461:
3118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 4317              		.loc 1 3118 0
 4318 0038 2368     		ldr	r3, [r4]
 4319 003a 9969     		ldr	r1, [r3, #24]
 4320 003c 0822     		mov	r2, #8
 4321 003e 0A43     		orr	r2, r1
 4322 0040 9A61     		str	r2, [r3, #24]
3121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 4323              		.loc 1 3121 0
 4324 0042 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccNBoJ9q.s 			page 179


 4325 0044 9A69     		ldr	r2, [r3, #24]
 4326 0046 0421     		mov	r1, #4
 4327 0048 8A43     		bic	r2, r1
 4328 004a 9A61     		str	r2, [r3, #24]
3122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode;
 4329              		.loc 1 3122 0
 4330 004c 2368     		ldr	r3, [r4]
 4331 004e 9969     		ldr	r1, [r3, #24]
 4332 0050 2A69     		ldr	r2, [r5, #16]
 4333 0052 0A43     		orr	r2, r1
 4334 0054 9A61     		str	r2, [r3, #24]
3124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 4335              		.loc 1 3124 0
 4336 0056 3EE0     		b	.L255
 4337              	.LVL462:
 4338              	.L256:
3130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
 4339              		.loc 1 3130 0
 4340 0058 0068     		ldr	r0, [r0]
 4341              	.LVL463:
 4342 005a 291C     		mov	r1, r5
 4343 005c FFF7FEFF 		bl	TIM_OC2_SetConfig
 4344              	.LVL464:
3133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 4345              		.loc 1 3133 0
 4346 0060 2368     		ldr	r3, [r4]
 4347 0062 9969     		ldr	r1, [r3, #24]
 4348 0064 8022     		mov	r2, #128
 4349 0066 1201     		lsl	r2, r2, #4
 4350 0068 0A43     		orr	r2, r1
 4351 006a 9A61     		str	r2, [r3, #24]
3136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 4352              		.loc 1 3136 0
 4353 006c 2368     		ldr	r3, [r4]
 4354 006e 9969     		ldr	r1, [r3, #24]
 4355 0070 1E4A     		ldr	r2, .L262
 4356 0072 0A40     		and	r2, r1
 4357 0074 9A61     		str	r2, [r3, #24]
3137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 4358              		.loc 1 3137 0
 4359 0076 2368     		ldr	r3, [r4]
 4360 0078 9969     		ldr	r1, [r3, #24]
 4361 007a 2A69     		ldr	r2, [r5, #16]
 4362 007c 1202     		lsl	r2, r2, #8
 4363 007e 0A43     		orr	r2, r1
 4364 0080 9A61     		str	r2, [r3, #24]
3139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 4365              		.loc 1 3139 0
 4366 0082 28E0     		b	.L255
 4367              	.LVL465:
 4368              	.L259:
3145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
 4369              		.loc 1 3145 0
 4370 0084 0068     		ldr	r0, [r0]
 4371              	.LVL466:
 4372 0086 291C     		mov	r1, r5
 4373 0088 FFF7FEFF 		bl	TIM_OC3_SetConfig
ARM GAS  /tmp/ccNBoJ9q.s 			page 180


 4374              	.LVL467:
3148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 4375              		.loc 1 3148 0
 4376 008c 2368     		ldr	r3, [r4]
 4377 008e D969     		ldr	r1, [r3, #28]
 4378 0090 0822     		mov	r2, #8
 4379 0092 0A43     		orr	r2, r1
 4380 0094 DA61     		str	r2, [r3, #28]
3151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 4381              		.loc 1 3151 0
 4382 0096 2368     		ldr	r3, [r4]
 4383 0098 DA69     		ldr	r2, [r3, #28]
 4384 009a 0421     		mov	r1, #4
 4385 009c 8A43     		bic	r2, r1
 4386 009e DA61     		str	r2, [r3, #28]
3152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode;
 4387              		.loc 1 3152 0
 4388 00a0 2368     		ldr	r3, [r4]
 4389 00a2 D969     		ldr	r1, [r3, #28]
 4390 00a4 2A69     		ldr	r2, [r5, #16]
 4391 00a6 0A43     		orr	r2, r1
 4392 00a8 DA61     		str	r2, [r3, #28]
3154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 4393              		.loc 1 3154 0
 4394 00aa 14E0     		b	.L255
 4395              	.LVL468:
 4396              	.L260:
3160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC4_SetConfig(htim->Instance, sConfig);
 4397              		.loc 1 3160 0
 4398 00ac 0068     		ldr	r0, [r0]
 4399              	.LVL469:
 4400 00ae 291C     		mov	r1, r5
 4401 00b0 FFF7FEFF 		bl	TIM_OC4_SetConfig
 4402              	.LVL470:
3163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 4403              		.loc 1 3163 0
 4404 00b4 2368     		ldr	r3, [r4]
 4405 00b6 D969     		ldr	r1, [r3, #28]
 4406 00b8 8022     		mov	r2, #128
 4407 00ba 1201     		lsl	r2, r2, #4
 4408 00bc 0A43     		orr	r2, r1
 4409 00be DA61     		str	r2, [r3, #28]
3166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 4410              		.loc 1 3166 0
 4411 00c0 2368     		ldr	r3, [r4]
 4412 00c2 D969     		ldr	r1, [r3, #28]
 4413 00c4 094A     		ldr	r2, .L262
 4414 00c6 0A40     		and	r2, r1
 4415 00c8 DA61     		str	r2, [r3, #28]
3167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 4416              		.loc 1 3167 0
 4417 00ca 2368     		ldr	r3, [r4]
 4418 00cc D969     		ldr	r1, [r3, #28]
 4419 00ce 2A69     		ldr	r2, [r5, #16]
 4420 00d0 1202     		lsl	r2, r2, #8
 4421 00d2 0A43     		orr	r2, r1
 4422 00d4 DA61     		str	r2, [r3, #28]
ARM GAS  /tmp/ccNBoJ9q.s 			page 181


 4423              	.L255:
3175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 4424              		.loc 1 3175 0
 4425 00d6 0122     		mov	r2, #1
 4426 00d8 3D23     		mov	r3, #61
 4427 00da E254     		strb	r2, [r4, r3]
3177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 4428              		.loc 1 3177 0
 4429 00dc 0022     		mov	r2, #0
 4430 00de 3C23     		mov	r3, #60
 4431 00e0 E254     		strb	r2, [r4, r3]
3179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 4432              		.loc 1 3179 0
 4433 00e2 0020     		mov	r0, #0
 4434 00e4 00E0     		b	.L254
 4435              	.LVL471:
 4436              	.L261:
3099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 4437              		.loc 1 3099 0
 4438 00e6 0220     		mov	r0, #2
 4439              	.LVL472:
 4440              	.L254:
3180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 4441              		.loc 1 3180 0
 4442              		@ sp needed
 4443              	.LVL473:
 4444              	.LVL474:
 4445 00e8 38BD     		pop	{r3, r4, r5, pc}
 4446              	.L263:
 4447 00ea C046     		.align	2
 4448              	.L262:
 4449 00ec FFFBFFFF 		.word	-1025
 4450              		.cfi_endproc
 4451              	.LFE95:
 4453              		.section	.text.TIM_TI1_SetConfig,"ax",%progbits
 4454              		.align	2
 4455              		.global	TIM_TI1_SetConfig
 4456              		.code	16
 4457              		.thumb_func
 4459              	TIM_TI1_SetConfig:
 4460              	.LFB133:
5143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 4461              		.loc 1 5143 0
 4462              		.cfi_startproc
 4463              	.LVL475:
 4464 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4465              	.LCFI40:
 4466              		.cfi_def_cfa_offset 20
 4467              		.cfi_offset 4, -20
 4468              		.cfi_offset 5, -16
 4469              		.cfi_offset 6, -12
 4470              		.cfi_offset 7, -8
 4471              		.cfi_offset 14, -4
 4472              	.LVL476:
5148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
 4473              		.loc 1 5148 0
 4474 0002 056A     		ldr	r5, [r0, #32]
ARM GAS  /tmp/ccNBoJ9q.s 			page 182


 4475 0004 0126     		mov	r6, #1
 4476 0006 B543     		bic	r5, r6
 4477 0008 0562     		str	r5, [r0, #32]
5149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 4478              		.loc 1 5149 0
 4479 000a 8669     		ldr	r6, [r0, #24]
 4480              	.LVL477:
5150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 4481              		.loc 1 5150 0
 4482 000c 056A     		ldr	r5, [r0, #32]
 4483              	.LVL478:
5153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 4484              		.loc 1 5153 0
 4485 000e 164F     		ldr	r7, .L272
 4486 0010 B842     		cmp	r0, r7
 4487 0012 0BD0     		beq	.L268
5153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 4488              		.loc 1 5153 0 is_stmt 0 discriminator 2
 4489 0014 8027     		mov	r7, #128
 4490 0016 FF05     		lsl	r7, r7, #23
 4491 0018 B842     		cmp	r0, r7
 4492 001a 09D0     		beq	.L269
5153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 4493              		.loc 1 5153 0 discriminator 1
 4494 001c 134C     		ldr	r4, .L272+4
 4495 001e A042     		cmp	r0, r4
 4496 0020 08D0     		beq	.L270
 4497 0022 134C     		ldr	r4, .L272+8
 4498 0024 A042     		cmp	r0, r4
 4499 0026 07D1     		bne	.L271
5153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 4500              		.loc 1 5153 0
 4501 0028 0127     		mov	r7, #1
 4502 002a 06E0     		b	.L265
 4503              	.L268:
 4504 002c 0127     		mov	r7, #1
 4505 002e 04E0     		b	.L265
 4506              	.L269:
 4507 0030 0127     		mov	r7, #1
 4508 0032 02E0     		b	.L265
 4509              	.L270:
 4510 0034 0127     		mov	r7, #1
 4511 0036 00E0     		b	.L265
 4512              	.L271:
 4513 0038 0027     		mov	r7, #0
 4514              	.L265:
5153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 4515              		.loc 1 5153 0 discriminator 4
 4516 003a 002F     		cmp	r7, #0
 4517 003c 04D0     		beq	.L266
5155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccmr1 &= ~TIM_CCMR1_CC1S;
 4518              		.loc 1 5155 0 is_stmt 1
 4519 003e 0324     		mov	r4, #3
 4520 0040 A643     		bic	r6, r4
 4521              	.LVL479:
 4522 0042 341C     		mov	r4, r6
 4523              	.LVL480:
ARM GAS  /tmp/ccNBoJ9q.s 			page 183


5156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccmr1 |= TIM_ICSelection;
 4524              		.loc 1 5156 0
 4525 0044 1443     		orr	r4, r2
 4526              	.LVL481:
 4527 0046 01E0     		b	.L267
 4528              	.LVL482:
 4529              	.L266:
5160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     tmpccmr1 |= TIM_CCMR1_CC1S_0;
 4530              		.loc 1 5160 0
 4531 0048 0124     		mov	r4, #1
 4532 004a 3443     		orr	r4, r6
 4533              	.LVL483:
 4534              	.L267:
5164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC1F;
 4535              		.loc 1 5164 0
 4536 004c F022     		mov	r2, #240
 4537              	.LVL484:
 4538 004e 9443     		bic	r4, r2
 4539              	.LVL485:
5165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 4U) & TIM_CCMR1_IC1F);
 4540              		.loc 1 5165 0
 4541 0050 1B01     		lsl	r3, r3, #4
 4542              	.LVL486:
 4543 0052 FF22     		mov	r2, #255
 4544 0054 1A40     		and	r2, r3
 4545 0056 2243     		orr	r2, r4
 4546              	.LVL487:
5168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 4547              		.loc 1 5168 0
 4548 0058 0A24     		mov	r4, #10
 4549 005a 2B1C     		mov	r3, r5
 4550 005c A343     		bic	r3, r4
 4551              	.LVL488:
5169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity & (TIM_CCER_CC1P | TIM_CCER_CC1NP));
 4552              		.loc 1 5169 0
 4553 005e 0C40     		and	r4, r1
 4554 0060 1C43     		orr	r4, r3
 4555              	.LVL489:
5172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 4556              		.loc 1 5172 0
 4557 0062 8261     		str	r2, [r0, #24]
5173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 4558              		.loc 1 5173 0
 4559 0064 0462     		str	r4, [r0, #32]
5174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 4560              		.loc 1 5174 0
 4561              		@ sp needed
 4562              	.LVL490:
 4563 0066 F0BD     		pop	{r4, r5, r6, r7, pc}
 4564              	.L273:
 4565              		.align	2
 4566              	.L272:
 4567 0068 002C0140 		.word	1073818624
 4568 006c 00040040 		.word	1073742848
 4569 0070 00400140 		.word	1073823744
 4570              		.cfi_endproc
 4571              	.LFE133:
ARM GAS  /tmp/ccNBoJ9q.s 			page 184


 4573              		.section	.text.HAL_TIM_IC_ConfigChannel,"ax",%progbits
 4574              		.align	2
 4575              		.global	HAL_TIM_IC_ConfigChannel
 4576              		.code	16
 4577              		.thumb_func
 4579              	HAL_TIM_IC_ConfigChannel:
 4580              	.LFB94:
3002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 4581              		.loc 1 3002 0
 4582              		.cfi_startproc
 4583              	.LVL491:
 4584 0000 38B5     		push	{r3, r4, r5, lr}
 4585              	.LCFI41:
 4586              		.cfi_def_cfa_offset 16
 4587              		.cfi_offset 3, -16
 4588              		.cfi_offset 4, -12
 4589              		.cfi_offset 5, -8
 4590              		.cfi_offset 14, -4
 4591 0002 041C     		mov	r4, r0
 4592 0004 0D1C     		mov	r5, r1
3010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 4593              		.loc 1 3010 0
 4594 0006 3C23     		mov	r3, #60
 4595 0008 C35C     		ldrb	r3, [r0, r3]
 4596 000a 012B     		cmp	r3, #1
 4597 000c 58D0     		beq	.L280
3010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 4598              		.loc 1 3010 0 is_stmt 0 discriminator 2
 4599 000e 0121     		mov	r1, #1
 4600              	.LVL492:
 4601 0010 3C23     		mov	r3, #60
 4602 0012 C154     		strb	r1, [r0, r3]
3012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 4603              		.loc 1 3012 0 is_stmt 1 discriminator 2
 4604 0014 0221     		mov	r1, #2
 4605 0016 3D23     		mov	r3, #61
 4606 0018 C154     		strb	r1, [r0, r3]
3014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
 4607              		.loc 1 3014 0 discriminator 2
 4608 001a 002A     		cmp	r2, #0
 4609 001c 10D1     		bne	.L276
3017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_TI1_SetConfig(htim->Instance,
 4610              		.loc 1 3017 0
 4611 001e 0068     		ldr	r0, [r0]
 4612              	.LVL493:
 4613 0020 2968     		ldr	r1, [r5]
 4614 0022 6A68     		ldr	r2, [r5, #4]
 4615              	.LVL494:
 4616 0024 EB68     		ldr	r3, [r5, #12]
 4617 0026 FFF7FEFF 		bl	TIM_TI1_SetConfig
 4618              	.LVL495:
3023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
 4619              		.loc 1 3023 0
 4620 002a 2368     		ldr	r3, [r4]
 4621 002c 9A69     		ldr	r2, [r3, #24]
 4622 002e 0C21     		mov	r1, #12
 4623 0030 8A43     		bic	r2, r1
ARM GAS  /tmp/ccNBoJ9q.s 			page 185


 4624 0032 9A61     		str	r2, [r3, #24]
3026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR1 |= sConfig->ICPrescaler;
 4625              		.loc 1 3026 0
 4626 0034 2368     		ldr	r3, [r4]
 4627 0036 9969     		ldr	r1, [r3, #24]
 4628 0038 AA68     		ldr	r2, [r5, #8]
 4629 003a 0A43     		orr	r2, r1
 4630 003c 9A61     		str	r2, [r3, #24]
 4631 003e 37E0     		b	.L277
 4632              	.LVL496:
 4633              	.L276:
3028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
 4634              		.loc 1 3028 0
 4635 0040 042A     		cmp	r2, #4
 4636 0042 11D1     		bne	.L278
3033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_TI2_SetConfig(htim->Instance,
 4637              		.loc 1 3033 0
 4638 0044 0068     		ldr	r0, [r0]
 4639              	.LVL497:
 4640 0046 2968     		ldr	r1, [r5]
 4641 0048 6A68     		ldr	r2, [r5, #4]
 4642              	.LVL498:
 4643 004a EB68     		ldr	r3, [r5, #12]
 4644 004c FFF7FEFF 		bl	TIM_TI2_SetConfig
 4645              	.LVL499:
3039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
 4646              		.loc 1 3039 0
 4647 0050 2368     		ldr	r3, [r4]
 4648 0052 9969     		ldr	r1, [r3, #24]
 4649 0054 1B4A     		ldr	r2, .L281
 4650 0056 0A40     		and	r2, r1
 4651 0058 9A61     		str	r2, [r3, #24]
3042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR1 |= (sConfig->ICPrescaler << 8U);
 4652              		.loc 1 3042 0
 4653 005a 2368     		ldr	r3, [r4]
 4654 005c 9969     		ldr	r1, [r3, #24]
 4655 005e AA68     		ldr	r2, [r5, #8]
 4656 0060 1202     		lsl	r2, r2, #8
 4657 0062 0A43     		orr	r2, r1
 4658 0064 9A61     		str	r2, [r3, #24]
 4659 0066 23E0     		b	.L277
 4660              	.LVL500:
 4661              	.L278:
3044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_3)
 4662              		.loc 1 3044 0
 4663 0068 082A     		cmp	r2, #8
 4664 006a 10D1     		bne	.L279
3049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_TI3_SetConfig(htim->Instance,
 4665              		.loc 1 3049 0
 4666 006c 0068     		ldr	r0, [r0]
 4667              	.LVL501:
 4668 006e 2968     		ldr	r1, [r5]
 4669 0070 6A68     		ldr	r2, [r5, #4]
 4670              	.LVL502:
 4671 0072 EB68     		ldr	r3, [r5, #12]
 4672 0074 FFF7FEFF 		bl	TIM_TI3_SetConfig
 4673              	.LVL503:
ARM GAS  /tmp/ccNBoJ9q.s 			page 186


3055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC3PSC;
 4674              		.loc 1 3055 0
 4675 0078 2368     		ldr	r3, [r4]
 4676 007a DA69     		ldr	r2, [r3, #28]
 4677 007c 0C21     		mov	r1, #12
 4678 007e 8A43     		bic	r2, r1
 4679 0080 DA61     		str	r2, [r3, #28]
3058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR2 |= sConfig->ICPrescaler;
 4680              		.loc 1 3058 0
 4681 0082 2368     		ldr	r3, [r4]
 4682 0084 D969     		ldr	r1, [r3, #28]
 4683 0086 AA68     		ldr	r2, [r5, #8]
 4684 0088 0A43     		orr	r2, r1
 4685 008a DA61     		str	r2, [r3, #28]
 4686 008c 10E0     		b	.L277
 4687              	.LVL504:
 4688              	.L279:
3065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_TI4_SetConfig(htim->Instance,
 4689              		.loc 1 3065 0
 4690 008e 0068     		ldr	r0, [r0]
 4691              	.LVL505:
 4692 0090 2968     		ldr	r1, [r5]
 4693 0092 6A68     		ldr	r2, [r5, #4]
 4694              	.LVL506:
 4695 0094 EB68     		ldr	r3, [r5, #12]
 4696 0096 FFF7FEFF 		bl	TIM_TI4_SetConfig
 4697              	.LVL507:
3071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC4PSC;
 4698              		.loc 1 3071 0
 4699 009a 2368     		ldr	r3, [r4]
 4700 009c D969     		ldr	r1, [r3, #28]
 4701 009e 094A     		ldr	r2, .L281
 4702 00a0 0A40     		and	r2, r1
 4703 00a2 DA61     		str	r2, [r3, #28]
3074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR2 |= (sConfig->ICPrescaler << 8U);
 4704              		.loc 1 3074 0
 4705 00a4 2368     		ldr	r3, [r4]
 4706 00a6 D969     		ldr	r1, [r3, #28]
 4707 00a8 AA68     		ldr	r2, [r5, #8]
 4708 00aa 1202     		lsl	r2, r2, #8
 4709 00ac 0A43     		orr	r2, r1
 4710 00ae DA61     		str	r2, [r3, #28]
 4711              	.L277:
3077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 4712              		.loc 1 3077 0
 4713 00b0 0122     		mov	r2, #1
 4714 00b2 3D23     		mov	r3, #61
 4715 00b4 E254     		strb	r2, [r4, r3]
3079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 4716              		.loc 1 3079 0
 4717 00b6 0022     		mov	r2, #0
 4718 00b8 3C23     		mov	r3, #60
 4719 00ba E254     		strb	r2, [r4, r3]
3081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 4720              		.loc 1 3081 0
 4721 00bc 0020     		mov	r0, #0
 4722 00be 00E0     		b	.L275
ARM GAS  /tmp/ccNBoJ9q.s 			page 187


 4723              	.LVL508:
 4724              	.L280:
3010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 4725              		.loc 1 3010 0
 4726 00c0 0220     		mov	r0, #2
 4727              	.LVL509:
 4728              	.L275:
3082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 4729              		.loc 1 3082 0
 4730              		@ sp needed
 4731              	.LVL510:
 4732              	.LVL511:
 4733 00c2 38BD     		pop	{r3, r4, r5, pc}
 4734              	.L282:
 4735              		.align	2
 4736              	.L281:
 4737 00c4 FFF3FFFF 		.word	-3073
 4738              		.cfi_endproc
 4739              	.LFE94:
 4741              		.section	.text.HAL_TIM_OnePulse_ConfigChannel,"ax",%progbits
 4742              		.align	2
 4743              		.global	HAL_TIM_OnePulse_ConfigChannel
 4744              		.code	16
 4745              		.thumb_func
 4747              	HAL_TIM_OnePulse_ConfigChannel:
 4748              	.LFB96:
3198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 4749              		.loc 1 3198 0
 4750              		.cfi_startproc
 4751              	.LVL512:
 4752 0000 70B5     		push	{r4, r5, r6, lr}
 4753              	.LCFI42:
 4754              		.cfi_def_cfa_offset 16
 4755              		.cfi_offset 4, -16
 4756              		.cfi_offset 5, -12
 4757              		.cfi_offset 6, -8
 4758              		.cfi_offset 14, -4
 4759 0002 88B0     		sub	sp, sp, #32
 4760              	.LCFI43:
 4761              		.cfi_def_cfa_offset 48
 4762 0004 041C     		mov	r4, r0
 4763 0006 0D1C     		mov	r5, r1
 4764 0008 1E1C     		mov	r6, r3
3205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(OutputChannel != InputChannel)
 4765              		.loc 1 3205 0
 4766 000a 9A42     		cmp	r2, r3
 4767 000c 6FD0     		beq	.L291
3207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 4768              		.loc 1 3207 0
 4769 000e 3C23     		mov	r3, #60
 4770              	.LVL513:
 4771 0010 C35C     		ldrb	r3, [r0, r3]
 4772 0012 012B     		cmp	r3, #1
 4773 0014 6DD0     		beq	.L292
3207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 4774              		.loc 1 3207 0 is_stmt 0 discriminator 2
 4775 0016 0121     		mov	r1, #1
ARM GAS  /tmp/ccNBoJ9q.s 			page 188


 4776              	.LVL514:
 4777 0018 3C23     		mov	r3, #60
 4778 001a C154     		strb	r1, [r0, r3]
3209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 4779              		.loc 1 3209 0 is_stmt 1 discriminator 2
 4780 001c 0221     		mov	r1, #2
 4781 001e 3D23     		mov	r3, #61
 4782 0020 C154     		strb	r1, [r0, r3]
3212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   temp1.OCMode = sConfig->OCMode;
 4783              		.loc 1 3212 0 discriminator 2
 4784 0022 2B68     		ldr	r3, [r5]
 4785 0024 0193     		str	r3, [sp, #4]
3213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   temp1.Pulse = sConfig->Pulse;
 4786              		.loc 1 3213 0 discriminator 2
 4787 0026 6B68     		ldr	r3, [r5, #4]
 4788 0028 0293     		str	r3, [sp, #8]
3214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   temp1.OCPolarity = sConfig->OCPolarity;
 4789              		.loc 1 3214 0 discriminator 2
 4790 002a AB68     		ldr	r3, [r5, #8]
 4791 002c 0393     		str	r3, [sp, #12]
3215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   temp1.OCNPolarity = sConfig->OCNPolarity;
 4792              		.loc 1 3215 0 discriminator 2
 4793 002e EB68     		ldr	r3, [r5, #12]
 4794 0030 0493     		str	r3, [sp, #16]
3216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   temp1.OCIdleState = sConfig->OCIdleState;
 4795              		.loc 1 3216 0 discriminator 2
 4796 0032 2B69     		ldr	r3, [r5, #16]
 4797 0034 0693     		str	r3, [sp, #24]
3217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   temp1.OCNIdleState = sConfig->OCNIdleState;
 4798              		.loc 1 3217 0 discriminator 2
 4799 0036 6B69     		ldr	r3, [r5, #20]
 4800 0038 0793     		str	r3, [sp, #28]
3219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     switch (OutputChannel)
 4801              		.loc 1 3219 0 discriminator 2
 4802 003a 002A     		cmp	r2, #0
 4803 003c 02D0     		beq	.L286
 4804 003e 042A     		cmp	r2, #4
 4805 0040 05D0     		beq	.L287
 4806 0042 08E0     		b	.L285
 4807              	.L286:
3225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, &temp1);
 4808              		.loc 1 3225 0
 4809 0044 0068     		ldr	r0, [r0]
 4810              	.LVL515:
 4811 0046 01A9     		add	r1, sp, #4
 4812 0048 FFF7FEFF 		bl	TIM_OC1_SetConfig
 4813              	.LVL516:
3227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 4814              		.loc 1 3227 0
 4815 004c 03E0     		b	.L285
 4816              	.LVL517:
 4817              	.L287:
3232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, &temp1);
 4818              		.loc 1 3232 0
 4819 004e 0068     		ldr	r0, [r0]
 4820              	.LVL518:
 4821 0050 01A9     		add	r1, sp, #4
ARM GAS  /tmp/ccNBoJ9q.s 			page 189


 4822 0052 FFF7FEFF 		bl	TIM_OC2_SetConfig
 4823              	.LVL519:
 4824              	.L285:
3238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (InputChannel)
 4825              		.loc 1 3238 0
 4826 0056 002E     		cmp	r6, #0
 4827 0058 02D0     		beq	.L289
 4828 005a 042E     		cmp	r6, #4
 4829 005c 20D0     		beq	.L290
 4830 005e 3EE0     		b	.L288
 4831              	.L289:
3244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI1_SetConfig(htim->Instance, sConfig->ICPolarity,
 4832              		.loc 1 3244 0
 4833 0060 A969     		ldr	r1, [r5, #24]
 4834 0062 EA69     		ldr	r2, [r5, #28]
 4835 0064 2B6A     		ldr	r3, [r5, #32]
 4836 0066 2068     		ldr	r0, [r4]
 4837 0068 FFF7FEFF 		bl	TIM_TI1_SetConfig
 4838              	.LVL520:
3248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
 4839              		.loc 1 3248 0
 4840 006c 2368     		ldr	r3, [r4]
 4841 006e 9A69     		ldr	r2, [r3, #24]
 4842 0070 0C21     		mov	r1, #12
 4843 0072 8A43     		bic	r2, r1
 4844 0074 9A61     		str	r2, [r3, #24]
3251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_TS;
 4845              		.loc 1 3251 0
 4846 0076 2368     		ldr	r3, [r4]
 4847 0078 9A68     		ldr	r2, [r3, #8]
 4848 007a 7021     		mov	r1, #112
 4849 007c 8A43     		bic	r2, r1
 4850 007e 9A60     		str	r2, [r3, #8]
3252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_TS_TI1FP1;
 4851              		.loc 1 3252 0
 4852 0080 2368     		ldr	r3, [r4]
 4853 0082 9968     		ldr	r1, [r3, #8]
 4854 0084 5022     		mov	r2, #80
 4855 0086 0A43     		orr	r2, r1
 4856 0088 9A60     		str	r2, [r3, #8]
3255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 4857              		.loc 1 3255 0
 4858 008a 2368     		ldr	r3, [r4]
 4859 008c 9A68     		ldr	r2, [r3, #8]
 4860 008e 0721     		mov	r1, #7
 4861 0090 8A43     		bic	r2, r1
 4862 0092 9A60     		str	r2, [r3, #8]
3256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
 4863              		.loc 1 3256 0
 4864 0094 2368     		ldr	r3, [r4]
 4865 0096 9968     		ldr	r1, [r3, #8]
 4866 0098 0622     		mov	r2, #6
 4867 009a 0A43     		orr	r2, r1
 4868 009c 9A60     		str	r2, [r3, #8]
3258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 4869              		.loc 1 3258 0
 4870 009e 1EE0     		b	.L288
ARM GAS  /tmp/ccNBoJ9q.s 			page 190


 4871              	.L290:
3263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI2_SetConfig(htim->Instance, sConfig->ICPolarity,
 4872              		.loc 1 3263 0
 4873 00a0 A969     		ldr	r1, [r5, #24]
 4874 00a2 EA69     		ldr	r2, [r5, #28]
 4875 00a4 2B6A     		ldr	r3, [r5, #32]
 4876 00a6 2068     		ldr	r0, [r4]
 4877 00a8 FFF7FEFF 		bl	TIM_TI2_SetConfig
 4878              	.LVL521:
3267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
 4879              		.loc 1 3267 0
 4880 00ac 2368     		ldr	r3, [r4]
 4881 00ae 9969     		ldr	r1, [r3, #24]
 4882 00b0 114A     		ldr	r2, .L293
 4883 00b2 0A40     		and	r2, r1
 4884 00b4 9A61     		str	r2, [r3, #24]
3270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_TS;
 4885              		.loc 1 3270 0
 4886 00b6 2368     		ldr	r3, [r4]
 4887 00b8 9A68     		ldr	r2, [r3, #8]
 4888 00ba 7021     		mov	r1, #112
 4889 00bc 8A43     		bic	r2, r1
 4890 00be 9A60     		str	r2, [r3, #8]
3271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_TS_TI2FP2;
 4891              		.loc 1 3271 0
 4892 00c0 2368     		ldr	r3, [r4]
 4893 00c2 9968     		ldr	r1, [r3, #8]
 4894 00c4 6022     		mov	r2, #96
 4895 00c6 0A43     		orr	r2, r1
 4896 00c8 9A60     		str	r2, [r3, #8]
3274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 4897              		.loc 1 3274 0
 4898 00ca 2368     		ldr	r3, [r4]
 4899 00cc 9A68     		ldr	r2, [r3, #8]
 4900 00ce 0721     		mov	r1, #7
 4901 00d0 8A43     		bic	r2, r1
 4902 00d2 9A60     		str	r2, [r3, #8]
3275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
 4903              		.loc 1 3275 0
 4904 00d4 2368     		ldr	r3, [r4]
 4905 00d6 9968     		ldr	r1, [r3, #8]
 4906 00d8 0622     		mov	r2, #6
 4907 00da 0A43     		orr	r2, r1
 4908 00dc 9A60     		str	r2, [r3, #8]
 4909              	.L288:
3283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 4910              		.loc 1 3283 0
 4911 00de 0122     		mov	r2, #1
 4912 00e0 3D23     		mov	r3, #61
 4913 00e2 E254     		strb	r2, [r4, r3]
3285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 4914              		.loc 1 3285 0
 4915 00e4 0022     		mov	r2, #0
 4916 00e6 3C23     		mov	r3, #60
 4917 00e8 E254     		strb	r2, [r4, r3]
3287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 4918              		.loc 1 3287 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 191


 4919 00ea 0020     		mov	r0, #0
 4920 00ec 02E0     		b	.L284
 4921              	.LVL522:
 4922              	.L291:
3291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     return HAL_ERROR;
 4923              		.loc 1 3291 0
 4924 00ee 0120     		mov	r0, #1
 4925              	.LVL523:
 4926 00f0 00E0     		b	.L284
 4927              	.LVL524:
 4928              	.L292:
3207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 4929              		.loc 1 3207 0
 4930 00f2 0220     		mov	r0, #2
 4931              	.LVL525:
 4932              	.L284:
3293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 4933              		.loc 1 3293 0
 4934 00f4 08B0     		add	sp, sp, #32
 4935              		@ sp needed
 4936              	.LVL526:
 4937              	.LVL527:
 4938              	.LVL528:
 4939 00f6 70BD     		pop	{r4, r5, r6, pc}
 4940              	.L294:
 4941              		.align	2
 4942              	.L293:
 4943 00f8 FFF3FFFF 		.word	-3073
 4944              		.cfi_endproc
 4945              	.LFE96:
 4947              		.section	.text.TIM_ETR_SetConfig,"ax",%progbits
 4948              		.align	2
 4949              		.global	TIM_ETR_SetConfig
 4950              		.code	16
 4951              		.thumb_func
 4953              	TIM_ETR_SetConfig:
 4954              	.LFB140:
5418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
5419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
5420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx  to select the TIM peripheral
5421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ExtTRGPrescaler : The external Trigger Prescaler.
5422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
5423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV1 : ETRP Prescaler OFF.
5424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV2 : ETRP frequency divided by 2.
5425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV4 : ETRP frequency divided by 4.
5426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV8 : ETRP frequency divided by 8.
5427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIM_ExtTRGPolarity : The external Trigger Polarity.
5428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
5429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ETRPOLARITY_INVERTED : active low or falling edge active.
5430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_ETRPOLARITY_NONINVERTED : active high or rising edge active.
5431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  ExtTRGFilter : External Trigger Filter.
5432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
5433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
5434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
5435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** void TIM_ETR_SetConfig(TIM_TypeDef* TIMx, uint32_t TIM_ExtTRGPrescaler,
5436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****                        uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
5437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
ARM GAS  /tmp/ccNBoJ9q.s 			page 192


 4955              		.loc 1 5437 0
 4956              		.cfi_startproc
 4957              	.LVL529:
 4958 0000 30B5     		push	{r4, r5, lr}
 4959              	.LCFI44:
 4960              		.cfi_def_cfa_offset 12
 4961              		.cfi_offset 4, -12
 4962              		.cfi_offset 5, -8
 4963              		.cfi_offset 14, -4
 4964              	.LVL530:
5438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmpsmcr = 0U;
5439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr = TIMx->SMCR;
 4965              		.loc 1 5440 0
 4966 0002 8568     		ldr	r5, [r0, #8]
 4967              	.LVL531:
5441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the ETR Bits */
5443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 4968              		.loc 1 5443 0
 4969 0004 034C     		ldr	r4, .L296
 4970 0006 2C40     		and	r4, r5
 4971              	.LVL532:
5444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
5446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 4972              		.loc 1 5446 0
 4973 0008 1B02     		lsl	r3, r3, #8
 4974              	.LVL533:
 4975 000a 1A43     		orr	r2, r3
 4976              	.LVL534:
 4977 000c 1143     		orr	r1, r2
 4978              	.LVL535:
 4979 000e 2143     		orr	r1, r4
 4980              	.LVL536:
5447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Write to TIMx SMCR */
5449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->SMCR = tmpsmcr;
 4981              		.loc 1 5449 0
 4982 0010 8160     		str	r1, [r0, #8]
5450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 4983              		.loc 1 5450 0
 4984              		@ sp needed
 4985 0012 30BD     		pop	{r4, r5, pc}
 4986              	.L297:
 4987              		.align	2
 4988              	.L296:
 4989 0014 FF00FFFF 		.word	-65281
 4990              		.cfi_endproc
 4991              	.LFE140:
 4993              		.section	.text.HAL_TIM_ConfigOCrefClear,"ax",%progbits
 4994              		.align	2
 4995              		.weak	HAL_TIM_ConfigOCrefClear
 4996              		.code	16
 4997              		.thumb_func
 4999              	HAL_TIM_ConfigOCrefClear:
 5000              	.LFB104:
ARM GAS  /tmp/ccNBoJ9q.s 			page 193


3892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 5001              		.loc 1 3892 0
 5002              		.cfi_startproc
 5003              	.LVL537:
 5004 0000 70B5     		push	{r4, r5, r6, lr}
 5005              	.LCFI45:
 5006              		.cfi_def_cfa_offset 16
 5007              		.cfi_offset 4, -16
 5008              		.cfi_offset 5, -12
 5009              		.cfi_offset 6, -8
 5010              		.cfi_offset 14, -4
 5011 0002 041C     		mov	r4, r0
 5012 0004 0E1C     		mov	r6, r1
 5013 0006 151C     		mov	r5, r2
 5014              	.LVL538:
3903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 5015              		.loc 1 3903 0
 5016 0008 3C23     		mov	r3, #60
 5017 000a C35C     		ldrb	r3, [r0, r3]
 5018 000c 012B     		cmp	r3, #1
 5019 000e 6CD0     		beq	.L313
3903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 5020              		.loc 1 3903 0 is_stmt 0 discriminator 2
 5021 0010 0122     		mov	r2, #1
 5022              	.LVL539:
 5023 0012 3C23     		mov	r3, #60
 5024 0014 C254     		strb	r2, [r0, r3]
3905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 5025              		.loc 1 3905 0 is_stmt 1 discriminator 2
 5026 0016 0222     		mov	r2, #2
 5027 0018 3D23     		mov	r3, #61
 5028 001a C254     		strb	r2, [r0, r3]
3907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (sClearInputConfig->ClearInputSource)
 5029              		.loc 1 3907 0 discriminator 2
 5030 001c 4B68     		ldr	r3, [r1, #4]
 5031 001e 002B     		cmp	r3, #0
 5032 0020 02D0     		beq	.L301
 5033 0022 012B     		cmp	r3, #1
 5034 0024 06D0     		beq	.L302
 5035 0026 10E0     		b	.L300
 5036              	.L301:
3912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR;
 5037              		.loc 1 3912 0
 5038 0028 0368     		ldr	r3, [r0]
 5039 002a 9968     		ldr	r1, [r3, #8]
 5040              	.LVL540:
3918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 5041              		.loc 1 3918 0
 5042 002c 304A     		ldr	r2, .L314
 5043 002e 0A40     		and	r2, r1
 5044              	.LVL541:
3921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR = tmpsmcr;
 5045              		.loc 1 3921 0
 5046 0030 9A60     		str	r2, [r3, #8]
3923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 5047              		.loc 1 3923 0
 5048 0032 0AE0     		b	.L300
ARM GAS  /tmp/ccNBoJ9q.s 			page 194


 5049              	.LVL542:
 5050              	.L302:
3927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
 5051              		.loc 1 3927 0
 5052 0034 0068     		ldr	r0, [r0]
 5053              	.LVL543:
 5054 0036 C968     		ldr	r1, [r1, #12]
 5055              	.LVL544:
 5056 0038 B268     		ldr	r2, [r6, #8]
 5057 003a 3369     		ldr	r3, [r6, #16]
 5058 003c FFF7FEFF 		bl	TIM_ETR_SetConfig
 5059              	.LVL545:
3933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SMCR_OCCS;
 5060              		.loc 1 3933 0
 5061 0040 2368     		ldr	r3, [r4]
 5062 0042 9968     		ldr	r1, [r3, #8]
 5063 0044 0822     		mov	r2, #8
 5064 0046 0A43     		orr	r2, r1
 5065 0048 9A60     		str	r2, [r3, #8]
 5066              	.LVL546:
 5067              	.L300:
3940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 5068              		.loc 1 3940 0
 5069 004a 042D     		cmp	r5, #4
 5070 004c 17D0     		beq	.L304
 5071 004e 02D8     		bhi	.L305
 5072 0050 002D     		cmp	r5, #0
 5073 0052 05D0     		beq	.L306
 5074 0054 41E0     		b	.L303
 5075              	.L305:
 5076 0056 082D     		cmp	r5, #8
 5077 0058 21D0     		beq	.L307
 5078 005a 0C2D     		cmp	r5, #12
 5079 005c 2ED0     		beq	.L308
 5080 005e 3CE0     		b	.L303
 5081              	.L306:
3944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         if(sClearInputConfig->ClearInputState != RESET)
 5082              		.loc 1 3944 0
 5083 0060 3368     		ldr	r3, [r6]
 5084 0062 002B     		cmp	r3, #0
 5085 0064 05D0     		beq	.L309
3947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           htim->Instance->CCMR1 |= TIM_CCMR1_OC1CE;
 5086              		.loc 1 3947 0
 5087 0066 2368     		ldr	r3, [r4]
 5088 0068 9969     		ldr	r1, [r3, #24]
 5089 006a 8022     		mov	r2, #128
 5090 006c 0A43     		orr	r2, r1
 5091 006e 9A61     		str	r2, [r3, #24]
 5092 0070 33E0     		b	.L303
 5093              	.L309:
3952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1CE;
 5094              		.loc 1 3952 0
 5095 0072 2368     		ldr	r3, [r4]
 5096 0074 9A69     		ldr	r2, [r3, #24]
 5097 0076 8021     		mov	r1, #128
 5098 0078 8A43     		bic	r2, r1
 5099 007a 9A61     		str	r2, [r3, #24]
ARM GAS  /tmp/ccNBoJ9q.s 			page 195


 5100 007c 2DE0     		b	.L303
 5101              	.L304:
3959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         if(sClearInputConfig->ClearInputState != RESET)
 5102              		.loc 1 3959 0
 5103 007e 3368     		ldr	r3, [r6]
 5104 0080 002B     		cmp	r3, #0
 5105 0082 06D0     		beq	.L310
3962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           htim->Instance->CCMR1 |= TIM_CCMR1_OC2CE;
 5106              		.loc 1 3962 0
 5107 0084 2368     		ldr	r3, [r4]
 5108 0086 9969     		ldr	r1, [r3, #24]
 5109 0088 8022     		mov	r2, #128
 5110 008a 1202     		lsl	r2, r2, #8
 5111 008c 0A43     		orr	r2, r1
 5112 008e 9A61     		str	r2, [r3, #24]
 5113 0090 23E0     		b	.L303
 5114              	.L310:
3967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2CE;
 5115              		.loc 1 3967 0
 5116 0092 2368     		ldr	r3, [r4]
 5117 0094 9969     		ldr	r1, [r3, #24]
 5118 0096 174A     		ldr	r2, .L314+4
 5119 0098 0A40     		and	r2, r1
 5120 009a 9A61     		str	r2, [r3, #24]
 5121 009c 1DE0     		b	.L303
 5122              	.L307:
3974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         if(sClearInputConfig->ClearInputState != RESET)
 5123              		.loc 1 3974 0
 5124 009e 3368     		ldr	r3, [r6]
 5125 00a0 002B     		cmp	r3, #0
 5126 00a2 05D0     		beq	.L311
3977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           htim->Instance->CCMR2 |= TIM_CCMR2_OC3CE;
 5127              		.loc 1 3977 0
 5128 00a4 2368     		ldr	r3, [r4]
 5129 00a6 D969     		ldr	r1, [r3, #28]
 5130 00a8 8022     		mov	r2, #128
 5131 00aa 0A43     		orr	r2, r1
 5132 00ac DA61     		str	r2, [r3, #28]
 5133 00ae 14E0     		b	.L303
 5134              	.L311:
3982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3CE;
 5135              		.loc 1 3982 0
 5136 00b0 2368     		ldr	r3, [r4]
 5137 00b2 DA69     		ldr	r2, [r3, #28]
 5138 00b4 8021     		mov	r1, #128
 5139 00b6 8A43     		bic	r2, r1
 5140 00b8 DA61     		str	r2, [r3, #28]
 5141 00ba 0EE0     		b	.L303
 5142              	.L308:
3989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         if(sClearInputConfig->ClearInputState != RESET)
 5143              		.loc 1 3989 0
 5144 00bc 3368     		ldr	r3, [r6]
 5145 00be 002B     		cmp	r3, #0
 5146 00c0 06D0     		beq	.L312
3992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****           htim->Instance->CCMR2 |= TIM_CCMR2_OC4CE;
 5147              		.loc 1 3992 0
 5148 00c2 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccNBoJ9q.s 			page 196


 5149 00c4 D969     		ldr	r1, [r3, #28]
 5150 00c6 8022     		mov	r2, #128
 5151 00c8 1202     		lsl	r2, r2, #8
 5152 00ca 0A43     		orr	r2, r1
 5153 00cc DA61     		str	r2, [r3, #28]
 5154 00ce 04E0     		b	.L303
 5155              	.L312:
3997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****         htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4CE;
 5156              		.loc 1 3997 0
 5157 00d0 2368     		ldr	r3, [r4]
 5158 00d2 D969     		ldr	r1, [r3, #28]
 5159 00d4 074A     		ldr	r2, .L314+4
 5160 00d6 0A40     		and	r2, r1
 5161 00d8 DA61     		str	r2, [r3, #28]
 5162              	.L303:
4005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 5163              		.loc 1 4005 0
 5164 00da 0122     		mov	r2, #1
 5165 00dc 3D23     		mov	r3, #61
 5166 00de E254     		strb	r2, [r4, r3]
4007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 5167              		.loc 1 4007 0
 5168 00e0 0022     		mov	r2, #0
 5169 00e2 3C23     		mov	r3, #60
 5170 00e4 E254     		strb	r2, [r4, r3]
4009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 5171              		.loc 1 4009 0
 5172 00e6 0020     		mov	r0, #0
 5173 00e8 00E0     		b	.L299
 5174              	.LVL547:
 5175              	.L313:
3903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 5176              		.loc 1 3903 0
 5177 00ea 0220     		mov	r0, #2
 5178              	.LVL548:
 5179              	.L299:
4010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 5180              		.loc 1 4010 0
 5181              		@ sp needed
 5182              	.LVL549:
 5183              	.LVL550:
 5184              	.LVL551:
 5185 00ec 70BD     		pop	{r4, r5, r6, pc}
 5186              	.L315:
 5187 00ee C046     		.align	2
 5188              	.L314:
 5189 00f0 F700FFFF 		.word	-65289
 5190 00f4 FF7FFFFF 		.word	-32769
 5191              		.cfi_endproc
 5192              	.LFE104:
 5194              		.section	.text.HAL_TIM_ConfigClockSource,"ax",%progbits
 5195              		.align	2
 5196              		.global	HAL_TIM_ConfigClockSource
 5197              		.code	16
 5198              		.thumb_func
 5200              	HAL_TIM_ConfigClockSource:
 5201              	.LFB105:
ARM GAS  /tmp/ccNBoJ9q.s 			page 197


4020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 5202              		.loc 1 4020 0
 5203              		.cfi_startproc
 5204              	.LVL552:
 5205 0000 38B5     		push	{r3, r4, r5, lr}
 5206              	.LCFI46:
 5207              		.cfi_def_cfa_offset 16
 5208              		.cfi_offset 3, -16
 5209              		.cfi_offset 4, -12
 5210              		.cfi_offset 5, -8
 5211              		.cfi_offset 14, -4
 5212 0002 041C     		mov	r4, r0
 5213              	.LVL553:
4024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 5214              		.loc 1 4024 0
 5215 0004 3C23     		mov	r3, #60
 5216 0006 C35C     		ldrb	r3, [r0, r3]
 5217 0008 012B     		cmp	r3, #1
 5218 000a 00D1     		bne	.LCB5174
 5219 000c 87E0     		b	.L332	@long jump
 5220              	.LCB5174:
4024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 5221              		.loc 1 4024 0 is_stmt 0 discriminator 2
 5222 000e 0122     		mov	r2, #1
 5223 0010 3C23     		mov	r3, #60
 5224 0012 C254     		strb	r2, [r0, r3]
4026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 5225              		.loc 1 4026 0 is_stmt 1 discriminator 2
 5226 0014 0222     		mov	r2, #2
 5227 0016 3D23     		mov	r3, #61
 5228 0018 C254     		strb	r2, [r0, r3]
4032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
 5229              		.loc 1 4032 0 discriminator 2
 5230 001a 0368     		ldr	r3, [r0]
 5231 001c 9868     		ldr	r0, [r3, #8]
 5232              	.LVL554:
4034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 5233              		.loc 1 4034 0 discriminator 2
 5234 001e 414A     		ldr	r2, .L333
 5235 0020 0240     		and	r2, r0
 5236              	.LVL555:
4035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
 5237              		.loc 1 4035 0 discriminator 2
 5238 0022 9A60     		str	r2, [r3, #8]
4037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (sClockSourceConfig->ClockSource)
 5239              		.loc 1 4037 0 discriminator 2
 5240 0024 0B68     		ldr	r3, [r1]
 5241 0026 402B     		cmp	r3, #64
 5242 0028 53D0     		beq	.L319
 5243 002a 0AD8     		bhi	.L320
 5244 002c 102B     		cmp	r3, #16
 5245 002e 60D0     		beq	.L321
 5246 0030 02D8     		bhi	.L322
 5247 0032 002B     		cmp	r3, #0
 5248 0034 58D0     		beq	.L323
 5249 0036 6AE0     		b	.L318
 5250              	.L322:
ARM GAS  /tmp/ccNBoJ9q.s 			page 198


 5251 0038 202B     		cmp	r3, #32
 5252 003a 5FD0     		beq	.L324
 5253 003c 302B     		cmp	r3, #48
 5254 003e 62D0     		beq	.L325
 5255 0040 65E0     		b	.L318
 5256              	.L320:
 5257 0042 702B     		cmp	r3, #112
 5258 0044 14D0     		beq	.L326
 5259 0046 04D8     		bhi	.L327
 5260 0048 502B     		cmp	r3, #80
 5261 004a 2CD0     		beq	.L328
 5262 004c 602B     		cmp	r3, #96
 5263 004e 35D0     		beq	.L329
 5264 0050 5DE0     		b	.L318
 5265              	.L327:
 5266 0052 8022     		mov	r2, #128
 5267              	.LVL556:
 5268 0054 5201     		lsl	r2, r2, #5
 5269 0056 9342     		cmp	r3, r2
 5270 0058 04D0     		beq	.L330
 5271 005a 8022     		mov	r2, #128
 5272 005c 9201     		lsl	r2, r2, #6
 5273 005e 9342     		cmp	r3, r2
 5274 0060 13D0     		beq	.L331
 5275 0062 54E0     		b	.L318
 5276              	.L330:
4043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 5277              		.loc 1 4043 0
 5278 0064 2368     		ldr	r3, [r4]
 5279 0066 9A68     		ldr	r2, [r3, #8]
 5280 0068 0721     		mov	r1, #7
 5281              	.LVL557:
 5282 006a 8A43     		bic	r2, r1
 5283 006c 9A60     		str	r2, [r3, #8]
4045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 5284              		.loc 1 4045 0
 5285 006e 4EE0     		b	.L318
 5286              	.LVL558:
 5287              	.L326:
4058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
 5288              		.loc 1 4058 0
 5289 0070 8D68     		ldr	r5, [r1, #8]
 5290 0072 4A68     		ldr	r2, [r1, #4]
 5291              	.LVL559:
 5292 0074 CB68     		ldr	r3, [r1, #12]
 5293 0076 2068     		ldr	r0, [r4]
 5294              	.LVL560:
 5295 0078 291C     		mov	r1, r5
 5296              	.LVL561:
 5297 007a FFF7FEFF 		bl	TIM_ETR_SetConfig
 5298              	.LVL562:
4063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR;
 5299              		.loc 1 4063 0
 5300 007e 2368     		ldr	r3, [r4]
 5301 0080 9968     		ldr	r1, [r3, #8]
 5302              	.LVL563:
4065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
ARM GAS  /tmp/ccNBoJ9q.s 			page 199


 5303              		.loc 1 4065 0
 5304 0082 7722     		mov	r2, #119
 5305              	.LVL564:
4067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 5306              		.loc 1 4067 0
 5307 0084 0A43     		orr	r2, r1
 5308              	.LVL565:
4069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR = tmpsmcr;
 5309              		.loc 1 4069 0
 5310 0086 9A60     		str	r2, [r3, #8]
4071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 5311              		.loc 1 4071 0
 5312 0088 41E0     		b	.L318
 5313              	.LVL566:
 5314              	.L331:
4084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
 5315              		.loc 1 4084 0
 5316 008a 8D68     		ldr	r5, [r1, #8]
 5317 008c 4A68     		ldr	r2, [r1, #4]
 5318 008e CB68     		ldr	r3, [r1, #12]
 5319 0090 2068     		ldr	r0, [r4]
 5320              	.LVL567:
 5321 0092 291C     		mov	r1, r5
 5322              	.LVL568:
 5323 0094 FFF7FEFF 		bl	TIM_ETR_SetConfig
 5324              	.LVL569:
4089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SMCR_ECE;
 5325              		.loc 1 4089 0
 5326 0098 2368     		ldr	r3, [r4]
 5327 009a 9968     		ldr	r1, [r3, #8]
 5328 009c 8022     		mov	r2, #128
 5329 009e D201     		lsl	r2, r2, #7
 5330 00a0 0A43     		orr	r2, r1
 5331 00a2 9A60     		str	r2, [r3, #8]
4091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 5332              		.loc 1 4091 0
 5333 00a4 33E0     		b	.L318
 5334              	.LVL570:
 5335              	.L328:
4102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
 5336              		.loc 1 4102 0
 5337 00a6 4B68     		ldr	r3, [r1, #4]
 5338 00a8 CA68     		ldr	r2, [r1, #12]
 5339              	.LVL571:
 5340 00aa 2068     		ldr	r0, [r4]
 5341              	.LVL572:
 5342 00ac 191C     		mov	r1, r3
 5343              	.LVL573:
 5344 00ae FFF7FEFF 		bl	TIM_TI1_ConfigInputStage
 5345              	.LVL574:
4105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 5346              		.loc 1 4105 0
 5347 00b2 2068     		ldr	r0, [r4]
 5348 00b4 5021     		mov	r1, #80
 5349 00b6 FFF7FEFF 		bl	TIM_ITRx_SetConfig
 5350              	.LVL575:
4107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
ARM GAS  /tmp/ccNBoJ9q.s 			page 200


 5351              		.loc 1 4107 0
 5352 00ba 28E0     		b	.L318
 5353              	.LVL576:
 5354              	.L329:
4117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance,
 5355              		.loc 1 4117 0
 5356 00bc 4B68     		ldr	r3, [r1, #4]
 5357 00be CA68     		ldr	r2, [r1, #12]
 5358              	.LVL577:
 5359 00c0 2068     		ldr	r0, [r4]
 5360              	.LVL578:
 5361 00c2 191C     		mov	r1, r3
 5362              	.LVL579:
 5363 00c4 FFF7FEFF 		bl	TIM_TI2_ConfigInputStage
 5364              	.LVL580:
4120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 5365              		.loc 1 4120 0
 5366 00c8 2068     		ldr	r0, [r4]
 5367 00ca 6021     		mov	r1, #96
 5368 00cc FFF7FEFF 		bl	TIM_ITRx_SetConfig
 5369              	.LVL581:
4122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 5370              		.loc 1 4122 0
 5371 00d0 1DE0     		b	.L318
 5372              	.LVL582:
 5373              	.L319:
4132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
 5374              		.loc 1 4132 0
 5375 00d2 4B68     		ldr	r3, [r1, #4]
 5376 00d4 CA68     		ldr	r2, [r1, #12]
 5377              	.LVL583:
 5378 00d6 2068     		ldr	r0, [r4]
 5379              	.LVL584:
 5380 00d8 191C     		mov	r1, r3
 5381              	.LVL585:
 5382 00da FFF7FEFF 		bl	TIM_TI1_ConfigInputStage
 5383              	.LVL586:
4135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 5384              		.loc 1 4135 0
 5385 00de 2068     		ldr	r0, [r4]
 5386 00e0 4021     		mov	r1, #64
 5387 00e2 FFF7FEFF 		bl	TIM_ITRx_SetConfig
 5388              	.LVL587:
4137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 5389              		.loc 1 4137 0
 5390 00e6 12E0     		b	.L318
 5391              	.LVL588:
 5392              	.L323:
4143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR0);
 5393              		.loc 1 4143 0
 5394 00e8 2068     		ldr	r0, [r4]
 5395 00ea 0021     		mov	r1, #0
 5396              	.LVL589:
 5397 00ec FFF7FEFF 		bl	TIM_ITRx_SetConfig
 5398              	.LVL590:
4145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 5399              		.loc 1 4145 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 201


 5400 00f0 0DE0     		b	.L318
 5401              	.LVL591:
 5402              	.L321:
4151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR1);
 5403              		.loc 1 4151 0
 5404 00f2 2068     		ldr	r0, [r4]
 5405 00f4 1021     		mov	r1, #16
 5406              	.LVL592:
 5407 00f6 FFF7FEFF 		bl	TIM_ITRx_SetConfig
 5408              	.LVL593:
4153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 5409              		.loc 1 4153 0
 5410 00fa 08E0     		b	.L318
 5411              	.LVL594:
 5412              	.L324:
4159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR2);
 5413              		.loc 1 4159 0
 5414 00fc 2068     		ldr	r0, [r4]
 5415 00fe 2021     		mov	r1, #32
 5416              	.LVL595:
 5417 0100 FFF7FEFF 		bl	TIM_ITRx_SetConfig
 5418              	.LVL596:
4161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 5419              		.loc 1 4161 0
 5420 0104 03E0     		b	.L318
 5421              	.LVL597:
 5422              	.L325:
4167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR3);
 5423              		.loc 1 4167 0
 5424 0106 2068     		ldr	r0, [r4]
 5425 0108 3021     		mov	r1, #48
 5426              	.LVL598:
 5427 010a FFF7FEFF 		bl	TIM_ITRx_SetConfig
 5428              	.LVL599:
 5429              	.L318:
4174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 5430              		.loc 1 4174 0
 5431 010e 0122     		mov	r2, #1
 5432 0110 3D23     		mov	r3, #61
 5433 0112 E254     		strb	r2, [r4, r3]
4176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 5434              		.loc 1 4176 0
 5435 0114 0022     		mov	r2, #0
 5436 0116 3C23     		mov	r3, #60
 5437 0118 E254     		strb	r2, [r4, r3]
4178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 5438              		.loc 1 4178 0
 5439 011a 0020     		mov	r0, #0
 5440 011c 00E0     		b	.L317
 5441              	.LVL600:
 5442              	.L332:
4024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 5443              		.loc 1 4024 0
 5444 011e 0220     		mov	r0, #2
 5445              	.LVL601:
 5446              	.L317:
4179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
ARM GAS  /tmp/ccNBoJ9q.s 			page 202


 5447              		.loc 1 4179 0
 5448              		@ sp needed
 5449              	.LVL602:
 5450 0120 38BD     		pop	{r3, r4, r5, pc}
 5451              	.L334:
 5452 0122 C046     		.align	2
 5453              	.L333:
 5454 0124 8800FFFF 		.word	-65400
 5455              		.cfi_endproc
 5456              	.LFE105:
 5458              		.section	.text.TIM_SlaveTimer_SetConfig,"ax",%progbits
 5459              		.align	2
 5460              		.code	16
 5461              		.thumb_func
 5463              	TIM_SlaveTimer_SetConfig:
 5464              	.LFB132:
4999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 5465              		.loc 1 4999 0
 5466              		.cfi_startproc
 5467              	.LVL603:
 5468 0000 38B5     		push	{r3, r4, r5, lr}
 5469              	.LCFI47:
 5470              		.cfi_def_cfa_offset 16
 5471              		.cfi_offset 3, -16
 5472              		.cfi_offset 4, -12
 5473              		.cfi_offset 5, -8
 5474              		.cfi_offset 14, -4
 5475              	.LVL604:
5005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
 5476              		.loc 1 5005 0
 5477 0002 0368     		ldr	r3, [r0]
 5478 0004 9A68     		ldr	r2, [r3, #8]
 5479              	.LVL605:
5008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_TS;
 5480              		.loc 1 5008 0
 5481 0006 7024     		mov	r4, #112
 5482 0008 A243     		bic	r2, r4
 5483              	.LVL606:
5010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->InputTrigger;
 5484              		.loc 1 5010 0
 5485 000a 4C68     		ldr	r4, [r1, #4]
 5486 000c 2243     		orr	r2, r4
 5487              	.LVL607:
5013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_SMS;
 5488              		.loc 1 5013 0
 5489 000e 0724     		mov	r4, #7
 5490 0010 A243     		bic	r2, r4
 5491              	.LVL608:
5015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->SlaveMode;
 5492              		.loc 1 5015 0
 5493 0012 0C68     		ldr	r4, [r1]
 5494 0014 2243     		orr	r2, r4
 5495              	.LVL609:
5018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
 5496              		.loc 1 5018 0
 5497 0016 9A60     		str	r2, [r3, #8]
5021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (sSlaveConfig->InputTrigger)
ARM GAS  /tmp/ccNBoJ9q.s 			page 203


 5498              		.loc 1 5021 0
 5499 0018 4B68     		ldr	r3, [r1, #4]
 5500 001a 502B     		cmp	r3, #80
 5501 001c 20D0     		beq	.L337
 5502 001e 02D8     		bhi	.L338
 5503 0020 402B     		cmp	r3, #64
 5504 0022 0CD0     		beq	.L339
 5505 0024 29E0     		b	.L335
 5506              	.L338:
 5507 0026 602B     		cmp	r3, #96
 5508 0028 21D0     		beq	.L340
 5509 002a 702B     		cmp	r3, #112
 5510 002c 25D1     		bne	.L335
5031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance,
 5511              		.loc 1 5031 0
 5512 002e 0068     		ldr	r0, [r0]
 5513              	.LVL610:
 5514 0030 CC68     		ldr	r4, [r1, #12]
 5515 0032 8A68     		ldr	r2, [r1, #8]
 5516              	.LVL611:
 5517 0034 0B69     		ldr	r3, [r1, #16]
 5518 0036 211C     		mov	r1, r4
 5519              	.LVL612:
 5520 0038 FFF7FEFF 		bl	TIM_ETR_SetConfig
 5521              	.LVL613:
5036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 5522              		.loc 1 5036 0
 5523 003c 1DE0     		b	.L335
 5524              	.LVL614:
 5525              	.L339:
5045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpccer = htim->Instance->CCER;
 5526              		.loc 1 5045 0
 5527 003e 0368     		ldr	r3, [r0]
 5528 0040 1A6A     		ldr	r2, [r3, #32]
 5529              	.LVL615:
5046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCER &= ~TIM_CCER_CC1E;
 5530              		.loc 1 5046 0
 5531 0042 1C6A     		ldr	r4, [r3, #32]
 5532 0044 0125     		mov	r5, #1
 5533 0046 AC43     		bic	r4, r5
 5534 0048 1C62     		str	r4, [r3, #32]
5047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpccmr1 = htim->Instance->CCMR1;
 5535              		.loc 1 5047 0
 5536 004a 0368     		ldr	r3, [r0]
 5537 004c 9C69     		ldr	r4, [r3, #24]
 5538              	.LVL616:
5050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpccmr1 &= ~TIM_CCMR1_IC1F;
 5539              		.loc 1 5050 0
 5540 004e F025     		mov	r5, #240
 5541 0050 AC43     		bic	r4, r5
 5542              	.LVL617:
5051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 5543              		.loc 1 5051 0
 5544 0052 0969     		ldr	r1, [r1, #16]
 5545              	.LVL618:
 5546 0054 0901     		lsl	r1, r1, #4
 5547 0056 2143     		orr	r1, r4
ARM GAS  /tmp/ccNBoJ9q.s 			page 204


 5548              	.LVL619:
5054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCMR1 = tmpccmr1;
 5549              		.loc 1 5054 0
 5550 0058 9961     		str	r1, [r3, #24]
5055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->Instance->CCER = tmpccer;
 5551              		.loc 1 5055 0
 5552 005a 0368     		ldr	r3, [r0]
 5553 005c 1A62     		str	r2, [r3, #32]
5058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 5554              		.loc 1 5058 0
 5555 005e 0CE0     		b	.L335
 5556              	.LVL620:
 5557              	.L337:
5068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
 5558              		.loc 1 5068 0
 5559 0060 0068     		ldr	r0, [r0]
 5560              	.LVL621:
 5561 0062 8B68     		ldr	r3, [r1, #8]
 5562 0064 0A69     		ldr	r2, [r1, #16]
 5563              	.LVL622:
 5564 0066 191C     		mov	r1, r3
 5565              	.LVL623:
 5566 0068 FFF7FEFF 		bl	TIM_TI1_ConfigInputStage
 5567              	.LVL624:
5072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 5568              		.loc 1 5072 0
 5569 006c 05E0     		b	.L335
 5570              	.LVL625:
 5571              	.L340:
5082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance,
 5572              		.loc 1 5082 0
 5573 006e 0068     		ldr	r0, [r0]
 5574              	.LVL626:
 5575 0070 8B68     		ldr	r3, [r1, #8]
 5576 0072 0A69     		ldr	r2, [r1, #16]
 5577              	.LVL627:
 5578 0074 191C     		mov	r1, r3
 5579              	.LVL628:
 5580 0076 FFF7FEFF 		bl	TIM_TI2_ConfigInputStage
 5581              	.LVL629:
 5582              	.L335:
5119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 5583              		.loc 1 5119 0
 5584              		@ sp needed
 5585 007a 38BD     		pop	{r3, r4, r5, pc}
 5586              		.cfi_endproc
 5587              	.LFE132:
 5589              		.section	.text.HAL_TIM_SlaveConfigSynchronization,"ax",%progbits
 5590              		.align	2
 5591              		.global	HAL_TIM_SlaveConfigSynchronization
 5592              		.code	16
 5593              		.thumb_func
 5595              	HAL_TIM_SlaveConfigSynchronization:
 5596              	.LFB107:
4226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 5597              		.loc 1 4226 0
 5598              		.cfi_startproc
ARM GAS  /tmp/ccNBoJ9q.s 			page 205


 5599              	.LVL630:
 5600 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5601              	.LCFI48:
 5602              		.cfi_def_cfa_offset 24
 5603              		.cfi_offset 3, -24
 5604              		.cfi_offset 4, -20
 5605              		.cfi_offset 5, -16
 5606              		.cfi_offset 6, -12
 5607              		.cfi_offset 7, -8
 5608              		.cfi_offset 14, -4
 5609 0002 041C     		mov	r4, r0
4232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 5610              		.loc 1 4232 0
 5611 0004 3C23     		mov	r3, #60
 5612 0006 C35C     		ldrb	r3, [r0, r3]
 5613 0008 012B     		cmp	r3, #1
 5614 000a 16D0     		beq	.L344
4232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 5615              		.loc 1 4232 0 is_stmt 0 discriminator 2
 5616 000c 3C25     		mov	r5, #60
 5617 000e 0127     		mov	r7, #1
 5618 0010 4755     		strb	r7, [r0, r5]
4234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 5619              		.loc 1 4234 0 is_stmt 1 discriminator 2
 5620 0012 3D26     		mov	r6, #61
 5621 0014 0223     		mov	r3, #2
 5622 0016 8355     		strb	r3, [r0, r6]
4236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_SlaveTimer_SetConfig(htim, sSlaveConfig);
 5623              		.loc 1 4236 0 discriminator 2
 5624 0018 FFF7FEFF 		bl	TIM_SlaveTimer_SetConfig
 5625              	.LVL631:
4239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 5626              		.loc 1 4239 0 discriminator 2
 5627 001c 2368     		ldr	r3, [r4]
 5628 001e DA68     		ldr	r2, [r3, #12]
 5629 0020 4021     		mov	r1, #64
 5630 0022 8A43     		bic	r2, r1
 5631 0024 DA60     		str	r2, [r3, #12]
4242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 5632              		.loc 1 4242 0 discriminator 2
 5633 0026 2368     		ldr	r3, [r4]
 5634 0028 D968     		ldr	r1, [r3, #12]
 5635 002a 054A     		ldr	r2, .L345
 5636 002c 0A40     		and	r2, r1
 5637 002e DA60     		str	r2, [r3, #12]
4244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 5638              		.loc 1 4244 0 discriminator 2
 5639 0030 A755     		strb	r7, [r4, r6]
4246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 5640              		.loc 1 4246 0 discriminator 2
 5641 0032 0023     		mov	r3, #0
 5642 0034 6355     		strb	r3, [r4, r5]
4248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 5643              		.loc 1 4248 0 discriminator 2
 5644 0036 0020     		mov	r0, #0
 5645 0038 00E0     		b	.L343
 5646              	.LVL632:
ARM GAS  /tmp/ccNBoJ9q.s 			page 206


 5647              	.L344:
4232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 5648              		.loc 1 4232 0
 5649 003a 0220     		mov	r0, #2
 5650              	.LVL633:
 5651              	.L343:
4249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     }
 5652              		.loc 1 4249 0
 5653              		@ sp needed
 5654              	.LVL634:
 5655 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5656              	.L346:
 5657 003e C046     		.align	2
 5658              	.L345:
 5659 0040 FFBFFFFF 		.word	-16385
 5660              		.cfi_endproc
 5661              	.LFE107:
 5663              		.section	.text.HAL_TIM_SlaveConfigSynchronization_IT,"ax",%progbits
 5664              		.align	2
 5665              		.global	HAL_TIM_SlaveConfigSynchronization_IT
 5666              		.code	16
 5667              		.thumb_func
 5669              	HAL_TIM_SlaveConfigSynchronization_IT:
 5670              	.LFB108:
4262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     {
 5671              		.loc 1 4262 0
 5672              		.cfi_startproc
 5673              	.LVL635:
 5674 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5675              	.LCFI49:
 5676              		.cfi_def_cfa_offset 24
 5677              		.cfi_offset 3, -24
 5678              		.cfi_offset 4, -20
 5679              		.cfi_offset 5, -16
 5680              		.cfi_offset 6, -12
 5681              		.cfi_offset 7, -8
 5682              		.cfi_offset 14, -4
 5683 0002 041C     		mov	r4, r0
4268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 5684              		.loc 1 4268 0
 5685 0004 3C23     		mov	r3, #60
 5686 0006 C35C     		ldrb	r3, [r0, r3]
 5687 0008 012B     		cmp	r3, #1
 5688 000a 16D0     		beq	.L349
4268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 5689              		.loc 1 4268 0 is_stmt 0 discriminator 2
 5690 000c 3C25     		mov	r5, #60
 5691 000e 0127     		mov	r7, #1
 5692 0010 4755     		strb	r7, [r0, r5]
4270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 5693              		.loc 1 4270 0 is_stmt 1 discriminator 2
 5694 0012 3D26     		mov	r6, #61
 5695 0014 0223     		mov	r3, #2
 5696 0016 8355     		strb	r3, [r0, r6]
4272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_SlaveTimer_SetConfig(htim, sSlaveConfig);
 5697              		.loc 1 4272 0 discriminator 2
 5698 0018 FFF7FEFF 		bl	TIM_SlaveTimer_SetConfig
ARM GAS  /tmp/ccNBoJ9q.s 			page 207


 5699              	.LVL636:
4275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_TRIGGER);
 5700              		.loc 1 4275 0 discriminator 2
 5701 001c 2368     		ldr	r3, [r4]
 5702 001e D968     		ldr	r1, [r3, #12]
 5703 0020 4022     		mov	r2, #64
 5704 0022 0A43     		orr	r2, r1
 5705 0024 DA60     		str	r2, [r3, #12]
4278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 5706              		.loc 1 4278 0 discriminator 2
 5707 0026 2368     		ldr	r3, [r4]
 5708 0028 D968     		ldr	r1, [r3, #12]
 5709 002a 054A     		ldr	r2, .L350
 5710 002c 0A40     		and	r2, r1
 5711 002e DA60     		str	r2, [r3, #12]
4280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 5712              		.loc 1 4280 0 discriminator 2
 5713 0030 A755     		strb	r7, [r4, r6]
4282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 5714              		.loc 1 4282 0 discriminator 2
 5715 0032 0023     		mov	r3, #0
 5716 0034 6355     		strb	r3, [r4, r5]
4284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 5717              		.loc 1 4284 0 discriminator 2
 5718 0036 0020     		mov	r0, #0
 5719 0038 00E0     		b	.L348
 5720              	.LVL637:
 5721              	.L349:
4268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_LOCK(htim);
 5722              		.loc 1 4268 0
 5723 003a 0220     		mov	r0, #2
 5724              	.LVL638:
 5725              	.L348:
4285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 5726              		.loc 1 4285 0
 5727              		@ sp needed
 5728              	.LVL639:
 5729 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5730              	.L351:
 5731 003e C046     		.align	2
 5732              	.L350:
 5733 0040 FFBFFFFF 		.word	-16385
 5734              		.cfi_endproc
 5735              	.LFE108:
 5737              		.section	.text.TIM_CCxChannelCmd,"ax",%progbits
 5738              		.align	2
 5739              		.global	TIM_CCxChannelCmd
 5740              		.code	16
 5741              		.thumb_func
 5743              	TIM_CCxChannelCmd:
 5744              	.LFB141:
5451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** /**
5453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
5454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  TIMx  to select the TIM peripheral
5455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  Channel : specifies the TIM Channel
5456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/ccNBoJ9q.s 			page 208


5457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1 : TIM Channel 1
5458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2 : TIM Channel 2
5459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3 : TIM Channel 3
5460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4 : TIM Channel 4
5461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @param  ChannelState : specifies the TIM Channel CCxE bit new state.
5462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_Disable.
5463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   * @retval None
5464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   */
5465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** void TIM_CCxChannelCmd(TIM_TypeDef* TIMx, uint32_t Channel, uint32_t ChannelState)
5466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 5745              		.loc 1 5466 0
 5746              		.cfi_startproc
 5747              	.LVL640:
 5748 0000 10B5     		push	{r4, lr}
 5749              	.LCFI50:
 5750              		.cfi_def_cfa_offset 8
 5751              		.cfi_offset 4, -8
 5752              		.cfi_offset 14, -4
 5753              	.LVL641:
5467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   uint32_t tmp = 0U;
5468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Check the parameters */
5470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CC1_INSTANCE(TIMx));
5471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel));
5472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   tmp = TIM_CCER_CC1E << Channel;
 5754              		.loc 1 5473 0
 5755 0002 0124     		mov	r4, #1
 5756 0004 8C40     		lsl	r4, r4, r1
 5757              	.LVL642:
5474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Reset the CCxE Bit */
5476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER &= ~tmp;
 5758              		.loc 1 5476 0
 5759 0006 036A     		ldr	r3, [r0, #32]
 5760 0008 A343     		bic	r3, r4
 5761 000a 0362     		str	r3, [r0, #32]
5477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** 
5478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   /* Set or reset the CCxE Bit */
5479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIMx->CCER |=  (uint32_t)(ChannelState << Channel);
 5762              		.loc 1 5479 0
 5763 000c 036A     		ldr	r3, [r0, #32]
 5764 000e 8A40     		lsl	r2, r2, r1
 5765              	.LVL643:
 5766 0010 111C     		mov	r1, r2
 5767              	.LVL644:
 5768 0012 1943     		orr	r1, r3
 5769 0014 0162     		str	r1, [r0, #32]
5480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 5770              		.loc 1 5480 0
 5771              		@ sp needed
 5772              	.LVL645:
 5773 0016 10BD     		pop	{r4, pc}
 5774              		.cfi_endproc
 5775              	.LFE141:
 5777              		.section	.text.HAL_TIM_OC_Start,"ax",%progbits
 5778              		.align	2
ARM GAS  /tmp/ccNBoJ9q.s 			page 209


 5779              		.global	HAL_TIM_OC_Start
 5780              		.code	16
 5781              		.thumb_func
 5783              	HAL_TIM_OC_Start:
 5784              	.LFB48:
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 5785              		.loc 1 585 0
 5786              		.cfi_startproc
 5787              	.LVL646:
 5788 0000 10B5     		push	{r4, lr}
 5789              	.LCFI51:
 5790              		.cfi_def_cfa_offset 8
 5791              		.cfi_offset 4, -8
 5792              		.cfi_offset 14, -4
 5793 0002 041C     		mov	r4, r0
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 5794              		.loc 1 590 0
 5795 0004 0068     		ldr	r0, [r0]
 5796              	.LVL647:
 5797 0006 0122     		mov	r2, #1
 5798 0008 FFF7FEFF 		bl	TIM_CCxChannelCmd
 5799              	.LVL648:
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 5800              		.loc 1 592 0
 5801 000c 2368     		ldr	r3, [r4]
 5802 000e 114A     		ldr	r2, .L360
 5803 0010 9342     		cmp	r3, r2
 5804 0012 0AD0     		beq	.L356
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 5805              		.loc 1 592 0 is_stmt 0 discriminator 2
 5806 0014 104A     		ldr	r2, .L360+4
 5807 0016 9342     		cmp	r3, r2
 5808 0018 09D0     		beq	.L357
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 5809              		.loc 1 592 0 discriminator 1
 5810 001a 104A     		ldr	r2, .L360+8
 5811 001c 9342     		cmp	r3, r2
 5812 001e 08D0     		beq	.L358
 5813 0020 0F4A     		ldr	r2, .L360+12
 5814 0022 9342     		cmp	r3, r2
 5815 0024 07D1     		bne	.L359
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 5816              		.loc 1 592 0
 5817 0026 0122     		mov	r2, #1
 5818 0028 06E0     		b	.L354
 5819              	.L356:
 5820 002a 0122     		mov	r2, #1
 5821 002c 04E0     		b	.L354
 5822              	.L357:
 5823 002e 0122     		mov	r2, #1
 5824 0030 02E0     		b	.L354
 5825              	.L358:
 5826 0032 0122     		mov	r2, #1
 5827 0034 00E0     		b	.L354
 5828              	.L359:
 5829 0036 0022     		mov	r2, #0
 5830              	.L354:
ARM GAS  /tmp/ccNBoJ9q.s 			page 210


 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 5831              		.loc 1 592 0 discriminator 4
 5832 0038 002A     		cmp	r2, #0
 5833 003a 04D0     		beq	.L355
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 5834              		.loc 1 595 0 is_stmt 1
 5835 003c 596C     		ldr	r1, [r3, #68]
 5836 003e 8022     		mov	r2, #128
 5837 0040 1202     		lsl	r2, r2, #8
 5838 0042 0A43     		orr	r2, r1
 5839 0044 5A64     		str	r2, [r3, #68]
 5840              	.L355:
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 5841              		.loc 1 599 0
 5842 0046 2368     		ldr	r3, [r4]
 5843 0048 1968     		ldr	r1, [r3]
 5844 004a 0122     		mov	r2, #1
 5845 004c 0A43     		orr	r2, r1
 5846 004e 1A60     		str	r2, [r3]
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 5847              		.loc 1 603 0
 5848 0050 0020     		mov	r0, #0
 5849              		@ sp needed
 5850              	.LVL649:
 5851 0052 10BD     		pop	{r4, pc}
 5852              	.L361:
 5853              		.align	2
 5854              	.L360:
 5855 0054 002C0140 		.word	1073818624
 5856 0058 00400140 		.word	1073823744
 5857 005c 00440140 		.word	1073824768
 5858 0060 00480140 		.word	1073825792
 5859              		.cfi_endproc
 5860              	.LFE48:
 5862              		.section	.text.HAL_TIM_OC_Stop,"ax",%progbits
 5863              		.align	2
 5864              		.global	HAL_TIM_OC_Stop
 5865              		.code	16
 5866              		.thumb_func
 5868              	HAL_TIM_OC_Stop:
 5869              	.LFB49:
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 5870              		.loc 1 617 0
 5871              		.cfi_startproc
 5872              	.LVL650:
 5873 0000 10B5     		push	{r4, lr}
 5874              	.LCFI52:
 5875              		.cfi_def_cfa_offset 8
 5876              		.cfi_offset 4, -8
 5877              		.cfi_offset 14, -4
 5878 0002 041C     		mov	r4, r0
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 5879              		.loc 1 622 0
 5880 0004 0068     		ldr	r0, [r0]
 5881              	.LVL651:
 5882 0006 0022     		mov	r2, #0
 5883 0008 FFF7FEFF 		bl	TIM_CCxChannelCmd
ARM GAS  /tmp/ccNBoJ9q.s 			page 211


 5884              	.LVL652:
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 5885              		.loc 1 624 0
 5886 000c 2368     		ldr	r3, [r4]
 5887 000e 194A     		ldr	r2, .L370
 5888 0010 9342     		cmp	r3, r2
 5889 0012 0AD0     		beq	.L366
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 5890              		.loc 1 624 0 is_stmt 0 discriminator 2
 5891 0014 184A     		ldr	r2, .L370+4
 5892 0016 9342     		cmp	r3, r2
 5893 0018 09D0     		beq	.L367
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 5894              		.loc 1 624 0 discriminator 1
 5895 001a 184A     		ldr	r2, .L370+8
 5896 001c 9342     		cmp	r3, r2
 5897 001e 08D0     		beq	.L368
 5898 0020 174A     		ldr	r2, .L370+12
 5899 0022 9342     		cmp	r3, r2
 5900 0024 07D1     		bne	.L369
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 5901              		.loc 1 624 0
 5902 0026 0122     		mov	r2, #1
 5903 0028 06E0     		b	.L363
 5904              	.L366:
 5905 002a 0122     		mov	r2, #1
 5906 002c 04E0     		b	.L363
 5907              	.L367:
 5908 002e 0122     		mov	r2, #1
 5909 0030 02E0     		b	.L363
 5910              	.L368:
 5911 0032 0122     		mov	r2, #1
 5912 0034 00E0     		b	.L363
 5913              	.L369:
 5914 0036 0022     		mov	r2, #0
 5915              	.L363:
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 5916              		.loc 1 624 0 discriminator 4
 5917 0038 002A     		cmp	r2, #0
 5918 003a 0BD0     		beq	.L364
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 5919              		.loc 1 627 0 is_stmt 1
 5920 003c 196A     		ldr	r1, [r3, #32]
 5921 003e 114A     		ldr	r2, .L370+16
 5922 0040 1142     		tst	r1, r2
 5923 0042 07D1     		bne	.L364
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 5924              		.loc 1 627 0 is_stmt 0 discriminator 1
 5925 0044 196A     		ldr	r1, [r3, #32]
 5926 0046 104A     		ldr	r2, .L370+20
 5927 0048 1142     		tst	r1, r2
 5928 004a 03D1     		bne	.L364
 5929 004c 596C     		ldr	r1, [r3, #68]
 5930 004e 0F4A     		ldr	r2, .L370+24
 5931 0050 0A40     		and	r2, r1
 5932 0052 5A64     		str	r2, [r3, #68]
 5933              	.L364:
ARM GAS  /tmp/ccNBoJ9q.s 			page 212


 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 5934              		.loc 1 631 0 is_stmt 1
 5935 0054 2368     		ldr	r3, [r4]
 5936 0056 196A     		ldr	r1, [r3, #32]
 5937 0058 0A4A     		ldr	r2, .L370+16
 5938 005a 1142     		tst	r1, r2
 5939 005c 07D1     		bne	.L365
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 5940              		.loc 1 631 0 is_stmt 0 discriminator 1
 5941 005e 196A     		ldr	r1, [r3, #32]
 5942 0060 094A     		ldr	r2, .L370+20
 5943 0062 1142     		tst	r1, r2
 5944 0064 03D1     		bne	.L365
 5945 0066 1A68     		ldr	r2, [r3]
 5946 0068 0121     		mov	r1, #1
 5947 006a 8A43     		bic	r2, r1
 5948 006c 1A60     		str	r2, [r3]
 5949              	.L365:
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 5950              		.loc 1 635 0 is_stmt 1
 5951 006e 0020     		mov	r0, #0
 5952              		@ sp needed
 5953              	.LVL653:
 5954 0070 10BD     		pop	{r4, pc}
 5955              	.L371:
 5956 0072 C046     		.align	2
 5957              	.L370:
 5958 0074 002C0140 		.word	1073818624
 5959 0078 00400140 		.word	1073823744
 5960 007c 00440140 		.word	1073824768
 5961 0080 00480140 		.word	1073825792
 5962 0084 11110000 		.word	4369
 5963 0088 44040000 		.word	1092
 5964 008c FF7FFFFF 		.word	-32769
 5965              		.cfi_endproc
 5966              	.LFE49:
 5968              		.section	.text.HAL_TIM_OC_Start_IT,"ax",%progbits
 5969              		.align	2
 5970              		.global	HAL_TIM_OC_Start_IT
 5971              		.code	16
 5972              		.thumb_func
 5974              	HAL_TIM_OC_Start_IT:
 5975              	.LFB50:
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 5976              		.loc 1 649 0
 5977              		.cfi_startproc
 5978              	.LVL654:
 5979 0000 10B5     		push	{r4, lr}
 5980              	.LCFI53:
 5981              		.cfi_def_cfa_offset 8
 5982              		.cfi_offset 4, -8
 5983              		.cfi_offset 14, -4
 5984 0002 041C     		mov	r4, r0
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 5985              		.loc 1 653 0
 5986 0004 0429     		cmp	r1, #4
 5987 0006 0ED0     		beq	.L374
ARM GAS  /tmp/ccNBoJ9q.s 			page 213


 5988 0008 02D8     		bhi	.L375
 5989 000a 0029     		cmp	r1, #0
 5990 000c 05D0     		beq	.L376
 5991 000e 1BE0     		b	.L373
 5992              	.L375:
 5993 0010 0829     		cmp	r1, #8
 5994 0012 0ED0     		beq	.L377
 5995 0014 0C29     		cmp	r1, #12
 5996 0016 12D0     		beq	.L378
 5997 0018 16E0     		b	.L373
 5998              	.L376:
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 5999              		.loc 1 658 0
 6000 001a 0368     		ldr	r3, [r0]
 6001 001c D868     		ldr	r0, [r3, #12]
 6002              	.LVL655:
 6003 001e 0222     		mov	r2, #2
 6004 0020 0243     		orr	r2, r0
 6005 0022 DA60     		str	r2, [r3, #12]
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6006              		.loc 1 660 0
 6007 0024 10E0     		b	.L373
 6008              	.LVL656:
 6009              	.L374:
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 6010              		.loc 1 665 0
 6011 0026 0368     		ldr	r3, [r0]
 6012 0028 D868     		ldr	r0, [r3, #12]
 6013              	.LVL657:
 6014 002a 0422     		mov	r2, #4
 6015 002c 0243     		orr	r2, r0
 6016 002e DA60     		str	r2, [r3, #12]
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6017              		.loc 1 667 0
 6018 0030 0AE0     		b	.L373
 6019              	.LVL658:
 6020              	.L377:
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 6021              		.loc 1 672 0
 6022 0032 0368     		ldr	r3, [r0]
 6023 0034 D868     		ldr	r0, [r3, #12]
 6024              	.LVL659:
 6025 0036 0822     		mov	r2, #8
 6026 0038 0243     		orr	r2, r0
 6027 003a DA60     		str	r2, [r3, #12]
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6028              		.loc 1 674 0
 6029 003c 04E0     		b	.L373
 6030              	.LVL660:
 6031              	.L378:
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 6032              		.loc 1 679 0
 6033 003e 0368     		ldr	r3, [r0]
 6034 0040 D868     		ldr	r0, [r3, #12]
 6035              	.LVL661:
 6036 0042 1022     		mov	r2, #16
 6037 0044 0243     		orr	r2, r0
ARM GAS  /tmp/ccNBoJ9q.s 			page 214


 6038 0046 DA60     		str	r2, [r3, #12]
 6039              	.L373:
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 6040              		.loc 1 688 0
 6041 0048 2068     		ldr	r0, [r4]
 6042 004a 0122     		mov	r2, #1
 6043 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 6044              	.LVL662:
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6045              		.loc 1 690 0
 6046 0050 2368     		ldr	r3, [r4]
 6047 0052 114A     		ldr	r2, .L385
 6048 0054 9342     		cmp	r3, r2
 6049 0056 0AD0     		beq	.L381
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6050              		.loc 1 690 0 is_stmt 0 discriminator 2
 6051 0058 104A     		ldr	r2, .L385+4
 6052 005a 9342     		cmp	r3, r2
 6053 005c 09D0     		beq	.L382
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6054              		.loc 1 690 0 discriminator 1
 6055 005e 104A     		ldr	r2, .L385+8
 6056 0060 9342     		cmp	r3, r2
 6057 0062 08D0     		beq	.L383
 6058 0064 0F4A     		ldr	r2, .L385+12
 6059 0066 9342     		cmp	r3, r2
 6060 0068 07D1     		bne	.L384
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6061              		.loc 1 690 0
 6062 006a 0122     		mov	r2, #1
 6063 006c 06E0     		b	.L379
 6064              	.L381:
 6065 006e 0122     		mov	r2, #1
 6066 0070 04E0     		b	.L379
 6067              	.L382:
 6068 0072 0122     		mov	r2, #1
 6069 0074 02E0     		b	.L379
 6070              	.L383:
 6071 0076 0122     		mov	r2, #1
 6072 0078 00E0     		b	.L379
 6073              	.L384:
 6074 007a 0022     		mov	r2, #0
 6075              	.L379:
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6076              		.loc 1 690 0 discriminator 4
 6077 007c 002A     		cmp	r2, #0
 6078 007e 04D0     		beq	.L380
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 6079              		.loc 1 693 0 is_stmt 1
 6080 0080 596C     		ldr	r1, [r3, #68]
 6081 0082 8022     		mov	r2, #128
 6082 0084 1202     		lsl	r2, r2, #8
 6083 0086 0A43     		orr	r2, r1
 6084 0088 5A64     		str	r2, [r3, #68]
 6085              	.L380:
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 6086              		.loc 1 697 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 215


 6087 008a 2368     		ldr	r3, [r4]
 6088 008c 1968     		ldr	r1, [r3]
 6089 008e 0122     		mov	r2, #1
 6090 0090 0A43     		orr	r2, r1
 6091 0092 1A60     		str	r2, [r3]
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 6092              		.loc 1 701 0
 6093 0094 0020     		mov	r0, #0
 6094              		@ sp needed
 6095              	.LVL663:
 6096 0096 10BD     		pop	{r4, pc}
 6097              	.L386:
 6098              		.align	2
 6099              	.L385:
 6100 0098 002C0140 		.word	1073818624
 6101 009c 00400140 		.word	1073823744
 6102 00a0 00440140 		.word	1073824768
 6103 00a4 00480140 		.word	1073825792
 6104              		.cfi_endproc
 6105              	.LFE50:
 6107              		.section	.text.HAL_TIM_OC_Stop_IT,"ax",%progbits
 6108              		.align	2
 6109              		.global	HAL_TIM_OC_Stop_IT
 6110              		.code	16
 6111              		.thumb_func
 6113              	HAL_TIM_OC_Stop_IT:
 6114              	.LFB51:
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 6115              		.loc 1 715 0
 6116              		.cfi_startproc
 6117              	.LVL664:
 6118 0000 10B5     		push	{r4, lr}
 6119              	.LCFI54:
 6120              		.cfi_def_cfa_offset 8
 6121              		.cfi_offset 4, -8
 6122              		.cfi_offset 14, -4
 6123 0002 041C     		mov	r4, r0
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 6124              		.loc 1 719 0
 6125 0004 0429     		cmp	r1, #4
 6126 0006 0ED0     		beq	.L389
 6127 0008 02D8     		bhi	.L390
 6128 000a 0029     		cmp	r1, #0
 6129 000c 05D0     		beq	.L391
 6130 000e 1BE0     		b	.L388
 6131              	.L390:
 6132 0010 0829     		cmp	r1, #8
 6133 0012 0ED0     		beq	.L392
 6134 0014 0C29     		cmp	r1, #12
 6135 0016 12D0     		beq	.L393
 6136 0018 16E0     		b	.L388
 6137              	.L391:
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 6138              		.loc 1 724 0
 6139 001a 0368     		ldr	r3, [r0]
 6140 001c DA68     		ldr	r2, [r3, #12]
 6141 001e 0220     		mov	r0, #2
ARM GAS  /tmp/ccNBoJ9q.s 			page 216


 6142              	.LVL665:
 6143 0020 8243     		bic	r2, r0
 6144 0022 DA60     		str	r2, [r3, #12]
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6145              		.loc 1 726 0
 6146 0024 10E0     		b	.L388
 6147              	.LVL666:
 6148              	.L389:
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 6149              		.loc 1 731 0
 6150 0026 0368     		ldr	r3, [r0]
 6151 0028 DA68     		ldr	r2, [r3, #12]
 6152 002a 0420     		mov	r0, #4
 6153              	.LVL667:
 6154 002c 8243     		bic	r2, r0
 6155 002e DA60     		str	r2, [r3, #12]
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6156              		.loc 1 733 0
 6157 0030 0AE0     		b	.L388
 6158              	.LVL668:
 6159              	.L392:
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 6160              		.loc 1 738 0
 6161 0032 0368     		ldr	r3, [r0]
 6162 0034 DA68     		ldr	r2, [r3, #12]
 6163 0036 0820     		mov	r0, #8
 6164              	.LVL669:
 6165 0038 8243     		bic	r2, r0
 6166 003a DA60     		str	r2, [r3, #12]
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6167              		.loc 1 740 0
 6168 003c 04E0     		b	.L388
 6169              	.LVL670:
 6170              	.L393:
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 6171              		.loc 1 745 0
 6172 003e 0368     		ldr	r3, [r0]
 6173 0040 DA68     		ldr	r2, [r3, #12]
 6174 0042 1020     		mov	r0, #16
 6175              	.LVL671:
 6176 0044 8243     		bic	r2, r0
 6177 0046 DA60     		str	r2, [r3, #12]
 6178              	.L388:
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 6179              		.loc 1 754 0
 6180 0048 2068     		ldr	r0, [r4]
 6181 004a 0022     		mov	r2, #0
 6182 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 6183              	.LVL672:
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6184              		.loc 1 756 0
 6185 0050 2368     		ldr	r3, [r4]
 6186 0052 194A     		ldr	r2, .L401
 6187 0054 9342     		cmp	r3, r2
 6188 0056 0AD0     		beq	.L397
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6189              		.loc 1 756 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccNBoJ9q.s 			page 217


 6190 0058 184A     		ldr	r2, .L401+4
 6191 005a 9342     		cmp	r3, r2
 6192 005c 09D0     		beq	.L398
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6193              		.loc 1 756 0 discriminator 1
 6194 005e 184A     		ldr	r2, .L401+8
 6195 0060 9342     		cmp	r3, r2
 6196 0062 08D0     		beq	.L399
 6197 0064 174A     		ldr	r2, .L401+12
 6198 0066 9342     		cmp	r3, r2
 6199 0068 07D1     		bne	.L400
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6200              		.loc 1 756 0
 6201 006a 0122     		mov	r2, #1
 6202 006c 06E0     		b	.L394
 6203              	.L397:
 6204 006e 0122     		mov	r2, #1
 6205 0070 04E0     		b	.L394
 6206              	.L398:
 6207 0072 0122     		mov	r2, #1
 6208 0074 02E0     		b	.L394
 6209              	.L399:
 6210 0076 0122     		mov	r2, #1
 6211 0078 00E0     		b	.L394
 6212              	.L400:
 6213 007a 0022     		mov	r2, #0
 6214              	.L394:
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6215              		.loc 1 756 0 discriminator 4
 6216 007c 002A     		cmp	r2, #0
 6217 007e 0BD0     		beq	.L395
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6218              		.loc 1 759 0 is_stmt 1
 6219 0080 196A     		ldr	r1, [r3, #32]
 6220 0082 114A     		ldr	r2, .L401+16
 6221 0084 1142     		tst	r1, r2
 6222 0086 07D1     		bne	.L395
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6223              		.loc 1 759 0 is_stmt 0 discriminator 1
 6224 0088 196A     		ldr	r1, [r3, #32]
 6225 008a 104A     		ldr	r2, .L401+20
 6226 008c 1142     		tst	r1, r2
 6227 008e 03D1     		bne	.L395
 6228 0090 596C     		ldr	r1, [r3, #68]
 6229 0092 0F4A     		ldr	r2, .L401+24
 6230 0094 0A40     		and	r2, r1
 6231 0096 5A64     		str	r2, [r3, #68]
 6232              	.L395:
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6233              		.loc 1 763 0 is_stmt 1
 6234 0098 2368     		ldr	r3, [r4]
 6235 009a 196A     		ldr	r1, [r3, #32]
 6236 009c 0A4A     		ldr	r2, .L401+16
 6237 009e 1142     		tst	r1, r2
 6238 00a0 07D1     		bne	.L396
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6239              		.loc 1 763 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccNBoJ9q.s 			page 218


 6240 00a2 196A     		ldr	r1, [r3, #32]
 6241 00a4 094A     		ldr	r2, .L401+20
 6242 00a6 1142     		tst	r1, r2
 6243 00a8 03D1     		bne	.L396
 6244 00aa 1A68     		ldr	r2, [r3]
 6245 00ac 0121     		mov	r1, #1
 6246 00ae 8A43     		bic	r2, r1
 6247 00b0 1A60     		str	r2, [r3]
 6248              	.L396:
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 6249              		.loc 1 767 0 is_stmt 1
 6250 00b2 0020     		mov	r0, #0
 6251              		@ sp needed
 6252              	.LVL673:
 6253 00b4 10BD     		pop	{r4, pc}
 6254              	.L402:
 6255 00b6 C046     		.align	2
 6256              	.L401:
 6257 00b8 002C0140 		.word	1073818624
 6258 00bc 00400140 		.word	1073823744
 6259 00c0 00440140 		.word	1073824768
 6260 00c4 00480140 		.word	1073825792
 6261 00c8 11110000 		.word	4369
 6262 00cc 44040000 		.word	1092
 6263 00d0 FF7FFFFF 		.word	-32769
 6264              		.cfi_endproc
 6265              	.LFE51:
 6267              		.section	.text.HAL_TIM_OC_Start_DMA,"ax",%progbits
 6268              		.align	2
 6269              		.global	HAL_TIM_OC_Start_DMA
 6270              		.code	16
 6271              		.thumb_func
 6273              	HAL_TIM_OC_Start_DMA:
 6274              	.LFB52:
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 6275              		.loc 1 783 0
 6276              		.cfi_startproc
 6277              	.LVL674:
 6278 0000 70B5     		push	{r4, r5, r6, lr}
 6279              	.LCFI55:
 6280              		.cfi_def_cfa_offset 16
 6281              		.cfi_offset 4, -16
 6282              		.cfi_offset 5, -12
 6283              		.cfi_offset 6, -8
 6284              		.cfi_offset 14, -4
 6285 0002 041C     		mov	r4, r0
 6286 0004 0D1C     		mov	r5, r1
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 6287              		.loc 1 787 0
 6288 0006 3D20     		mov	r0, #61
 6289              	.LVL675:
 6290 0008 205C     		ldrb	r0, [r4, r0]
 6291 000a 0228     		cmp	r0, #2
 6292 000c 00D1     		bne	.LCB6324
 6293 000e 8EE0     		b	.L415	@long jump
 6294              	.LCB6324:
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
ARM GAS  /tmp/ccNBoJ9q.s 			page 219


 6295              		.loc 1 791 0
 6296 0010 3D21     		mov	r1, #61
 6297              	.LVL676:
 6298 0012 615C     		ldrb	r1, [r4, r1]
 6299 0014 0129     		cmp	r1, #1
 6300 0016 07D1     		bne	.L405
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(((uint32_t)pData == 0U ) && (Length > 0U))
 6301              		.loc 1 793 0
 6302 0018 002A     		cmp	r2, #0
 6303 001a 02D1     		bne	.L406
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(((uint32_t)pData == 0U ) && (Length > 0U))
 6304              		.loc 1 793 0 is_stmt 0 discriminator 1
 6305 001c 002B     		cmp	r3, #0
 6306 001e 00D0     		beq	.LCB6334
 6307 0020 87E0     		b	.L416	@long jump
 6308              	.LCB6334:
 6309              	.L406:
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 6310              		.loc 1 799 0 is_stmt 1
 6311 0022 0220     		mov	r0, #2
 6312 0024 3D21     		mov	r1, #61
 6313 0026 6054     		strb	r0, [r4, r1]
 6314              	.L405:
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 6315              		.loc 1 802 0
 6316 0028 042D     		cmp	r5, #4
 6317 002a 1CD0     		beq	.L408
 6318 002c 02D8     		bhi	.L409
 6319 002e 002D     		cmp	r5, #0
 6320 0030 05D0     		beq	.L410
 6321 0032 53E0     		b	.L407
 6322              	.L409:
 6323 0034 082D     		cmp	r5, #8
 6324 0036 2AD0     		beq	.L411
 6325 0038 0C2D     		cmp	r5, #12
 6326 003a 3CD0     		beq	.L412
 6327 003c 4EE0     		b	.L407
 6328              	.L410:
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 6329              		.loc 1 807 0
 6330 003e 616A     		ldr	r1, [r4, #36]
 6331 0040 3D48     		ldr	r0, .L421
 6332 0042 8862     		str	r0, [r1, #40]
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 6333              		.loc 1 810 0
 6334 0044 616A     		ldr	r1, [r4, #36]
 6335 0046 3D48     		ldr	r0, .L421+4
 6336 0048 0863     		str	r0, [r1, #48]
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1
 6337              		.loc 1 813 0
 6338 004a 2668     		ldr	r6, [r4]
 6339 004c 3436     		add	r6, r6, #52
 6340 004e 606A     		ldr	r0, [r4, #36]
 6341 0050 111C     		mov	r1, r2
 6342 0052 321C     		mov	r2, r6
 6343              	.LVL677:
 6344 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
ARM GAS  /tmp/ccNBoJ9q.s 			page 220


 6345              	.LVL678:
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 6346              		.loc 1 816 0
 6347 0058 2368     		ldr	r3, [r4]
 6348 005a D968     		ldr	r1, [r3, #12]
 6349 005c 8022     		mov	r2, #128
 6350 005e 9200     		lsl	r2, r2, #2
 6351 0060 0A43     		orr	r2, r1
 6352 0062 DA60     		str	r2, [r3, #12]
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6353              		.loc 1 818 0
 6354 0064 3AE0     		b	.L407
 6355              	.LVL679:
 6356              	.L408:
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 6357              		.loc 1 823 0
 6358 0066 A16A     		ldr	r1, [r4, #40]
 6359 0068 3348     		ldr	r0, .L421
 6360 006a 8862     		str	r0, [r1, #40]
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 6361              		.loc 1 826 0
 6362 006c A16A     		ldr	r1, [r4, #40]
 6363 006e 3348     		ldr	r0, .L421+4
 6364 0070 0863     		str	r0, [r1, #48]
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2
 6365              		.loc 1 829 0
 6366 0072 2668     		ldr	r6, [r4]
 6367 0074 3836     		add	r6, r6, #56
 6368 0076 A06A     		ldr	r0, [r4, #40]
 6369 0078 111C     		mov	r1, r2
 6370 007a 321C     		mov	r2, r6
 6371              	.LVL680:
 6372 007c FFF7FEFF 		bl	HAL_DMA_Start_IT
 6373              	.LVL681:
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 6374              		.loc 1 832 0
 6375 0080 2368     		ldr	r3, [r4]
 6376 0082 D968     		ldr	r1, [r3, #12]
 6377 0084 8022     		mov	r2, #128
 6378 0086 D200     		lsl	r2, r2, #3
 6379 0088 0A43     		orr	r2, r1
 6380 008a DA60     		str	r2, [r3, #12]
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6381              		.loc 1 834 0
 6382 008c 26E0     		b	.L407
 6383              	.LVL682:
 6384              	.L411:
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 6385              		.loc 1 839 0
 6386 008e E16A     		ldr	r1, [r4, #44]
 6387 0090 2948     		ldr	r0, .L421
 6388 0092 8862     		str	r0, [r1, #40]
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 6389              		.loc 1 842 0
 6390 0094 E16A     		ldr	r1, [r4, #44]
 6391 0096 2948     		ldr	r0, .L421+4
 6392 0098 0863     		str	r0, [r1, #48]
ARM GAS  /tmp/ccNBoJ9q.s 			page 221


 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3
 6393              		.loc 1 845 0
 6394 009a 2668     		ldr	r6, [r4]
 6395 009c 3C36     		add	r6, r6, #60
 6396 009e E06A     		ldr	r0, [r4, #44]
 6397 00a0 111C     		mov	r1, r2
 6398 00a2 321C     		mov	r2, r6
 6399              	.LVL683:
 6400 00a4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6401              	.LVL684:
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 6402              		.loc 1 848 0
 6403 00a8 2368     		ldr	r3, [r4]
 6404 00aa D968     		ldr	r1, [r3, #12]
 6405 00ac 8022     		mov	r2, #128
 6406 00ae 1201     		lsl	r2, r2, #4
 6407 00b0 0A43     		orr	r2, r1
 6408 00b2 DA60     		str	r2, [r3, #12]
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6409              		.loc 1 850 0
 6410 00b4 12E0     		b	.L407
 6411              	.LVL685:
 6412              	.L412:
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 6413              		.loc 1 855 0
 6414 00b6 216B     		ldr	r1, [r4, #48]
 6415 00b8 1F48     		ldr	r0, .L421
 6416 00ba 8862     		str	r0, [r1, #40]
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 6417              		.loc 1 858 0
 6418 00bc 216B     		ldr	r1, [r4, #48]
 6419 00be 1F48     		ldr	r0, .L421+4
 6420 00c0 0863     		str	r0, [r1, #48]
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4
 6421              		.loc 1 861 0
 6422 00c2 2668     		ldr	r6, [r4]
 6423 00c4 4036     		add	r6, r6, #64
 6424 00c6 206B     		ldr	r0, [r4, #48]
 6425 00c8 111C     		mov	r1, r2
 6426 00ca 321C     		mov	r2, r6
 6427              	.LVL686:
 6428 00cc FFF7FEFF 		bl	HAL_DMA_Start_IT
 6429              	.LVL687:
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 6430              		.loc 1 864 0
 6431 00d0 2368     		ldr	r3, [r4]
 6432 00d2 D968     		ldr	r1, [r3, #12]
 6433 00d4 8022     		mov	r2, #128
 6434 00d6 5201     		lsl	r2, r2, #5
 6435 00d8 0A43     		orr	r2, r1
 6436 00da DA60     		str	r2, [r3, #12]
 6437              	.L407:
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 6438              		.loc 1 873 0
 6439 00dc 2068     		ldr	r0, [r4]
 6440 00de 291C     		mov	r1, r5
 6441 00e0 0122     		mov	r2, #1
ARM GAS  /tmp/ccNBoJ9q.s 			page 222


 6442 00e2 FFF7FEFF 		bl	TIM_CCxChannelCmd
 6443              	.LVL688:
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6444              		.loc 1 875 0
 6445 00e6 2368     		ldr	r3, [r4]
 6446 00e8 154A     		ldr	r2, .L421+8
 6447 00ea 9342     		cmp	r3, r2
 6448 00ec 0AD0     		beq	.L417
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6449              		.loc 1 875 0 is_stmt 0 discriminator 2
 6450 00ee 154A     		ldr	r2, .L421+12
 6451 00f0 9342     		cmp	r3, r2
 6452 00f2 09D0     		beq	.L418
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6453              		.loc 1 875 0 discriminator 1
 6454 00f4 144A     		ldr	r2, .L421+16
 6455 00f6 9342     		cmp	r3, r2
 6456 00f8 08D0     		beq	.L419
 6457 00fa 144A     		ldr	r2, .L421+20
 6458 00fc 9342     		cmp	r3, r2
 6459 00fe 07D1     		bne	.L420
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6460              		.loc 1 875 0
 6461 0100 0122     		mov	r2, #1
 6462 0102 06E0     		b	.L413
 6463              	.L417:
 6464 0104 0122     		mov	r2, #1
 6465 0106 04E0     		b	.L413
 6466              	.L418:
 6467 0108 0122     		mov	r2, #1
 6468 010a 02E0     		b	.L413
 6469              	.L419:
 6470 010c 0122     		mov	r2, #1
 6471 010e 00E0     		b	.L413
 6472              	.L420:
 6473 0110 0022     		mov	r2, #0
 6474              	.L413:
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6475              		.loc 1 875 0 discriminator 4
 6476 0112 002A     		cmp	r2, #0
 6477 0114 04D0     		beq	.L414
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 6478              		.loc 1 878 0 is_stmt 1
 6479 0116 596C     		ldr	r1, [r3, #68]
 6480 0118 8022     		mov	r2, #128
 6481 011a 1202     		lsl	r2, r2, #8
 6482 011c 0A43     		orr	r2, r1
 6483 011e 5A64     		str	r2, [r3, #68]
 6484              	.L414:
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 6485              		.loc 1 882 0
 6486 0120 2368     		ldr	r3, [r4]
 6487 0122 1968     		ldr	r1, [r3]
 6488 0124 0122     		mov	r2, #1
 6489 0126 0A43     		orr	r2, r1
 6490 0128 1A60     		str	r2, [r3]
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
ARM GAS  /tmp/ccNBoJ9q.s 			page 223


 6491              		.loc 1 885 0
 6492 012a 0020     		mov	r0, #0
 6493 012c 02E0     		b	.L404
 6494              	.LVL689:
 6495              	.L415:
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
 6496              		.loc 1 789 0
 6497 012e 0220     		mov	r0, #2
 6498 0130 00E0     		b	.L404
 6499              	.LVL690:
 6500              	.L416:
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
 6501              		.loc 1 795 0
 6502 0132 0120     		mov	r0, #1
 6503              	.LVL691:
 6504              	.L404:
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 6505              		.loc 1 886 0
 6506              		@ sp needed
 6507              	.LVL692:
 6508              	.LVL693:
 6509 0134 70BD     		pop	{r4, r5, r6, pc}
 6510              	.L422:
 6511 0136 C046     		.align	2
 6512              	.L421:
 6513 0138 00000000 		.word	TIM_DMADelayPulseCplt
 6514 013c 00000000 		.word	TIM_DMAError
 6515 0140 002C0140 		.word	1073818624
 6516 0144 00400140 		.word	1073823744
 6517 0148 00440140 		.word	1073824768
 6518 014c 00480140 		.word	1073825792
 6519              		.cfi_endproc
 6520              	.LFE52:
 6522              		.section	.text.HAL_TIM_OC_Stop_DMA,"ax",%progbits
 6523              		.align	2
 6524              		.global	HAL_TIM_OC_Stop_DMA
 6525              		.code	16
 6526              		.thumb_func
 6528              	HAL_TIM_OC_Stop_DMA:
 6529              	.LFB53:
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 6530              		.loc 1 900 0
 6531              		.cfi_startproc
 6532              	.LVL694:
 6533 0000 10B5     		push	{r4, lr}
 6534              	.LCFI56:
 6535              		.cfi_def_cfa_offset 8
 6536              		.cfi_offset 4, -8
 6537              		.cfi_offset 14, -4
 6538 0002 041C     		mov	r4, r0
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 6539              		.loc 1 904 0
 6540 0004 0429     		cmp	r1, #4
 6541 0006 0ED0     		beq	.L425
 6542 0008 02D8     		bhi	.L426
 6543 000a 0029     		cmp	r1, #0
 6544 000c 05D0     		beq	.L427
ARM GAS  /tmp/ccNBoJ9q.s 			page 224


 6545 000e 1BE0     		b	.L424
 6546              	.L426:
 6547 0010 0829     		cmp	r1, #8
 6548 0012 0ED0     		beq	.L428
 6549 0014 0C29     		cmp	r1, #12
 6550 0016 12D0     		beq	.L429
 6551 0018 16E0     		b	.L424
 6552              	.L427:
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 6553              		.loc 1 909 0
 6554 001a 0368     		ldr	r3, [r0]
 6555 001c D868     		ldr	r0, [r3, #12]
 6556              	.LVL695:
 6557 001e 274A     		ldr	r2, .L437
 6558 0020 0240     		and	r2, r0
 6559 0022 DA60     		str	r2, [r3, #12]
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6560              		.loc 1 911 0
 6561 0024 10E0     		b	.L424
 6562              	.LVL696:
 6563              	.L425:
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 6564              		.loc 1 916 0
 6565 0026 0368     		ldr	r3, [r0]
 6566 0028 D868     		ldr	r0, [r3, #12]
 6567              	.LVL697:
 6568 002a 254A     		ldr	r2, .L437+4
 6569 002c 0240     		and	r2, r0
 6570 002e DA60     		str	r2, [r3, #12]
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6571              		.loc 1 918 0
 6572 0030 0AE0     		b	.L424
 6573              	.LVL698:
 6574              	.L428:
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 6575              		.loc 1 923 0
 6576 0032 0368     		ldr	r3, [r0]
 6577 0034 D868     		ldr	r0, [r3, #12]
 6578              	.LVL699:
 6579 0036 234A     		ldr	r2, .L437+8
 6580 0038 0240     		and	r2, r0
 6581 003a DA60     		str	r2, [r3, #12]
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6582              		.loc 1 925 0
 6583 003c 04E0     		b	.L424
 6584              	.LVL700:
 6585              	.L429:
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 6586              		.loc 1 930 0
 6587 003e 0368     		ldr	r3, [r0]
 6588 0040 D868     		ldr	r0, [r3, #12]
 6589              	.LVL701:
 6590 0042 214A     		ldr	r2, .L437+12
 6591 0044 0240     		and	r2, r0
 6592 0046 DA60     		str	r2, [r3, #12]
 6593              	.L424:
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
ARM GAS  /tmp/ccNBoJ9q.s 			page 225


 6594              		.loc 1 939 0
 6595 0048 2068     		ldr	r0, [r4]
 6596 004a 0022     		mov	r2, #0
 6597 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 6598              	.LVL702:
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6599              		.loc 1 941 0
 6600 0050 2368     		ldr	r3, [r4]
 6601 0052 1E4A     		ldr	r2, .L437+16
 6602 0054 9342     		cmp	r3, r2
 6603 0056 0AD0     		beq	.L433
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6604              		.loc 1 941 0 is_stmt 0 discriminator 2
 6605 0058 1D4A     		ldr	r2, .L437+20
 6606 005a 9342     		cmp	r3, r2
 6607 005c 09D0     		beq	.L434
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6608              		.loc 1 941 0 discriminator 1
 6609 005e 1D4A     		ldr	r2, .L437+24
 6610 0060 9342     		cmp	r3, r2
 6611 0062 08D0     		beq	.L435
 6612 0064 1C4A     		ldr	r2, .L437+28
 6613 0066 9342     		cmp	r3, r2
 6614 0068 07D1     		bne	.L436
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6615              		.loc 1 941 0
 6616 006a 0122     		mov	r2, #1
 6617 006c 06E0     		b	.L430
 6618              	.L433:
 6619 006e 0122     		mov	r2, #1
 6620 0070 04E0     		b	.L430
 6621              	.L434:
 6622 0072 0122     		mov	r2, #1
 6623 0074 02E0     		b	.L430
 6624              	.L435:
 6625 0076 0122     		mov	r2, #1
 6626 0078 00E0     		b	.L430
 6627              	.L436:
 6628 007a 0022     		mov	r2, #0
 6629              	.L430:
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6630              		.loc 1 941 0 discriminator 4
 6631 007c 002A     		cmp	r2, #0
 6632 007e 0BD0     		beq	.L431
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6633              		.loc 1 944 0 is_stmt 1
 6634 0080 196A     		ldr	r1, [r3, #32]
 6635 0082 164A     		ldr	r2, .L437+32
 6636 0084 1142     		tst	r1, r2
 6637 0086 07D1     		bne	.L431
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6638              		.loc 1 944 0 is_stmt 0 discriminator 1
 6639 0088 196A     		ldr	r1, [r3, #32]
 6640 008a 154A     		ldr	r2, .L437+36
 6641 008c 1142     		tst	r1, r2
 6642 008e 03D1     		bne	.L431
 6643 0090 596C     		ldr	r1, [r3, #68]
ARM GAS  /tmp/ccNBoJ9q.s 			page 226


 6644 0092 144A     		ldr	r2, .L437+40
 6645 0094 0A40     		and	r2, r1
 6646 0096 5A64     		str	r2, [r3, #68]
 6647              	.L431:
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6648              		.loc 1 948 0 is_stmt 1
 6649 0098 2368     		ldr	r3, [r4]
 6650 009a 196A     		ldr	r1, [r3, #32]
 6651 009c 0F4A     		ldr	r2, .L437+32
 6652 009e 1142     		tst	r1, r2
 6653 00a0 07D1     		bne	.L432
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6654              		.loc 1 948 0 is_stmt 0 discriminator 1
 6655 00a2 196A     		ldr	r1, [r3, #32]
 6656 00a4 0E4A     		ldr	r2, .L437+36
 6657 00a6 1142     		tst	r1, r2
 6658 00a8 03D1     		bne	.L432
 6659 00aa 1A68     		ldr	r2, [r3]
 6660 00ac 0121     		mov	r1, #1
 6661 00ae 8A43     		bic	r2, r1
 6662 00b0 1A60     		str	r2, [r3]
 6663              	.L432:
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 6664              		.loc 1 951 0 is_stmt 1
 6665 00b2 0122     		mov	r2, #1
 6666 00b4 3D23     		mov	r3, #61
 6667 00b6 E254     		strb	r2, [r4, r3]
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 6668              		.loc 1 955 0
 6669 00b8 0020     		mov	r0, #0
 6670              		@ sp needed
 6671              	.LVL703:
 6672 00ba 10BD     		pop	{r4, pc}
 6673              	.L438:
 6674              		.align	2
 6675              	.L437:
 6676 00bc FFFDFFFF 		.word	-513
 6677 00c0 FFFBFFFF 		.word	-1025
 6678 00c4 FFF7FFFF 		.word	-2049
 6679 00c8 FFEFFFFF 		.word	-4097
 6680 00cc 002C0140 		.word	1073818624
 6681 00d0 00400140 		.word	1073823744
 6682 00d4 00440140 		.word	1073824768
 6683 00d8 00480140 		.word	1073825792
 6684 00dc 11110000 		.word	4369
 6685 00e0 44040000 		.word	1092
 6686 00e4 FF7FFFFF 		.word	-32769
 6687              		.cfi_endproc
 6688              	.LFE53:
 6690              		.section	.text.HAL_TIM_PWM_Start,"ax",%progbits
 6691              		.align	2
 6692              		.global	HAL_TIM_PWM_Start
 6693              		.code	16
 6694              		.thumb_func
 6696              	HAL_TIM_PWM_Start:
 6697              	.LFB58:
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
ARM GAS  /tmp/ccNBoJ9q.s 			page 227


 6698              		.loc 1 1092 0
 6699              		.cfi_startproc
 6700              	.LVL704:
 6701 0000 10B5     		push	{r4, lr}
 6702              	.LCFI57:
 6703              		.cfi_def_cfa_offset 8
 6704              		.cfi_offset 4, -8
 6705              		.cfi_offset 14, -4
 6706 0002 041C     		mov	r4, r0
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 6707              		.loc 1 1097 0
 6708 0004 0068     		ldr	r0, [r0]
 6709              	.LVL705:
 6710 0006 0122     		mov	r2, #1
 6711 0008 FFF7FEFF 		bl	TIM_CCxChannelCmd
 6712              	.LVL706:
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6713              		.loc 1 1099 0
 6714 000c 2368     		ldr	r3, [r4]
 6715 000e 114A     		ldr	r2, .L446
 6716 0010 9342     		cmp	r3, r2
 6717 0012 0AD0     		beq	.L442
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6718              		.loc 1 1099 0 is_stmt 0 discriminator 2
 6719 0014 104A     		ldr	r2, .L446+4
 6720 0016 9342     		cmp	r3, r2
 6721 0018 09D0     		beq	.L443
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6722              		.loc 1 1099 0 discriminator 1
 6723 001a 104A     		ldr	r2, .L446+8
 6724 001c 9342     		cmp	r3, r2
 6725 001e 08D0     		beq	.L444
 6726 0020 0F4A     		ldr	r2, .L446+12
 6727 0022 9342     		cmp	r3, r2
 6728 0024 07D1     		bne	.L445
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6729              		.loc 1 1099 0
 6730 0026 0122     		mov	r2, #1
 6731 0028 06E0     		b	.L440
 6732              	.L442:
 6733 002a 0122     		mov	r2, #1
 6734 002c 04E0     		b	.L440
 6735              	.L443:
 6736 002e 0122     		mov	r2, #1
 6737 0030 02E0     		b	.L440
 6738              	.L444:
 6739 0032 0122     		mov	r2, #1
 6740 0034 00E0     		b	.L440
 6741              	.L445:
 6742 0036 0022     		mov	r2, #0
 6743              	.L440:
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6744              		.loc 1 1099 0 discriminator 4
 6745 0038 002A     		cmp	r2, #0
 6746 003a 04D0     		beq	.L441
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 6747              		.loc 1 1102 0 is_stmt 1
ARM GAS  /tmp/ccNBoJ9q.s 			page 228


 6748 003c 596C     		ldr	r1, [r3, #68]
 6749 003e 8022     		mov	r2, #128
 6750 0040 1202     		lsl	r2, r2, #8
 6751 0042 0A43     		orr	r2, r1
 6752 0044 5A64     		str	r2, [r3, #68]
 6753              	.L441:
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 6754              		.loc 1 1106 0
 6755 0046 2368     		ldr	r3, [r4]
 6756 0048 1968     		ldr	r1, [r3]
 6757 004a 0122     		mov	r2, #1
 6758 004c 0A43     		orr	r2, r1
 6759 004e 1A60     		str	r2, [r3]
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 6760              		.loc 1 1110 0
 6761 0050 0020     		mov	r0, #0
 6762              		@ sp needed
 6763              	.LVL707:
 6764 0052 10BD     		pop	{r4, pc}
 6765              	.L447:
 6766              		.align	2
 6767              	.L446:
 6768 0054 002C0140 		.word	1073818624
 6769 0058 00400140 		.word	1073823744
 6770 005c 00440140 		.word	1073824768
 6771 0060 00480140 		.word	1073825792
 6772              		.cfi_endproc
 6773              	.LFE58:
 6775              		.section	.text.HAL_TIM_PWM_Stop,"ax",%progbits
 6776              		.align	2
 6777              		.global	HAL_TIM_PWM_Stop
 6778              		.code	16
 6779              		.thumb_func
 6781              	HAL_TIM_PWM_Stop:
 6782              	.LFB59:
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 6783              		.loc 1 1124 0
 6784              		.cfi_startproc
 6785              	.LVL708:
 6786 0000 10B5     		push	{r4, lr}
 6787              	.LCFI58:
 6788              		.cfi_def_cfa_offset 8
 6789              		.cfi_offset 4, -8
 6790              		.cfi_offset 14, -4
 6791 0002 041C     		mov	r4, r0
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 6792              		.loc 1 1129 0
 6793 0004 0068     		ldr	r0, [r0]
 6794              	.LVL709:
 6795 0006 0022     		mov	r2, #0
 6796 0008 FFF7FEFF 		bl	TIM_CCxChannelCmd
 6797              	.LVL710:
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6798              		.loc 1 1131 0
 6799 000c 2368     		ldr	r3, [r4]
 6800 000e 1A4A     		ldr	r2, .L456
 6801 0010 9342     		cmp	r3, r2
ARM GAS  /tmp/ccNBoJ9q.s 			page 229


 6802 0012 0AD0     		beq	.L452
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6803              		.loc 1 1131 0 is_stmt 0 discriminator 2
 6804 0014 194A     		ldr	r2, .L456+4
 6805 0016 9342     		cmp	r3, r2
 6806 0018 09D0     		beq	.L453
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6807              		.loc 1 1131 0 discriminator 1
 6808 001a 194A     		ldr	r2, .L456+8
 6809 001c 9342     		cmp	r3, r2
 6810 001e 08D0     		beq	.L454
 6811 0020 184A     		ldr	r2, .L456+12
 6812 0022 9342     		cmp	r3, r2
 6813 0024 07D1     		bne	.L455
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6814              		.loc 1 1131 0
 6815 0026 0122     		mov	r2, #1
 6816 0028 06E0     		b	.L449
 6817              	.L452:
 6818 002a 0122     		mov	r2, #1
 6819 002c 04E0     		b	.L449
 6820              	.L453:
 6821 002e 0122     		mov	r2, #1
 6822 0030 02E0     		b	.L449
 6823              	.L454:
 6824 0032 0122     		mov	r2, #1
 6825 0034 00E0     		b	.L449
 6826              	.L455:
 6827 0036 0022     		mov	r2, #0
 6828              	.L449:
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6829              		.loc 1 1131 0 discriminator 4
 6830 0038 002A     		cmp	r2, #0
 6831 003a 0BD0     		beq	.L450
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6832              		.loc 1 1134 0 is_stmt 1
 6833 003c 196A     		ldr	r1, [r3, #32]
 6834 003e 124A     		ldr	r2, .L456+16
 6835 0040 1142     		tst	r1, r2
 6836 0042 07D1     		bne	.L450
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6837              		.loc 1 1134 0 is_stmt 0 discriminator 1
 6838 0044 196A     		ldr	r1, [r3, #32]
 6839 0046 114A     		ldr	r2, .L456+20
 6840 0048 1142     		tst	r1, r2
 6841 004a 03D1     		bne	.L450
 6842 004c 596C     		ldr	r1, [r3, #68]
 6843 004e 104A     		ldr	r2, .L456+24
 6844 0050 0A40     		and	r2, r1
 6845 0052 5A64     		str	r2, [r3, #68]
 6846              	.L450:
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6847              		.loc 1 1138 0 is_stmt 1
 6848 0054 2368     		ldr	r3, [r4]
 6849 0056 196A     		ldr	r1, [r3, #32]
 6850 0058 0B4A     		ldr	r2, .L456+16
 6851 005a 1142     		tst	r1, r2
ARM GAS  /tmp/ccNBoJ9q.s 			page 230


 6852 005c 07D1     		bne	.L451
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6853              		.loc 1 1138 0 is_stmt 0 discriminator 1
 6854 005e 196A     		ldr	r1, [r3, #32]
 6855 0060 0A4A     		ldr	r2, .L456+20
 6856 0062 1142     		tst	r1, r2
 6857 0064 03D1     		bne	.L451
 6858 0066 1A68     		ldr	r2, [r3]
 6859 0068 0121     		mov	r1, #1
 6860 006a 8A43     		bic	r2, r1
 6861 006c 1A60     		str	r2, [r3]
 6862              	.L451:
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 6863              		.loc 1 1141 0 is_stmt 1
 6864 006e 0122     		mov	r2, #1
 6865 0070 3D23     		mov	r3, #61
 6866 0072 E254     		strb	r2, [r4, r3]
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 6867              		.loc 1 1145 0
 6868 0074 0020     		mov	r0, #0
 6869              		@ sp needed
 6870              	.LVL711:
 6871 0076 10BD     		pop	{r4, pc}
 6872              	.L457:
 6873              		.align	2
 6874              	.L456:
 6875 0078 002C0140 		.word	1073818624
 6876 007c 00400140 		.word	1073823744
 6877 0080 00440140 		.word	1073824768
 6878 0084 00480140 		.word	1073825792
 6879 0088 11110000 		.word	4369
 6880 008c 44040000 		.word	1092
 6881 0090 FF7FFFFF 		.word	-32769
 6882              		.cfi_endproc
 6883              	.LFE59:
 6885              		.section	.text.HAL_TIM_PWM_Start_IT,"ax",%progbits
 6886              		.align	2
 6887              		.global	HAL_TIM_PWM_Start_IT
 6888              		.code	16
 6889              		.thumb_func
 6891              	HAL_TIM_PWM_Start_IT:
 6892              	.LFB60:
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 6893              		.loc 1 1159 0
 6894              		.cfi_startproc
 6895              	.LVL712:
 6896 0000 10B5     		push	{r4, lr}
 6897              	.LCFI59:
 6898              		.cfi_def_cfa_offset 8
 6899              		.cfi_offset 4, -8
 6900              		.cfi_offset 14, -4
 6901 0002 041C     		mov	r4, r0
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 6902              		.loc 1 1163 0
 6903 0004 0429     		cmp	r1, #4
 6904 0006 0ED0     		beq	.L460
 6905 0008 02D8     		bhi	.L461
ARM GAS  /tmp/ccNBoJ9q.s 			page 231


 6906 000a 0029     		cmp	r1, #0
 6907 000c 05D0     		beq	.L462
 6908 000e 1BE0     		b	.L459
 6909              	.L461:
 6910 0010 0829     		cmp	r1, #8
 6911 0012 0ED0     		beq	.L463
 6912 0014 0C29     		cmp	r1, #12
 6913 0016 12D0     		beq	.L464
 6914 0018 16E0     		b	.L459
 6915              	.L462:
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 6916              		.loc 1 1168 0
 6917 001a 0368     		ldr	r3, [r0]
 6918 001c D868     		ldr	r0, [r3, #12]
 6919              	.LVL713:
 6920 001e 0222     		mov	r2, #2
 6921 0020 0243     		orr	r2, r0
 6922 0022 DA60     		str	r2, [r3, #12]
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6923              		.loc 1 1170 0
 6924 0024 10E0     		b	.L459
 6925              	.LVL714:
 6926              	.L460:
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 6927              		.loc 1 1175 0
 6928 0026 0368     		ldr	r3, [r0]
 6929 0028 D868     		ldr	r0, [r3, #12]
 6930              	.LVL715:
 6931 002a 0422     		mov	r2, #4
 6932 002c 0243     		orr	r2, r0
 6933 002e DA60     		str	r2, [r3, #12]
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6934              		.loc 1 1177 0
 6935 0030 0AE0     		b	.L459
 6936              	.LVL716:
 6937              	.L463:
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 6938              		.loc 1 1182 0
 6939 0032 0368     		ldr	r3, [r0]
 6940 0034 D868     		ldr	r0, [r3, #12]
 6941              	.LVL717:
 6942 0036 0822     		mov	r2, #8
 6943 0038 0243     		orr	r2, r0
 6944 003a DA60     		str	r2, [r3, #12]
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 6945              		.loc 1 1184 0
 6946 003c 04E0     		b	.L459
 6947              	.LVL718:
 6948              	.L464:
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 6949              		.loc 1 1189 0
 6950 003e 0368     		ldr	r3, [r0]
 6951 0040 D868     		ldr	r0, [r3, #12]
 6952              	.LVL719:
 6953 0042 1022     		mov	r2, #16
 6954 0044 0243     		orr	r2, r0
 6955 0046 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccNBoJ9q.s 			page 232


 6956              	.L459:
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 6957              		.loc 1 1198 0
 6958 0048 2068     		ldr	r0, [r4]
 6959 004a 0122     		mov	r2, #1
 6960 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 6961              	.LVL720:
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6962              		.loc 1 1200 0
 6963 0050 2368     		ldr	r3, [r4]
 6964 0052 114A     		ldr	r2, .L471
 6965 0054 9342     		cmp	r3, r2
 6966 0056 0AD0     		beq	.L467
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6967              		.loc 1 1200 0 is_stmt 0 discriminator 2
 6968 0058 104A     		ldr	r2, .L471+4
 6969 005a 9342     		cmp	r3, r2
 6970 005c 09D0     		beq	.L468
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6971              		.loc 1 1200 0 discriminator 1
 6972 005e 104A     		ldr	r2, .L471+8
 6973 0060 9342     		cmp	r3, r2
 6974 0062 08D0     		beq	.L469
 6975 0064 0F4A     		ldr	r2, .L471+12
 6976 0066 9342     		cmp	r3, r2
 6977 0068 07D1     		bne	.L470
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6978              		.loc 1 1200 0
 6979 006a 0122     		mov	r2, #1
 6980 006c 06E0     		b	.L465
 6981              	.L467:
 6982 006e 0122     		mov	r2, #1
 6983 0070 04E0     		b	.L465
 6984              	.L468:
 6985 0072 0122     		mov	r2, #1
 6986 0074 02E0     		b	.L465
 6987              	.L469:
 6988 0076 0122     		mov	r2, #1
 6989 0078 00E0     		b	.L465
 6990              	.L470:
 6991 007a 0022     		mov	r2, #0
 6992              	.L465:
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 6993              		.loc 1 1200 0 discriminator 4
 6994 007c 002A     		cmp	r2, #0
 6995 007e 04D0     		beq	.L466
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 6996              		.loc 1 1203 0 is_stmt 1
 6997 0080 596C     		ldr	r1, [r3, #68]
 6998 0082 8022     		mov	r2, #128
 6999 0084 1202     		lsl	r2, r2, #8
 7000 0086 0A43     		orr	r2, r1
 7001 0088 5A64     		str	r2, [r3, #68]
 7002              	.L466:
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 7003              		.loc 1 1207 0
 7004 008a 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccNBoJ9q.s 			page 233


 7005 008c 1968     		ldr	r1, [r3]
 7006 008e 0122     		mov	r2, #1
 7007 0090 0A43     		orr	r2, r1
 7008 0092 1A60     		str	r2, [r3]
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 7009              		.loc 1 1211 0
 7010 0094 0020     		mov	r0, #0
 7011              		@ sp needed
 7012              	.LVL721:
 7013 0096 10BD     		pop	{r4, pc}
 7014              	.L472:
 7015              		.align	2
 7016              	.L471:
 7017 0098 002C0140 		.word	1073818624
 7018 009c 00400140 		.word	1073823744
 7019 00a0 00440140 		.word	1073824768
 7020 00a4 00480140 		.word	1073825792
 7021              		.cfi_endproc
 7022              	.LFE60:
 7024              		.section	.text.HAL_TIM_PWM_Stop_IT,"ax",%progbits
 7025              		.align	2
 7026              		.global	HAL_TIM_PWM_Stop_IT
 7027              		.code	16
 7028              		.thumb_func
 7030              	HAL_TIM_PWM_Stop_IT:
 7031              	.LFB61:
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 7032              		.loc 1 1225 0
 7033              		.cfi_startproc
 7034              	.LVL722:
 7035 0000 10B5     		push	{r4, lr}
 7036              	.LCFI60:
 7037              		.cfi_def_cfa_offset 8
 7038              		.cfi_offset 4, -8
 7039              		.cfi_offset 14, -4
 7040 0002 041C     		mov	r4, r0
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 7041              		.loc 1 1229 0
 7042 0004 0429     		cmp	r1, #4
 7043 0006 0ED0     		beq	.L475
 7044 0008 02D8     		bhi	.L476
 7045 000a 0029     		cmp	r1, #0
 7046 000c 05D0     		beq	.L477
 7047 000e 1BE0     		b	.L474
 7048              	.L476:
 7049 0010 0829     		cmp	r1, #8
 7050 0012 0ED0     		beq	.L478
 7051 0014 0C29     		cmp	r1, #12
 7052 0016 12D0     		beq	.L479
 7053 0018 16E0     		b	.L474
 7054              	.L477:
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 7055              		.loc 1 1234 0
 7056 001a 0368     		ldr	r3, [r0]
 7057 001c DA68     		ldr	r2, [r3, #12]
 7058 001e 0220     		mov	r0, #2
 7059              	.LVL723:
ARM GAS  /tmp/ccNBoJ9q.s 			page 234


 7060 0020 8243     		bic	r2, r0
 7061 0022 DA60     		str	r2, [r3, #12]
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7062              		.loc 1 1236 0
 7063 0024 10E0     		b	.L474
 7064              	.LVL724:
 7065              	.L475:
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 7066              		.loc 1 1241 0
 7067 0026 0368     		ldr	r3, [r0]
 7068 0028 DA68     		ldr	r2, [r3, #12]
 7069 002a 0420     		mov	r0, #4
 7070              	.LVL725:
 7071 002c 8243     		bic	r2, r0
 7072 002e DA60     		str	r2, [r3, #12]
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7073              		.loc 1 1243 0
 7074 0030 0AE0     		b	.L474
 7075              	.LVL726:
 7076              	.L478:
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 7077              		.loc 1 1248 0
 7078 0032 0368     		ldr	r3, [r0]
 7079 0034 DA68     		ldr	r2, [r3, #12]
 7080 0036 0820     		mov	r0, #8
 7081              	.LVL727:
 7082 0038 8243     		bic	r2, r0
 7083 003a DA60     		str	r2, [r3, #12]
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7084              		.loc 1 1250 0
 7085 003c 04E0     		b	.L474
 7086              	.LVL728:
 7087              	.L479:
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 7088              		.loc 1 1255 0
 7089 003e 0368     		ldr	r3, [r0]
 7090 0040 DA68     		ldr	r2, [r3, #12]
 7091 0042 1020     		mov	r0, #16
 7092              	.LVL729:
 7093 0044 8243     		bic	r2, r0
 7094 0046 DA60     		str	r2, [r3, #12]
 7095              	.L474:
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 7096              		.loc 1 1264 0
 7097 0048 2068     		ldr	r0, [r4]
 7098 004a 0022     		mov	r2, #0
 7099 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 7100              	.LVL730:
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7101              		.loc 1 1266 0
 7102 0050 2368     		ldr	r3, [r4]
 7103 0052 194A     		ldr	r2, .L487
 7104 0054 9342     		cmp	r3, r2
 7105 0056 0AD0     		beq	.L483
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7106              		.loc 1 1266 0 is_stmt 0 discriminator 2
 7107 0058 184A     		ldr	r2, .L487+4
ARM GAS  /tmp/ccNBoJ9q.s 			page 235


 7108 005a 9342     		cmp	r3, r2
 7109 005c 09D0     		beq	.L484
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7110              		.loc 1 1266 0 discriminator 1
 7111 005e 184A     		ldr	r2, .L487+8
 7112 0060 9342     		cmp	r3, r2
 7113 0062 08D0     		beq	.L485
 7114 0064 174A     		ldr	r2, .L487+12
 7115 0066 9342     		cmp	r3, r2
 7116 0068 07D1     		bne	.L486
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7117              		.loc 1 1266 0
 7118 006a 0122     		mov	r2, #1
 7119 006c 06E0     		b	.L480
 7120              	.L483:
 7121 006e 0122     		mov	r2, #1
 7122 0070 04E0     		b	.L480
 7123              	.L484:
 7124 0072 0122     		mov	r2, #1
 7125 0074 02E0     		b	.L480
 7126              	.L485:
 7127 0076 0122     		mov	r2, #1
 7128 0078 00E0     		b	.L480
 7129              	.L486:
 7130 007a 0022     		mov	r2, #0
 7131              	.L480:
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7132              		.loc 1 1266 0 discriminator 4
 7133 007c 002A     		cmp	r2, #0
 7134 007e 0BD0     		beq	.L481
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 7135              		.loc 1 1269 0 is_stmt 1
 7136 0080 196A     		ldr	r1, [r3, #32]
 7137 0082 114A     		ldr	r2, .L487+16
 7138 0084 1142     		tst	r1, r2
 7139 0086 07D1     		bne	.L481
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 7140              		.loc 1 1269 0 is_stmt 0 discriminator 1
 7141 0088 196A     		ldr	r1, [r3, #32]
 7142 008a 104A     		ldr	r2, .L487+20
 7143 008c 1142     		tst	r1, r2
 7144 008e 03D1     		bne	.L481
 7145 0090 596C     		ldr	r1, [r3, #68]
 7146 0092 0F4A     		ldr	r2, .L487+24
 7147 0094 0A40     		and	r2, r1
 7148 0096 5A64     		str	r2, [r3, #68]
 7149              	.L481:
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 7150              		.loc 1 1273 0 is_stmt 1
 7151 0098 2368     		ldr	r3, [r4]
 7152 009a 196A     		ldr	r1, [r3, #32]
 7153 009c 0A4A     		ldr	r2, .L487+16
 7154 009e 1142     		tst	r1, r2
 7155 00a0 07D1     		bne	.L482
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 7156              		.loc 1 1273 0 is_stmt 0 discriminator 1
 7157 00a2 196A     		ldr	r1, [r3, #32]
ARM GAS  /tmp/ccNBoJ9q.s 			page 236


 7158 00a4 094A     		ldr	r2, .L487+20
 7159 00a6 1142     		tst	r1, r2
 7160 00a8 03D1     		bne	.L482
 7161 00aa 1A68     		ldr	r2, [r3]
 7162 00ac 0121     		mov	r1, #1
 7163 00ae 8A43     		bic	r2, r1
 7164 00b0 1A60     		str	r2, [r3]
 7165              	.L482:
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 7166              		.loc 1 1277 0 is_stmt 1
 7167 00b2 0020     		mov	r0, #0
 7168              		@ sp needed
 7169              	.LVL731:
 7170 00b4 10BD     		pop	{r4, pc}
 7171              	.L488:
 7172 00b6 C046     		.align	2
 7173              	.L487:
 7174 00b8 002C0140 		.word	1073818624
 7175 00bc 00400140 		.word	1073823744
 7176 00c0 00440140 		.word	1073824768
 7177 00c4 00480140 		.word	1073825792
 7178 00c8 11110000 		.word	4369
 7179 00cc 44040000 		.word	1092
 7180 00d0 FF7FFFFF 		.word	-32769
 7181              		.cfi_endproc
 7182              	.LFE61:
 7184              		.section	.text.HAL_TIM_PWM_Start_DMA,"ax",%progbits
 7185              		.align	2
 7186              		.global	HAL_TIM_PWM_Start_DMA
 7187              		.code	16
 7188              		.thumb_func
 7190              	HAL_TIM_PWM_Start_DMA:
 7191              	.LFB62:
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 7192              		.loc 1 1293 0
 7193              		.cfi_startproc
 7194              	.LVL732:
 7195 0000 70B5     		push	{r4, r5, r6, lr}
 7196              	.LCFI61:
 7197              		.cfi_def_cfa_offset 16
 7198              		.cfi_offset 4, -16
 7199              		.cfi_offset 5, -12
 7200              		.cfi_offset 6, -8
 7201              		.cfi_offset 14, -4
 7202 0002 041C     		mov	r4, r0
 7203 0004 0D1C     		mov	r5, r1
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 7204              		.loc 1 1297 0
 7205 0006 3D20     		mov	r0, #61
 7206              	.LVL733:
 7207 0008 205C     		ldrb	r0, [r4, r0]
 7208 000a 0228     		cmp	r0, #2
 7209 000c 00D1     		bne	.LCB7295
 7210 000e 8EE0     		b	.L501	@long jump
 7211              	.LCB7295:
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 7212              		.loc 1 1301 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 237


 7213 0010 3D21     		mov	r1, #61
 7214              	.LVL734:
 7215 0012 615C     		ldrb	r1, [r4, r1]
 7216 0014 0129     		cmp	r1, #1
 7217 0016 07D1     		bne	.L491
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(((uint32_t)pData == 0U ) && (Length > 0U))
 7218              		.loc 1 1303 0
 7219 0018 002A     		cmp	r2, #0
 7220 001a 02D1     		bne	.L492
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if(((uint32_t)pData == 0U ) && (Length > 0U))
 7221              		.loc 1 1303 0 is_stmt 0 discriminator 1
 7222 001c 002B     		cmp	r3, #0
 7223 001e 00D0     		beq	.LCB7305
 7224 0020 87E0     		b	.L502	@long jump
 7225              	.LCB7305:
 7226              	.L492:
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 7227              		.loc 1 1309 0 is_stmt 1
 7228 0022 0220     		mov	r0, #2
 7229 0024 3D21     		mov	r1, #61
 7230 0026 6054     		strb	r0, [r4, r1]
 7231              	.L491:
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 7232              		.loc 1 1312 0
 7233 0028 042D     		cmp	r5, #4
 7234 002a 1CD0     		beq	.L494
 7235 002c 02D8     		bhi	.L495
 7236 002e 002D     		cmp	r5, #0
 7237 0030 05D0     		beq	.L496
 7238 0032 53E0     		b	.L493
 7239              	.L495:
 7240 0034 082D     		cmp	r5, #8
 7241 0036 2AD0     		beq	.L497
 7242 0038 0C2D     		cmp	r5, #12
 7243 003a 3CD0     		beq	.L498
 7244 003c 4EE0     		b	.L493
 7245              	.L496:
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 7246              		.loc 1 1317 0
 7247 003e 616A     		ldr	r1, [r4, #36]
 7248 0040 3D48     		ldr	r0, .L507
 7249 0042 8862     		str	r0, [r1, #40]
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 7250              		.loc 1 1320 0
 7251 0044 616A     		ldr	r1, [r4, #36]
 7252 0046 3D48     		ldr	r0, .L507+4
 7253 0048 0863     		str	r0, [r1, #48]
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1
 7254              		.loc 1 1323 0
 7255 004a 2668     		ldr	r6, [r4]
 7256 004c 3436     		add	r6, r6, #52
 7257 004e 606A     		ldr	r0, [r4, #36]
 7258 0050 111C     		mov	r1, r2
 7259 0052 321C     		mov	r2, r6
 7260              	.LVL735:
 7261 0054 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7262              	.LVL736:
ARM GAS  /tmp/ccNBoJ9q.s 			page 238


1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 7263              		.loc 1 1326 0
 7264 0058 2368     		ldr	r3, [r4]
 7265 005a D968     		ldr	r1, [r3, #12]
 7266 005c 8022     		mov	r2, #128
 7267 005e 9200     		lsl	r2, r2, #2
 7268 0060 0A43     		orr	r2, r1
 7269 0062 DA60     		str	r2, [r3, #12]
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7270              		.loc 1 1328 0
 7271 0064 3AE0     		b	.L493
 7272              	.LVL737:
 7273              	.L494:
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 7274              		.loc 1 1333 0
 7275 0066 A16A     		ldr	r1, [r4, #40]
 7276 0068 3348     		ldr	r0, .L507
 7277 006a 8862     		str	r0, [r1, #40]
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 7278              		.loc 1 1336 0
 7279 006c A16A     		ldr	r1, [r4, #40]
 7280 006e 3348     		ldr	r0, .L507+4
 7281 0070 0863     		str	r0, [r1, #48]
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2
 7282              		.loc 1 1339 0
 7283 0072 2668     		ldr	r6, [r4]
 7284 0074 3836     		add	r6, r6, #56
 7285 0076 A06A     		ldr	r0, [r4, #40]
 7286 0078 111C     		mov	r1, r2
 7287 007a 321C     		mov	r2, r6
 7288              	.LVL738:
 7289 007c FFF7FEFF 		bl	HAL_DMA_Start_IT
 7290              	.LVL739:
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 7291              		.loc 1 1342 0
 7292 0080 2368     		ldr	r3, [r4]
 7293 0082 D968     		ldr	r1, [r3, #12]
 7294 0084 8022     		mov	r2, #128
 7295 0086 D200     		lsl	r2, r2, #3
 7296 0088 0A43     		orr	r2, r1
 7297 008a DA60     		str	r2, [r3, #12]
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7298              		.loc 1 1344 0
 7299 008c 26E0     		b	.L493
 7300              	.LVL740:
 7301              	.L497:
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 7302              		.loc 1 1349 0
 7303 008e E16A     		ldr	r1, [r4, #44]
 7304 0090 2948     		ldr	r0, .L507
 7305 0092 8862     		str	r0, [r1, #40]
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 7306              		.loc 1 1352 0
 7307 0094 E16A     		ldr	r1, [r4, #44]
 7308 0096 2948     		ldr	r0, .L507+4
 7309 0098 0863     		str	r0, [r1, #48]
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3
ARM GAS  /tmp/ccNBoJ9q.s 			page 239


 7310              		.loc 1 1355 0
 7311 009a 2668     		ldr	r6, [r4]
 7312 009c 3C36     		add	r6, r6, #60
 7313 009e E06A     		ldr	r0, [r4, #44]
 7314 00a0 111C     		mov	r1, r2
 7315 00a2 321C     		mov	r2, r6
 7316              	.LVL741:
 7317 00a4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7318              	.LVL742:
1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 7319              		.loc 1 1358 0
 7320 00a8 2368     		ldr	r3, [r4]
 7321 00aa D968     		ldr	r1, [r3, #12]
 7322 00ac 8022     		mov	r2, #128
 7323 00ae 1201     		lsl	r2, r2, #4
 7324 00b0 0A43     		orr	r2, r1
 7325 00b2 DA60     		str	r2, [r3, #12]
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7326              		.loc 1 1360 0
 7327 00b4 12E0     		b	.L493
 7328              	.LVL743:
 7329              	.L498:
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 7330              		.loc 1 1365 0
 7331 00b6 216B     		ldr	r1, [r4, #48]
 7332 00b8 1F48     		ldr	r0, .L507
 7333 00ba 8862     		str	r0, [r1, #40]
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 7334              		.loc 1 1368 0
 7335 00bc 216B     		ldr	r1, [r4, #48]
 7336 00be 1F48     		ldr	r0, .L507+4
 7337 00c0 0863     		str	r0, [r1, #48]
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4
 7338              		.loc 1 1371 0
 7339 00c2 2668     		ldr	r6, [r4]
 7340 00c4 4036     		add	r6, r6, #64
 7341 00c6 206B     		ldr	r0, [r4, #48]
 7342 00c8 111C     		mov	r1, r2
 7343 00ca 321C     		mov	r2, r6
 7344              	.LVL744:
 7345 00cc FFF7FEFF 		bl	HAL_DMA_Start_IT
 7346              	.LVL745:
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 7347              		.loc 1 1374 0
 7348 00d0 2368     		ldr	r3, [r4]
 7349 00d2 D968     		ldr	r1, [r3, #12]
 7350 00d4 8022     		mov	r2, #128
 7351 00d6 5201     		lsl	r2, r2, #5
 7352 00d8 0A43     		orr	r2, r1
 7353 00da DA60     		str	r2, [r3, #12]
 7354              	.L493:
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 7355              		.loc 1 1383 0
 7356 00dc 2068     		ldr	r0, [r4]
 7357 00de 291C     		mov	r1, r5
 7358 00e0 0122     		mov	r2, #1
 7359 00e2 FFF7FEFF 		bl	TIM_CCxChannelCmd
ARM GAS  /tmp/ccNBoJ9q.s 			page 240


 7360              	.LVL746:
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7361              		.loc 1 1385 0
 7362 00e6 2368     		ldr	r3, [r4]
 7363 00e8 154A     		ldr	r2, .L507+8
 7364 00ea 9342     		cmp	r3, r2
 7365 00ec 0AD0     		beq	.L503
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7366              		.loc 1 1385 0 is_stmt 0 discriminator 2
 7367 00ee 154A     		ldr	r2, .L507+12
 7368 00f0 9342     		cmp	r3, r2
 7369 00f2 09D0     		beq	.L504
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7370              		.loc 1 1385 0 discriminator 1
 7371 00f4 144A     		ldr	r2, .L507+16
 7372 00f6 9342     		cmp	r3, r2
 7373 00f8 08D0     		beq	.L505
 7374 00fa 144A     		ldr	r2, .L507+20
 7375 00fc 9342     		cmp	r3, r2
 7376 00fe 07D1     		bne	.L506
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7377              		.loc 1 1385 0
 7378 0100 0122     		mov	r2, #1
 7379 0102 06E0     		b	.L499
 7380              	.L503:
 7381 0104 0122     		mov	r2, #1
 7382 0106 04E0     		b	.L499
 7383              	.L504:
 7384 0108 0122     		mov	r2, #1
 7385 010a 02E0     		b	.L499
 7386              	.L505:
 7387 010c 0122     		mov	r2, #1
 7388 010e 00E0     		b	.L499
 7389              	.L506:
 7390 0110 0022     		mov	r2, #0
 7391              	.L499:
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7392              		.loc 1 1385 0 discriminator 4
 7393 0112 002A     		cmp	r2, #0
 7394 0114 04D0     		beq	.L500
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 7395              		.loc 1 1388 0 is_stmt 1
 7396 0116 596C     		ldr	r1, [r3, #68]
 7397 0118 8022     		mov	r2, #128
 7398 011a 1202     		lsl	r2, r2, #8
 7399 011c 0A43     		orr	r2, r1
 7400 011e 5A64     		str	r2, [r3, #68]
 7401              	.L500:
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 7402              		.loc 1 1392 0
 7403 0120 2368     		ldr	r3, [r4]
 7404 0122 1968     		ldr	r1, [r3]
 7405 0124 0122     		mov	r2, #1
 7406 0126 0A43     		orr	r2, r1
 7407 0128 1A60     		str	r2, [r3]
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 7408              		.loc 1 1395 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 241


 7409 012a 0020     		mov	r0, #0
 7410 012c 02E0     		b	.L490
 7411              	.LVL747:
 7412              	.L501:
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
 7413              		.loc 1 1299 0
 7414 012e 0220     		mov	r0, #2
 7415 0130 00E0     		b	.L490
 7416              	.LVL748:
 7417              	.L502:
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
 7418              		.loc 1 1305 0
 7419 0132 0120     		mov	r0, #1
 7420              	.LVL749:
 7421              	.L490:
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 7422              		.loc 1 1396 0
 7423              		@ sp needed
 7424              	.LVL750:
 7425              	.LVL751:
 7426 0134 70BD     		pop	{r4, r5, r6, pc}
 7427              	.L508:
 7428 0136 C046     		.align	2
 7429              	.L507:
 7430 0138 00000000 		.word	TIM_DMADelayPulseCplt
 7431 013c 00000000 		.word	TIM_DMAError
 7432 0140 002C0140 		.word	1073818624
 7433 0144 00400140 		.word	1073823744
 7434 0148 00440140 		.word	1073824768
 7435 014c 00480140 		.word	1073825792
 7436              		.cfi_endproc
 7437              	.LFE62:
 7439              		.section	.text.HAL_TIM_PWM_Stop_DMA,"ax",%progbits
 7440              		.align	2
 7441              		.global	HAL_TIM_PWM_Stop_DMA
 7442              		.code	16
 7443              		.thumb_func
 7445              	HAL_TIM_PWM_Stop_DMA:
 7446              	.LFB63:
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 7447              		.loc 1 1410 0
 7448              		.cfi_startproc
 7449              	.LVL752:
 7450 0000 10B5     		push	{r4, lr}
 7451              	.LCFI62:
 7452              		.cfi_def_cfa_offset 8
 7453              		.cfi_offset 4, -8
 7454              		.cfi_offset 14, -4
 7455 0002 041C     		mov	r4, r0
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 7456              		.loc 1 1414 0
 7457 0004 0429     		cmp	r1, #4
 7458 0006 0ED0     		beq	.L511
 7459 0008 02D8     		bhi	.L512
 7460 000a 0029     		cmp	r1, #0
 7461 000c 05D0     		beq	.L513
 7462 000e 1BE0     		b	.L510
ARM GAS  /tmp/ccNBoJ9q.s 			page 242


 7463              	.L512:
 7464 0010 0829     		cmp	r1, #8
 7465 0012 0ED0     		beq	.L514
 7466 0014 0C29     		cmp	r1, #12
 7467 0016 12D0     		beq	.L515
 7468 0018 16E0     		b	.L510
 7469              	.L513:
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 7470              		.loc 1 1419 0
 7471 001a 0368     		ldr	r3, [r0]
 7472 001c D868     		ldr	r0, [r3, #12]
 7473              	.LVL753:
 7474 001e 274A     		ldr	r2, .L523
 7475 0020 0240     		and	r2, r0
 7476 0022 DA60     		str	r2, [r3, #12]
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7477              		.loc 1 1421 0
 7478 0024 10E0     		b	.L510
 7479              	.LVL754:
 7480              	.L511:
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 7481              		.loc 1 1426 0
 7482 0026 0368     		ldr	r3, [r0]
 7483 0028 D868     		ldr	r0, [r3, #12]
 7484              	.LVL755:
 7485 002a 254A     		ldr	r2, .L523+4
 7486 002c 0240     		and	r2, r0
 7487 002e DA60     		str	r2, [r3, #12]
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7488              		.loc 1 1428 0
 7489 0030 0AE0     		b	.L510
 7490              	.LVL756:
 7491              	.L514:
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 7492              		.loc 1 1433 0
 7493 0032 0368     		ldr	r3, [r0]
 7494 0034 D868     		ldr	r0, [r3, #12]
 7495              	.LVL757:
 7496 0036 234A     		ldr	r2, .L523+8
 7497 0038 0240     		and	r2, r0
 7498 003a DA60     		str	r2, [r3, #12]
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7499              		.loc 1 1435 0
 7500 003c 04E0     		b	.L510
 7501              	.LVL758:
 7502              	.L515:
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 7503              		.loc 1 1440 0
 7504 003e 0368     		ldr	r3, [r0]
 7505 0040 D868     		ldr	r0, [r3, #12]
 7506              	.LVL759:
 7507 0042 214A     		ldr	r2, .L523+12
 7508 0044 0240     		and	r2, r0
 7509 0046 DA60     		str	r2, [r3, #12]
 7510              	.L510:
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 7511              		.loc 1 1449 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 243


 7512 0048 2068     		ldr	r0, [r4]
 7513 004a 0022     		mov	r2, #0
 7514 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 7515              	.LVL760:
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7516              		.loc 1 1451 0
 7517 0050 2368     		ldr	r3, [r4]
 7518 0052 1E4A     		ldr	r2, .L523+16
 7519 0054 9342     		cmp	r3, r2
 7520 0056 0AD0     		beq	.L519
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7521              		.loc 1 1451 0 is_stmt 0 discriminator 2
 7522 0058 1D4A     		ldr	r2, .L523+20
 7523 005a 9342     		cmp	r3, r2
 7524 005c 09D0     		beq	.L520
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7525              		.loc 1 1451 0 discriminator 1
 7526 005e 1D4A     		ldr	r2, .L523+24
 7527 0060 9342     		cmp	r3, r2
 7528 0062 08D0     		beq	.L521
 7529 0064 1C4A     		ldr	r2, .L523+28
 7530 0066 9342     		cmp	r3, r2
 7531 0068 07D1     		bne	.L522
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7532              		.loc 1 1451 0
 7533 006a 0122     		mov	r2, #1
 7534 006c 06E0     		b	.L516
 7535              	.L519:
 7536 006e 0122     		mov	r2, #1
 7537 0070 04E0     		b	.L516
 7538              	.L520:
 7539 0072 0122     		mov	r2, #1
 7540 0074 02E0     		b	.L516
 7541              	.L521:
 7542 0076 0122     		mov	r2, #1
 7543 0078 00E0     		b	.L516
 7544              	.L522:
 7545 007a 0022     		mov	r2, #0
 7546              	.L516:
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 7547              		.loc 1 1451 0 discriminator 4
 7548 007c 002A     		cmp	r2, #0
 7549 007e 0BD0     		beq	.L517
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 7550              		.loc 1 1454 0 is_stmt 1
 7551 0080 196A     		ldr	r1, [r3, #32]
 7552 0082 164A     		ldr	r2, .L523+32
 7553 0084 1142     		tst	r1, r2
 7554 0086 07D1     		bne	.L517
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 7555              		.loc 1 1454 0 is_stmt 0 discriminator 1
 7556 0088 196A     		ldr	r1, [r3, #32]
 7557 008a 154A     		ldr	r2, .L523+36
 7558 008c 1142     		tst	r1, r2
 7559 008e 03D1     		bne	.L517
 7560 0090 596C     		ldr	r1, [r3, #68]
 7561 0092 144A     		ldr	r2, .L523+40
ARM GAS  /tmp/ccNBoJ9q.s 			page 244


 7562 0094 0A40     		and	r2, r1
 7563 0096 5A64     		str	r2, [r3, #68]
 7564              	.L517:
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 7565              		.loc 1 1458 0 is_stmt 1
 7566 0098 2368     		ldr	r3, [r4]
 7567 009a 196A     		ldr	r1, [r3, #32]
 7568 009c 0F4A     		ldr	r2, .L523+32
 7569 009e 1142     		tst	r1, r2
 7570 00a0 07D1     		bne	.L518
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 7571              		.loc 1 1458 0 is_stmt 0 discriminator 1
 7572 00a2 196A     		ldr	r1, [r3, #32]
 7573 00a4 0E4A     		ldr	r2, .L523+36
 7574 00a6 1142     		tst	r1, r2
 7575 00a8 03D1     		bne	.L518
 7576 00aa 1A68     		ldr	r2, [r3]
 7577 00ac 0121     		mov	r1, #1
 7578 00ae 8A43     		bic	r2, r1
 7579 00b0 1A60     		str	r2, [r3]
 7580              	.L518:
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 7581              		.loc 1 1461 0 is_stmt 1
 7582 00b2 0122     		mov	r2, #1
 7583 00b4 3D23     		mov	r3, #61
 7584 00b6 E254     		strb	r2, [r4, r3]
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 7585              		.loc 1 1465 0
 7586 00b8 0020     		mov	r0, #0
 7587              		@ sp needed
 7588              	.LVL761:
 7589 00ba 10BD     		pop	{r4, pc}
 7590              	.L524:
 7591              		.align	2
 7592              	.L523:
 7593 00bc FFFDFFFF 		.word	-513
 7594 00c0 FFFBFFFF 		.word	-1025
 7595 00c4 FFF7FFFF 		.word	-2049
 7596 00c8 FFEFFFFF 		.word	-4097
 7597 00cc 002C0140 		.word	1073818624
 7598 00d0 00400140 		.word	1073823744
 7599 00d4 00440140 		.word	1073824768
 7600 00d8 00480140 		.word	1073825792
 7601 00dc 11110000 		.word	4369
 7602 00e0 44040000 		.word	1092
 7603 00e4 FF7FFFFF 		.word	-32769
 7604              		.cfi_endproc
 7605              	.LFE63:
 7607              		.section	.text.HAL_TIM_IC_Start,"ax",%progbits
 7608              		.align	2
 7609              		.global	HAL_TIM_IC_Start
 7610              		.code	16
 7611              		.thumb_func
 7613              	HAL_TIM_IC_Start:
 7614              	.LFB68:
1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 7615              		.loc 1 1602 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 245


 7616              		.cfi_startproc
 7617              	.LVL762:
 7618 0000 10B5     		push	{r4, lr}
 7619              	.LCFI63:
 7620              		.cfi_def_cfa_offset 8
 7621              		.cfi_offset 4, -8
 7622              		.cfi_offset 14, -4
 7623 0002 041C     		mov	r4, r0
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 7624              		.loc 1 1607 0
 7625 0004 0068     		ldr	r0, [r0]
 7626              	.LVL763:
 7627 0006 0122     		mov	r2, #1
 7628 0008 FFF7FEFF 		bl	TIM_CCxChannelCmd
 7629              	.LVL764:
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 7630              		.loc 1 1610 0
 7631 000c 2368     		ldr	r3, [r4]
 7632 000e 1968     		ldr	r1, [r3]
 7633 0010 0122     		mov	r2, #1
 7634 0012 0A43     		orr	r2, r1
 7635 0014 1A60     		str	r2, [r3]
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 7636              		.loc 1 1614 0
 7637 0016 0020     		mov	r0, #0
 7638              		@ sp needed
 7639              	.LVL765:
 7640 0018 10BD     		pop	{r4, pc}
 7641              		.cfi_endproc
 7642              	.LFE68:
 7644 001a C046     		.section	.text.HAL_TIM_IC_Stop,"ax",%progbits
 7645              		.align	2
 7646              		.global	HAL_TIM_IC_Stop
 7647              		.code	16
 7648              		.thumb_func
 7650              	HAL_TIM_IC_Stop:
 7651              	.LFB69:
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 7652              		.loc 1 1628 0
 7653              		.cfi_startproc
 7654              	.LVL766:
 7655 0000 10B5     		push	{r4, lr}
 7656              	.LCFI64:
 7657              		.cfi_def_cfa_offset 8
 7658              		.cfi_offset 4, -8
 7659              		.cfi_offset 14, -4
 7660 0002 041C     		mov	r4, r0
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 7661              		.loc 1 1633 0
 7662 0004 0068     		ldr	r0, [r0]
 7663              	.LVL767:
 7664 0006 0022     		mov	r2, #0
 7665 0008 FFF7FEFF 		bl	TIM_CCxChannelCmd
 7666              	.LVL768:
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 7667              		.loc 1 1636 0
 7668 000c 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccNBoJ9q.s 			page 246


 7669 000e 196A     		ldr	r1, [r3, #32]
 7670 0010 064A     		ldr	r2, .L528
 7671 0012 1142     		tst	r1, r2
 7672 0014 07D1     		bne	.L527
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 7673              		.loc 1 1636 0 is_stmt 0 discriminator 1
 7674 0016 196A     		ldr	r1, [r3, #32]
 7675 0018 054A     		ldr	r2, .L528+4
 7676 001a 1142     		tst	r1, r2
 7677 001c 03D1     		bne	.L527
 7678 001e 1A68     		ldr	r2, [r3]
 7679 0020 0121     		mov	r1, #1
 7680 0022 8A43     		bic	r2, r1
 7681 0024 1A60     		str	r2, [r3]
 7682              	.L527:
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 7683              		.loc 1 1640 0 is_stmt 1
 7684 0026 0020     		mov	r0, #0
 7685              		@ sp needed
 7686              	.LVL769:
 7687 0028 10BD     		pop	{r4, pc}
 7688              	.L529:
 7689 002a C046     		.align	2
 7690              	.L528:
 7691 002c 11110000 		.word	4369
 7692 0030 44040000 		.word	1092
 7693              		.cfi_endproc
 7694              	.LFE69:
 7696              		.section	.text.HAL_TIM_IC_Start_IT,"ax",%progbits
 7697              		.align	2
 7698              		.global	HAL_TIM_IC_Start_IT
 7699              		.code	16
 7700              		.thumb_func
 7702              	HAL_TIM_IC_Start_IT:
 7703              	.LFB70:
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 7704              		.loc 1 1654 0
 7705              		.cfi_startproc
 7706              	.LVL770:
 7707 0000 10B5     		push	{r4, lr}
 7708              	.LCFI65:
 7709              		.cfi_def_cfa_offset 8
 7710              		.cfi_offset 4, -8
 7711              		.cfi_offset 14, -4
 7712 0002 041C     		mov	r4, r0
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 7713              		.loc 1 1658 0
 7714 0004 0429     		cmp	r1, #4
 7715 0006 0ED0     		beq	.L532
 7716 0008 02D8     		bhi	.L533
 7717 000a 0029     		cmp	r1, #0
 7718 000c 05D0     		beq	.L534
 7719 000e 1BE0     		b	.L531
 7720              	.L533:
 7721 0010 0829     		cmp	r1, #8
 7722 0012 0ED0     		beq	.L535
 7723 0014 0C29     		cmp	r1, #12
ARM GAS  /tmp/ccNBoJ9q.s 			page 247


 7724 0016 12D0     		beq	.L536
 7725 0018 16E0     		b	.L531
 7726              	.L534:
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 7727              		.loc 1 1663 0
 7728 001a 0368     		ldr	r3, [r0]
 7729 001c D868     		ldr	r0, [r3, #12]
 7730              	.LVL771:
 7731 001e 0222     		mov	r2, #2
 7732 0020 0243     		orr	r2, r0
 7733 0022 DA60     		str	r2, [r3, #12]
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7734              		.loc 1 1665 0
 7735 0024 10E0     		b	.L531
 7736              	.LVL772:
 7737              	.L532:
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 7738              		.loc 1 1670 0
 7739 0026 0368     		ldr	r3, [r0]
 7740 0028 D868     		ldr	r0, [r3, #12]
 7741              	.LVL773:
 7742 002a 0422     		mov	r2, #4
 7743 002c 0243     		orr	r2, r0
 7744 002e DA60     		str	r2, [r3, #12]
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7745              		.loc 1 1672 0
 7746 0030 0AE0     		b	.L531
 7747              	.LVL774:
 7748              	.L535:
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 7749              		.loc 1 1677 0
 7750 0032 0368     		ldr	r3, [r0]
 7751 0034 D868     		ldr	r0, [r3, #12]
 7752              	.LVL775:
 7753 0036 0822     		mov	r2, #8
 7754 0038 0243     		orr	r2, r0
 7755 003a DA60     		str	r2, [r3, #12]
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7756              		.loc 1 1679 0
 7757 003c 04E0     		b	.L531
 7758              	.LVL776:
 7759              	.L536:
1684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 7760              		.loc 1 1684 0
 7761 003e 0368     		ldr	r3, [r0]
 7762 0040 D868     		ldr	r0, [r3, #12]
 7763              	.LVL777:
 7764 0042 1022     		mov	r2, #16
 7765 0044 0243     		orr	r2, r0
 7766 0046 DA60     		str	r2, [r3, #12]
 7767              	.L531:
1692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 7768              		.loc 1 1692 0
 7769 0048 2068     		ldr	r0, [r4]
 7770 004a 0122     		mov	r2, #1
 7771 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 7772              	.LVL778:
ARM GAS  /tmp/ccNBoJ9q.s 			page 248


1695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 7773              		.loc 1 1695 0
 7774 0050 2368     		ldr	r3, [r4]
 7775 0052 1968     		ldr	r1, [r3]
 7776 0054 0122     		mov	r2, #1
 7777 0056 0A43     		orr	r2, r1
 7778 0058 1A60     		str	r2, [r3]
1699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 7779              		.loc 1 1699 0
 7780 005a 0020     		mov	r0, #0
 7781              		@ sp needed
 7782              	.LVL779:
 7783 005c 10BD     		pop	{r4, pc}
 7784              		.cfi_endproc
 7785              	.LFE70:
 7787 005e C046     		.section	.text.HAL_TIM_IC_Stop_IT,"ax",%progbits
 7788              		.align	2
 7789              		.global	HAL_TIM_IC_Stop_IT
 7790              		.code	16
 7791              		.thumb_func
 7793              	HAL_TIM_IC_Stop_IT:
 7794              	.LFB71:
1713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 7795              		.loc 1 1713 0
 7796              		.cfi_startproc
 7797              	.LVL780:
 7798 0000 10B5     		push	{r4, lr}
 7799              	.LCFI66:
 7800              		.cfi_def_cfa_offset 8
 7801              		.cfi_offset 4, -8
 7802              		.cfi_offset 14, -4
 7803 0002 041C     		mov	r4, r0
1717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 7804              		.loc 1 1717 0
 7805 0004 0429     		cmp	r1, #4
 7806 0006 0ED0     		beq	.L539
 7807 0008 02D8     		bhi	.L540
 7808 000a 0029     		cmp	r1, #0
 7809 000c 05D0     		beq	.L541
 7810 000e 1BE0     		b	.L538
 7811              	.L540:
 7812 0010 0829     		cmp	r1, #8
 7813 0012 0ED0     		beq	.L542
 7814 0014 0C29     		cmp	r1, #12
 7815 0016 12D0     		beq	.L543
 7816 0018 16E0     		b	.L538
 7817              	.L541:
1722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 7818              		.loc 1 1722 0
 7819 001a 0368     		ldr	r3, [r0]
 7820 001c DA68     		ldr	r2, [r3, #12]
 7821 001e 0220     		mov	r0, #2
 7822              	.LVL781:
 7823 0020 8243     		bic	r2, r0
 7824 0022 DA60     		str	r2, [r3, #12]
1724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7825              		.loc 1 1724 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 249


 7826 0024 10E0     		b	.L538
 7827              	.LVL782:
 7828              	.L539:
1729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 7829              		.loc 1 1729 0
 7830 0026 0368     		ldr	r3, [r0]
 7831 0028 DA68     		ldr	r2, [r3, #12]
 7832 002a 0420     		mov	r0, #4
 7833              	.LVL783:
 7834 002c 8243     		bic	r2, r0
 7835 002e DA60     		str	r2, [r3, #12]
1731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7836              		.loc 1 1731 0
 7837 0030 0AE0     		b	.L538
 7838              	.LVL784:
 7839              	.L542:
1736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 7840              		.loc 1 1736 0
 7841 0032 0368     		ldr	r3, [r0]
 7842 0034 DA68     		ldr	r2, [r3, #12]
 7843 0036 0820     		mov	r0, #8
 7844              	.LVL785:
 7845 0038 8243     		bic	r2, r0
 7846 003a DA60     		str	r2, [r3, #12]
1738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7847              		.loc 1 1738 0
 7848 003c 04E0     		b	.L538
 7849              	.LVL786:
 7850              	.L543:
1743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 7851              		.loc 1 1743 0
 7852 003e 0368     		ldr	r3, [r0]
 7853 0040 DA68     		ldr	r2, [r3, #12]
 7854 0042 1020     		mov	r0, #16
 7855              	.LVL787:
 7856 0044 8243     		bic	r2, r0
 7857 0046 DA60     		str	r2, [r3, #12]
 7858              	.L538:
1752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 7859              		.loc 1 1752 0
 7860 0048 2068     		ldr	r0, [r4]
 7861 004a 0022     		mov	r2, #0
 7862 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 7863              	.LVL788:
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 7864              		.loc 1 1755 0
 7865 0050 2368     		ldr	r3, [r4]
 7866 0052 196A     		ldr	r1, [r3, #32]
 7867 0054 064A     		ldr	r2, .L545
 7868 0056 1142     		tst	r1, r2
 7869 0058 07D1     		bne	.L544
1755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 7870              		.loc 1 1755 0 is_stmt 0 discriminator 1
 7871 005a 196A     		ldr	r1, [r3, #32]
 7872 005c 054A     		ldr	r2, .L545+4
 7873 005e 1142     		tst	r1, r2
 7874 0060 03D1     		bne	.L544
ARM GAS  /tmp/ccNBoJ9q.s 			page 250


 7875 0062 1A68     		ldr	r2, [r3]
 7876 0064 0121     		mov	r1, #1
 7877 0066 8A43     		bic	r2, r1
 7878 0068 1A60     		str	r2, [r3]
 7879              	.L544:
1759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 7880              		.loc 1 1759 0 is_stmt 1
 7881 006a 0020     		mov	r0, #0
 7882              		@ sp needed
 7883              	.LVL789:
 7884 006c 10BD     		pop	{r4, pc}
 7885              	.L546:
 7886 006e C046     		.align	2
 7887              	.L545:
 7888 0070 11110000 		.word	4369
 7889 0074 44040000 		.word	1092
 7890              		.cfi_endproc
 7891              	.LFE71:
 7893              		.section	.text.HAL_TIM_IC_Start_DMA,"ax",%progbits
 7894              		.align	2
 7895              		.global	HAL_TIM_IC_Start_DMA
 7896              		.code	16
 7897              		.thumb_func
 7899              	HAL_TIM_IC_Start_DMA:
 7900              	.LFB72:
1775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 7901              		.loc 1 1775 0
 7902              		.cfi_startproc
 7903              	.LVL790:
 7904 0000 38B5     		push	{r3, r4, r5, lr}
 7905              	.LCFI67:
 7906              		.cfi_def_cfa_offset 16
 7907              		.cfi_offset 3, -16
 7908              		.cfi_offset 4, -12
 7909              		.cfi_offset 5, -8
 7910              		.cfi_offset 14, -4
 7911 0002 041C     		mov	r4, r0
 7912 0004 0D1C     		mov	r5, r1
1780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 7913              		.loc 1 1780 0
 7914 0006 3D21     		mov	r1, #61
 7915              	.LVL791:
 7916 0008 415C     		ldrb	r1, [r0, r1]
 7917 000a 0229     		cmp	r1, #2
 7918 000c 68D0     		beq	.L557
1784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 7919              		.loc 1 1784 0
 7920 000e 3D21     		mov	r1, #61
 7921 0010 415C     		ldrb	r1, [r0, r1]
 7922 0012 0129     		cmp	r1, #1
 7923 0014 06D1     		bne	.L549
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((pData == 0U ) && (Length > 0U))
 7924              		.loc 1 1786 0
 7925 0016 002A     		cmp	r2, #0
 7926 0018 01D1     		bne	.L550
1786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((pData == 0U ) && (Length > 0U))
 7927              		.loc 1 1786 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccNBoJ9q.s 			page 251


 7928 001a 002B     		cmp	r3, #0
 7929 001c 62D1     		bne	.L558
 7930              	.L550:
1792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 7931              		.loc 1 1792 0 is_stmt 1
 7932 001e 0220     		mov	r0, #2
 7933              	.LVL792:
 7934 0020 3D21     		mov	r1, #61
 7935 0022 6054     		strb	r0, [r4, r1]
 7936              	.L549:
1796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 7937              		.loc 1 1796 0
 7938 0024 042D     		cmp	r5, #4
 7939 0026 1AD0     		beq	.L552
 7940 0028 02D8     		bhi	.L553
 7941 002a 002D     		cmp	r5, #0
 7942 002c 05D0     		beq	.L554
 7943 002e 4BE0     		b	.L551
 7944              	.L553:
 7945 0030 082D     		cmp	r5, #8
 7946 0032 26D0     		beq	.L555
 7947 0034 0C2D     		cmp	r5, #12
 7948 0036 36D0     		beq	.L556
 7949 0038 46E0     		b	.L551
 7950              	.L554:
1801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
 7951              		.loc 1 1801 0
 7952 003a 616A     		ldr	r1, [r4, #36]
 7953 003c 2A48     		ldr	r0, .L559
 7954 003e 8862     		str	r0, [r1, #40]
1804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 7955              		.loc 1 1804 0
 7956 0040 616A     		ldr	r1, [r4, #36]
 7957 0042 2A48     		ldr	r0, .L559+4
 7958 0044 0863     		str	r0, [r1, #48]
1807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)pData
 7959              		.loc 1 1807 0
 7960 0046 2168     		ldr	r1, [r4]
 7961 0048 3431     		add	r1, r1, #52
 7962 004a 606A     		ldr	r0, [r4, #36]
 7963 004c FFF7FEFF 		bl	HAL_DMA_Start_IT
 7964              	.LVL793:
1810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 7965              		.loc 1 1810 0
 7966 0050 2368     		ldr	r3, [r4]
 7967 0052 D968     		ldr	r1, [r3, #12]
 7968 0054 8022     		mov	r2, #128
 7969 0056 9200     		lsl	r2, r2, #2
 7970 0058 0A43     		orr	r2, r1
 7971 005a DA60     		str	r2, [r3, #12]
1812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7972              		.loc 1 1812 0
 7973 005c 34E0     		b	.L551
 7974              	.LVL794:
 7975              	.L552:
1817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
 7976              		.loc 1 1817 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 252


 7977 005e A16A     		ldr	r1, [r4, #40]
 7978 0060 2148     		ldr	r0, .L559
 7979 0062 8862     		str	r0, [r1, #40]
1820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 7980              		.loc 1 1820 0
 7981 0064 A16A     		ldr	r1, [r4, #40]
 7982 0066 2148     		ldr	r0, .L559+4
 7983 0068 0863     		str	r0, [r1, #48]
1823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)pData
 7984              		.loc 1 1823 0
 7985 006a 2168     		ldr	r1, [r4]
 7986 006c 3831     		add	r1, r1, #56
 7987 006e A06A     		ldr	r0, [r4, #40]
 7988 0070 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7989              	.LVL795:
1826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 7990              		.loc 1 1826 0
 7991 0074 2368     		ldr	r3, [r4]
 7992 0076 D968     		ldr	r1, [r3, #12]
 7993 0078 8022     		mov	r2, #128
 7994 007a D200     		lsl	r2, r2, #3
 7995 007c 0A43     		orr	r2, r1
 7996 007e DA60     		str	r2, [r3, #12]
1828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 7997              		.loc 1 1828 0
 7998 0080 22E0     		b	.L551
 7999              	.LVL796:
 8000              	.L555:
1833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMACaptureCplt;
 8001              		.loc 1 1833 0
 8002 0082 E16A     		ldr	r1, [r4, #44]
 8003 0084 1848     		ldr	r0, .L559
 8004 0086 8862     		str	r0, [r1, #40]
1836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 8005              		.loc 1 1836 0
 8006 0088 E16A     		ldr	r1, [r4, #44]
 8007 008a 1848     		ldr	r0, .L559+4
 8008 008c 0863     		str	r0, [r1, #48]
1839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->CCR3, (uint32_t)pData
 8009              		.loc 1 1839 0
 8010 008e 2168     		ldr	r1, [r4]
 8011 0090 3C31     		add	r1, r1, #60
 8012 0092 E06A     		ldr	r0, [r4, #44]
 8013 0094 FFF7FEFF 		bl	HAL_DMA_Start_IT
 8014              	.LVL797:
1842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 8015              		.loc 1 1842 0
 8016 0098 2368     		ldr	r3, [r4]
 8017 009a D968     		ldr	r1, [r3, #12]
 8018 009c 8022     		mov	r2, #128
 8019 009e 1201     		lsl	r2, r2, #4
 8020 00a0 0A43     		orr	r2, r1
 8021 00a2 DA60     		str	r2, [r3, #12]
1844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 8022              		.loc 1 1844 0
 8023 00a4 10E0     		b	.L551
 8024              	.LVL798:
ARM GAS  /tmp/ccNBoJ9q.s 			page 253


 8025              	.L556:
1849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMACaptureCplt;
 8026              		.loc 1 1849 0
 8027 00a6 216B     		ldr	r1, [r4, #48]
 8028 00a8 0F48     		ldr	r0, .L559
 8029 00aa 8862     		str	r0, [r1, #40]
1852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 8030              		.loc 1 1852 0
 8031 00ac 216B     		ldr	r1, [r4, #48]
 8032 00ae 0F48     		ldr	r0, .L559+4
 8033 00b0 0863     		str	r0, [r1, #48]
1855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->CCR4, (uint32_t)pData
 8034              		.loc 1 1855 0
 8035 00b2 2168     		ldr	r1, [r4]
 8036 00b4 4031     		add	r1, r1, #64
 8037 00b6 206B     		ldr	r0, [r4, #48]
 8038 00b8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 8039              	.LVL799:
1858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 8040              		.loc 1 1858 0
 8041 00bc 2368     		ldr	r3, [r4]
 8042 00be D968     		ldr	r1, [r3, #12]
 8043 00c0 8022     		mov	r2, #128
 8044 00c2 5201     		lsl	r2, r2, #5
 8045 00c4 0A43     		orr	r2, r1
 8046 00c6 DA60     		str	r2, [r3, #12]
 8047              	.L551:
1867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8048              		.loc 1 1867 0
 8049 00c8 2068     		ldr	r0, [r4]
 8050 00ca 291C     		mov	r1, r5
 8051 00cc 0122     		mov	r2, #1
 8052 00ce FFF7FEFF 		bl	TIM_CCxChannelCmd
 8053              	.LVL800:
1870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 8054              		.loc 1 1870 0
 8055 00d2 2368     		ldr	r3, [r4]
 8056 00d4 1968     		ldr	r1, [r3]
 8057 00d6 0122     		mov	r2, #1
 8058 00d8 0A43     		orr	r2, r1
 8059 00da 1A60     		str	r2, [r3]
1873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 8060              		.loc 1 1873 0
 8061 00dc 0020     		mov	r0, #0
 8062 00de 02E0     		b	.L548
 8063              	.LVL801:
 8064              	.L557:
1782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
 8065              		.loc 1 1782 0
 8066 00e0 0220     		mov	r0, #2
 8067              	.LVL802:
 8068 00e2 00E0     		b	.L548
 8069              	.LVL803:
 8070              	.L558:
1788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
 8071              		.loc 1 1788 0
 8072 00e4 0120     		mov	r0, #1
ARM GAS  /tmp/ccNBoJ9q.s 			page 254


 8073              	.LVL804:
 8074              	.L548:
1874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 8075              		.loc 1 1874 0
 8076              		@ sp needed
 8077              	.LVL805:
 8078              	.LVL806:
 8079 00e6 38BD     		pop	{r3, r4, r5, pc}
 8080              	.L560:
 8081              		.align	2
 8082              	.L559:
 8083 00e8 00000000 		.word	TIM_DMACaptureCplt
 8084 00ec 00000000 		.word	TIM_DMAError
 8085              		.cfi_endproc
 8086              	.LFE72:
 8088              		.section	.text.HAL_TIM_IC_Stop_DMA,"ax",%progbits
 8089              		.align	2
 8090              		.global	HAL_TIM_IC_Stop_DMA
 8091              		.code	16
 8092              		.thumb_func
 8094              	HAL_TIM_IC_Stop_DMA:
 8095              	.LFB73:
1888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 8096              		.loc 1 1888 0
 8097              		.cfi_startproc
 8098              	.LVL807:
 8099 0000 10B5     		push	{r4, lr}
 8100              	.LCFI68:
 8101              		.cfi_def_cfa_offset 8
 8102              		.cfi_offset 4, -8
 8103              		.cfi_offset 14, -4
 8104 0002 041C     		mov	r4, r0
1893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 8105              		.loc 1 1893 0
 8106 0004 0429     		cmp	r1, #4
 8107 0006 0ED0     		beq	.L563
 8108 0008 02D8     		bhi	.L564
 8109 000a 0029     		cmp	r1, #0
 8110 000c 05D0     		beq	.L565
 8111 000e 1BE0     		b	.L562
 8112              	.L564:
 8113 0010 0829     		cmp	r1, #8
 8114 0012 0ED0     		beq	.L566
 8115 0014 0C29     		cmp	r1, #12
 8116 0016 12D0     		beq	.L567
 8117 0018 16E0     		b	.L562
 8118              	.L565:
1898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 8119              		.loc 1 1898 0
 8120 001a 0368     		ldr	r3, [r0]
 8121 001c D868     		ldr	r0, [r3, #12]
 8122              	.LVL808:
 8123 001e 154A     		ldr	r2, .L569
 8124 0020 0240     		and	r2, r0
 8125 0022 DA60     		str	r2, [r3, #12]
1900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 8126              		.loc 1 1900 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 255


 8127 0024 10E0     		b	.L562
 8128              	.LVL809:
 8129              	.L563:
1905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 8130              		.loc 1 1905 0
 8131 0026 0368     		ldr	r3, [r0]
 8132 0028 D868     		ldr	r0, [r3, #12]
 8133              	.LVL810:
 8134 002a 134A     		ldr	r2, .L569+4
 8135 002c 0240     		and	r2, r0
 8136 002e DA60     		str	r2, [r3, #12]
1907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 8137              		.loc 1 1907 0
 8138 0030 0AE0     		b	.L562
 8139              	.LVL811:
 8140              	.L566:
1912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 8141              		.loc 1 1912 0
 8142 0032 0368     		ldr	r3, [r0]
 8143 0034 D868     		ldr	r0, [r3, #12]
 8144              	.LVL812:
 8145 0036 114A     		ldr	r2, .L569+8
 8146 0038 0240     		and	r2, r0
 8147 003a DA60     		str	r2, [r3, #12]
1914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 8148              		.loc 1 1914 0
 8149 003c 04E0     		b	.L562
 8150              	.LVL813:
 8151              	.L567:
1919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 8152              		.loc 1 1919 0
 8153 003e 0368     		ldr	r3, [r0]
 8154 0040 D868     		ldr	r0, [r3, #12]
 8155              	.LVL814:
 8156 0042 0F4A     		ldr	r2, .L569+12
 8157 0044 0240     		and	r2, r0
 8158 0046 DA60     		str	r2, [r3, #12]
 8159              	.L562:
1928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 8160              		.loc 1 1928 0
 8161 0048 2068     		ldr	r0, [r4]
 8162 004a 0022     		mov	r2, #0
 8163 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 8164              	.LVL815:
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8165              		.loc 1 1931 0
 8166 0050 2368     		ldr	r3, [r4]
 8167 0052 196A     		ldr	r1, [r3, #32]
 8168 0054 0B4A     		ldr	r2, .L569+16
 8169 0056 1142     		tst	r1, r2
 8170 0058 07D1     		bne	.L568
1931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8171              		.loc 1 1931 0 is_stmt 0 discriminator 1
 8172 005a 196A     		ldr	r1, [r3, #32]
 8173 005c 0A4A     		ldr	r2, .L569+20
 8174 005e 1142     		tst	r1, r2
 8175 0060 03D1     		bne	.L568
ARM GAS  /tmp/ccNBoJ9q.s 			page 256


 8176 0062 1A68     		ldr	r2, [r3]
 8177 0064 0121     		mov	r1, #1
 8178 0066 8A43     		bic	r2, r1
 8179 0068 1A60     		str	r2, [r3]
 8180              	.L568:
1934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 8181              		.loc 1 1934 0 is_stmt 1
 8182 006a 0122     		mov	r2, #1
 8183 006c 3D23     		mov	r3, #61
 8184 006e E254     		strb	r2, [r4, r3]
1938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 8185              		.loc 1 1938 0
 8186 0070 0020     		mov	r0, #0
 8187              		@ sp needed
 8188              	.LVL816:
 8189 0072 10BD     		pop	{r4, pc}
 8190              	.L570:
 8191              		.align	2
 8192              	.L569:
 8193 0074 FFFDFFFF 		.word	-513
 8194 0078 FFFBFFFF 		.word	-1025
 8195 007c FFF7FFFF 		.word	-2049
 8196 0080 FFEFFFFF 		.word	-4097
 8197 0084 11110000 		.word	4369
 8198 0088 44040000 		.word	1092
 8199              		.cfi_endproc
 8200              	.LFE73:
 8202              		.section	.text.HAL_TIM_OnePulse_Start,"ax",%progbits
 8203              		.align	2
 8204              		.global	HAL_TIM_OnePulse_Start
 8205              		.code	16
 8206              		.thumb_func
 8208              	HAL_TIM_OnePulse_Start:
 8209              	.LFB78:
2083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 8210              		.loc 1 2083 0
 8211              		.cfi_startproc
 8212              	.LVL817:
 8213 0000 10B5     		push	{r4, lr}
 8214              	.LCFI69:
 8215              		.cfi_def_cfa_offset 8
 8216              		.cfi_offset 4, -8
 8217              		.cfi_offset 14, -4
 8218 0002 041C     		mov	r4, r0
2093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8219              		.loc 1 2093 0
 8220 0004 0068     		ldr	r0, [r0]
 8221              	.LVL818:
 8222 0006 0021     		mov	r1, #0
 8223              	.LVL819:
 8224 0008 0122     		mov	r2, #1
 8225 000a FFF7FEFF 		bl	TIM_CCxChannelCmd
 8226              	.LVL820:
2094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8227              		.loc 1 2094 0
 8228 000e 2068     		ldr	r0, [r4]
 8229 0010 0421     		mov	r1, #4
ARM GAS  /tmp/ccNBoJ9q.s 			page 257


 8230 0012 0122     		mov	r2, #1
 8231 0014 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8232              	.LVL821:
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8233              		.loc 1 2096 0
 8234 0018 2368     		ldr	r3, [r4]
 8235 001a 0F4A     		ldr	r2, .L578
 8236 001c 9342     		cmp	r3, r2
 8237 001e 0AD0     		beq	.L574
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8238              		.loc 1 2096 0 is_stmt 0 discriminator 2
 8239 0020 0E4A     		ldr	r2, .L578+4
 8240 0022 9342     		cmp	r3, r2
 8241 0024 09D0     		beq	.L575
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8242              		.loc 1 2096 0 discriminator 1
 8243 0026 0E4A     		ldr	r2, .L578+8
 8244 0028 9342     		cmp	r3, r2
 8245 002a 08D0     		beq	.L576
 8246 002c 0D4A     		ldr	r2, .L578+12
 8247 002e 9342     		cmp	r3, r2
 8248 0030 07D1     		bne	.L577
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8249              		.loc 1 2096 0
 8250 0032 0122     		mov	r2, #1
 8251 0034 06E0     		b	.L572
 8252              	.L574:
 8253 0036 0122     		mov	r2, #1
 8254 0038 04E0     		b	.L572
 8255              	.L575:
 8256 003a 0122     		mov	r2, #1
 8257 003c 02E0     		b	.L572
 8258              	.L576:
 8259 003e 0122     		mov	r2, #1
 8260 0040 00E0     		b	.L572
 8261              	.L577:
 8262 0042 0022     		mov	r2, #0
 8263              	.L572:
2096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8264              		.loc 1 2096 0 discriminator 4
 8265 0044 002A     		cmp	r2, #0
 8266 0046 04D0     		beq	.L573
2099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 8267              		.loc 1 2099 0 is_stmt 1
 8268 0048 596C     		ldr	r1, [r3, #68]
 8269 004a 8022     		mov	r2, #128
 8270 004c 1202     		lsl	r2, r2, #8
 8271 004e 0A43     		orr	r2, r1
 8272 0050 5A64     		str	r2, [r3, #68]
 8273              	.L573:
2104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 8274              		.loc 1 2104 0
 8275 0052 0020     		mov	r0, #0
 8276              		@ sp needed
 8277              	.LVL822:
 8278 0054 10BD     		pop	{r4, pc}
 8279              	.L579:
ARM GAS  /tmp/ccNBoJ9q.s 			page 258


 8280 0056 C046     		.align	2
 8281              	.L578:
 8282 0058 002C0140 		.word	1073818624
 8283 005c 00400140 		.word	1073823744
 8284 0060 00440140 		.word	1073824768
 8285 0064 00480140 		.word	1073825792
 8286              		.cfi_endproc
 8287              	.LFE78:
 8289              		.section	.text.HAL_TIM_OnePulse_Stop,"ax",%progbits
 8290              		.align	2
 8291              		.global	HAL_TIM_OnePulse_Stop
 8292              		.code	16
 8293              		.thumb_func
 8295              	HAL_TIM_OnePulse_Stop:
 8296              	.LFB79:
2116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 8297              		.loc 1 2116 0
 8298              		.cfi_startproc
 8299              	.LVL823:
 8300 0000 10B5     		push	{r4, lr}
 8301              	.LCFI70:
 8302              		.cfi_def_cfa_offset 8
 8303              		.cfi_offset 4, -8
 8304              		.cfi_offset 14, -4
 8305 0002 041C     		mov	r4, r0
2123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 8306              		.loc 1 2123 0
 8307 0004 0068     		ldr	r0, [r0]
 8308              	.LVL824:
 8309 0006 0021     		mov	r1, #0
 8310              	.LVL825:
 8311 0008 0022     		mov	r2, #0
 8312 000a FFF7FEFF 		bl	TIM_CCxChannelCmd
 8313              	.LVL826:
2124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 8314              		.loc 1 2124 0
 8315 000e 2068     		ldr	r0, [r4]
 8316 0010 0421     		mov	r1, #4
 8317 0012 0022     		mov	r2, #0
 8318 0014 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8319              	.LVL827:
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8320              		.loc 1 2126 0
 8321 0018 2368     		ldr	r3, [r4]
 8322 001a 194A     		ldr	r2, .L588
 8323 001c 9342     		cmp	r3, r2
 8324 001e 0AD0     		beq	.L584
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8325              		.loc 1 2126 0 is_stmt 0 discriminator 2
 8326 0020 184A     		ldr	r2, .L588+4
 8327 0022 9342     		cmp	r3, r2
 8328 0024 09D0     		beq	.L585
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8329              		.loc 1 2126 0 discriminator 1
 8330 0026 184A     		ldr	r2, .L588+8
 8331 0028 9342     		cmp	r3, r2
 8332 002a 08D0     		beq	.L586
ARM GAS  /tmp/ccNBoJ9q.s 			page 259


 8333 002c 174A     		ldr	r2, .L588+12
 8334 002e 9342     		cmp	r3, r2
 8335 0030 07D1     		bne	.L587
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8336              		.loc 1 2126 0
 8337 0032 0122     		mov	r2, #1
 8338 0034 06E0     		b	.L581
 8339              	.L584:
 8340 0036 0122     		mov	r2, #1
 8341 0038 04E0     		b	.L581
 8342              	.L585:
 8343 003a 0122     		mov	r2, #1
 8344 003c 02E0     		b	.L581
 8345              	.L586:
 8346 003e 0122     		mov	r2, #1
 8347 0040 00E0     		b	.L581
 8348              	.L587:
 8349 0042 0022     		mov	r2, #0
 8350              	.L581:
2126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8351              		.loc 1 2126 0 discriminator 4
 8352 0044 002A     		cmp	r2, #0
 8353 0046 0BD0     		beq	.L582
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 8354              		.loc 1 2129 0 is_stmt 1
 8355 0048 196A     		ldr	r1, [r3, #32]
 8356 004a 114A     		ldr	r2, .L588+16
 8357 004c 1142     		tst	r1, r2
 8358 004e 07D1     		bne	.L582
2129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 8359              		.loc 1 2129 0 is_stmt 0 discriminator 1
 8360 0050 196A     		ldr	r1, [r3, #32]
 8361 0052 104A     		ldr	r2, .L588+20
 8362 0054 1142     		tst	r1, r2
 8363 0056 03D1     		bne	.L582
 8364 0058 596C     		ldr	r1, [r3, #68]
 8365 005a 0F4A     		ldr	r2, .L588+24
 8366 005c 0A40     		and	r2, r1
 8367 005e 5A64     		str	r2, [r3, #68]
 8368              	.L582:
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8369              		.loc 1 2133 0 is_stmt 1
 8370 0060 2368     		ldr	r3, [r4]
 8371 0062 196A     		ldr	r1, [r3, #32]
 8372 0064 0A4A     		ldr	r2, .L588+16
 8373 0066 1142     		tst	r1, r2
 8374 0068 07D1     		bne	.L583
2133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8375              		.loc 1 2133 0 is_stmt 0 discriminator 1
 8376 006a 196A     		ldr	r1, [r3, #32]
 8377 006c 094A     		ldr	r2, .L588+20
 8378 006e 1142     		tst	r1, r2
 8379 0070 03D1     		bne	.L583
 8380 0072 1A68     		ldr	r2, [r3]
 8381 0074 0121     		mov	r1, #1
 8382 0076 8A43     		bic	r2, r1
 8383 0078 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccNBoJ9q.s 			page 260


 8384              	.L583:
2137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 8385              		.loc 1 2137 0 is_stmt 1
 8386 007a 0020     		mov	r0, #0
 8387              		@ sp needed
 8388              	.LVL828:
 8389 007c 10BD     		pop	{r4, pc}
 8390              	.L589:
 8391 007e C046     		.align	2
 8392              	.L588:
 8393 0080 002C0140 		.word	1073818624
 8394 0084 00400140 		.word	1073823744
 8395 0088 00440140 		.word	1073824768
 8396 008c 00480140 		.word	1073825792
 8397 0090 11110000 		.word	4369
 8398 0094 44040000 		.word	1092
 8399 0098 FF7FFFFF 		.word	-32769
 8400              		.cfi_endproc
 8401              	.LFE79:
 8403              		.section	.text.HAL_TIM_OnePulse_Start_IT,"ax",%progbits
 8404              		.align	2
 8405              		.global	HAL_TIM_OnePulse_Start_IT
 8406              		.code	16
 8407              		.thumb_func
 8409              	HAL_TIM_OnePulse_Start_IT:
 8410              	.LFB80:
2149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 8411              		.loc 1 2149 0
 8412              		.cfi_startproc
 8413              	.LVL829:
 8414 0000 10B5     		push	{r4, lr}
 8415              	.LCFI71:
 8416              		.cfi_def_cfa_offset 8
 8417              		.cfi_offset 4, -8
 8418              		.cfi_offset 14, -4
 8419 0002 041C     		mov	r4, r0
2160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 8420              		.loc 1 2160 0
 8421 0004 0368     		ldr	r3, [r0]
 8422 0006 D968     		ldr	r1, [r3, #12]
 8423              	.LVL830:
 8424 0008 0222     		mov	r2, #2
 8425 000a 0A43     		orr	r2, r1
 8426 000c DA60     		str	r2, [r3, #12]
2163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 8427              		.loc 1 2163 0
 8428 000e 0368     		ldr	r3, [r0]
 8429 0010 D968     		ldr	r1, [r3, #12]
 8430 0012 0422     		mov	r2, #4
 8431 0014 0A43     		orr	r2, r1
 8432 0016 DA60     		str	r2, [r3, #12]
2165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8433              		.loc 1 2165 0
 8434 0018 0068     		ldr	r0, [r0]
 8435              	.LVL831:
 8436 001a 0021     		mov	r1, #0
 8437 001c 0122     		mov	r2, #1
ARM GAS  /tmp/ccNBoJ9q.s 			page 261


 8438 001e FFF7FEFF 		bl	TIM_CCxChannelCmd
 8439              	.LVL832:
2166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8440              		.loc 1 2166 0
 8441 0022 2068     		ldr	r0, [r4]
 8442 0024 0421     		mov	r1, #4
 8443 0026 0122     		mov	r2, #1
 8444 0028 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8445              	.LVL833:
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8446              		.loc 1 2168 0
 8447 002c 2368     		ldr	r3, [r4]
 8448 002e 0F4A     		ldr	r2, .L597
 8449 0030 9342     		cmp	r3, r2
 8450 0032 0AD0     		beq	.L593
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8451              		.loc 1 2168 0 is_stmt 0 discriminator 2
 8452 0034 0E4A     		ldr	r2, .L597+4
 8453 0036 9342     		cmp	r3, r2
 8454 0038 09D0     		beq	.L594
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8455              		.loc 1 2168 0 discriminator 1
 8456 003a 0E4A     		ldr	r2, .L597+8
 8457 003c 9342     		cmp	r3, r2
 8458 003e 08D0     		beq	.L595
 8459 0040 0D4A     		ldr	r2, .L597+12
 8460 0042 9342     		cmp	r3, r2
 8461 0044 07D1     		bne	.L596
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8462              		.loc 1 2168 0
 8463 0046 0122     		mov	r2, #1
 8464 0048 06E0     		b	.L591
 8465              	.L593:
 8466 004a 0122     		mov	r2, #1
 8467 004c 04E0     		b	.L591
 8468              	.L594:
 8469 004e 0122     		mov	r2, #1
 8470 0050 02E0     		b	.L591
 8471              	.L595:
 8472 0052 0122     		mov	r2, #1
 8473 0054 00E0     		b	.L591
 8474              	.L596:
 8475 0056 0022     		mov	r2, #0
 8476              	.L591:
2168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8477              		.loc 1 2168 0 discriminator 4
 8478 0058 002A     		cmp	r2, #0
 8479 005a 04D0     		beq	.L592
2171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 8480              		.loc 1 2171 0 is_stmt 1
 8481 005c 596C     		ldr	r1, [r3, #68]
 8482 005e 8022     		mov	r2, #128
 8483 0060 1202     		lsl	r2, r2, #8
 8484 0062 0A43     		orr	r2, r1
 8485 0064 5A64     		str	r2, [r3, #68]
 8486              	.L592:
2176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
ARM GAS  /tmp/ccNBoJ9q.s 			page 262


 8487              		.loc 1 2176 0
 8488 0066 0020     		mov	r0, #0
 8489              		@ sp needed
 8490              	.LVL834:
 8491 0068 10BD     		pop	{r4, pc}
 8492              	.L598:
 8493 006a C046     		.align	2
 8494              	.L597:
 8495 006c 002C0140 		.word	1073818624
 8496 0070 00400140 		.word	1073823744
 8497 0074 00440140 		.word	1073824768
 8498 0078 00480140 		.word	1073825792
 8499              		.cfi_endproc
 8500              	.LFE80:
 8502              		.section	.text.HAL_TIM_OnePulse_Stop_IT,"ax",%progbits
 8503              		.align	2
 8504              		.global	HAL_TIM_OnePulse_Stop_IT
 8505              		.code	16
 8506              		.thumb_func
 8508              	HAL_TIM_OnePulse_Stop_IT:
 8509              	.LFB81:
2188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 8510              		.loc 1 2188 0
 8511              		.cfi_startproc
 8512              	.LVL835:
 8513 0000 10B5     		push	{r4, lr}
 8514              	.LCFI72:
 8515              		.cfi_def_cfa_offset 8
 8516              		.cfi_offset 4, -8
 8517              		.cfi_offset 14, -4
 8518 0002 041C     		mov	r4, r0
2190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 8519              		.loc 1 2190 0
 8520 0004 0368     		ldr	r3, [r0]
 8521 0006 DA68     		ldr	r2, [r3, #12]
 8522 0008 0221     		mov	r1, #2
 8523              	.LVL836:
 8524 000a 8A43     		bic	r2, r1
 8525 000c DA60     		str	r2, [r3, #12]
2193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 8526              		.loc 1 2193 0
 8527 000e 0368     		ldr	r3, [r0]
 8528 0010 DA68     		ldr	r2, [r3, #12]
 8529 0012 0421     		mov	r1, #4
 8530 0014 8A43     		bic	r2, r1
 8531 0016 DA60     		str	r2, [r3, #12]
2200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 8532              		.loc 1 2200 0
 8533 0018 0068     		ldr	r0, [r0]
 8534              	.LVL837:
 8535 001a 0021     		mov	r1, #0
 8536 001c 0022     		mov	r2, #0
 8537 001e FFF7FEFF 		bl	TIM_CCxChannelCmd
 8538              	.LVL838:
2201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 8539              		.loc 1 2201 0
 8540 0022 2068     		ldr	r0, [r4]
ARM GAS  /tmp/ccNBoJ9q.s 			page 263


 8541 0024 0421     		mov	r1, #4
 8542 0026 0022     		mov	r2, #0
 8543 0028 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8544              	.LVL839:
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8545              		.loc 1 2203 0
 8546 002c 2368     		ldr	r3, [r4]
 8547 002e 194A     		ldr	r2, .L607
 8548 0030 9342     		cmp	r3, r2
 8549 0032 0AD0     		beq	.L603
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8550              		.loc 1 2203 0 is_stmt 0 discriminator 2
 8551 0034 184A     		ldr	r2, .L607+4
 8552 0036 9342     		cmp	r3, r2
 8553 0038 09D0     		beq	.L604
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8554              		.loc 1 2203 0 discriminator 1
 8555 003a 184A     		ldr	r2, .L607+8
 8556 003c 9342     		cmp	r3, r2
 8557 003e 08D0     		beq	.L605
 8558 0040 174A     		ldr	r2, .L607+12
 8559 0042 9342     		cmp	r3, r2
 8560 0044 07D1     		bne	.L606
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8561              		.loc 1 2203 0
 8562 0046 0122     		mov	r2, #1
 8563 0048 06E0     		b	.L600
 8564              	.L603:
 8565 004a 0122     		mov	r2, #1
 8566 004c 04E0     		b	.L600
 8567              	.L604:
 8568 004e 0122     		mov	r2, #1
 8569 0050 02E0     		b	.L600
 8570              	.L605:
 8571 0052 0122     		mov	r2, #1
 8572 0054 00E0     		b	.L600
 8573              	.L606:
 8574 0056 0022     		mov	r2, #0
 8575              	.L600:
2203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8576              		.loc 1 2203 0 discriminator 4
 8577 0058 002A     		cmp	r2, #0
 8578 005a 0BD0     		beq	.L601
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 8579              		.loc 1 2206 0 is_stmt 1
 8580 005c 196A     		ldr	r1, [r3, #32]
 8581 005e 114A     		ldr	r2, .L607+16
 8582 0060 1142     		tst	r1, r2
 8583 0062 07D1     		bne	.L601
2206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 8584              		.loc 1 2206 0 is_stmt 0 discriminator 1
 8585 0064 196A     		ldr	r1, [r3, #32]
 8586 0066 104A     		ldr	r2, .L607+20
 8587 0068 1142     		tst	r1, r2
 8588 006a 03D1     		bne	.L601
 8589 006c 596C     		ldr	r1, [r3, #68]
 8590 006e 0F4A     		ldr	r2, .L607+24
ARM GAS  /tmp/ccNBoJ9q.s 			page 264


 8591 0070 0A40     		and	r2, r1
 8592 0072 5A64     		str	r2, [r3, #68]
 8593              	.L601:
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    __HAL_TIM_DISABLE(htim);
 8594              		.loc 1 2210 0 is_stmt 1
 8595 0074 2368     		ldr	r3, [r4]
 8596 0076 196A     		ldr	r1, [r3, #32]
 8597 0078 0A4A     		ldr	r2, .L607+16
 8598 007a 1142     		tst	r1, r2
 8599 007c 07D1     		bne	.L602
2210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****    __HAL_TIM_DISABLE(htim);
 8600              		.loc 1 2210 0 is_stmt 0 discriminator 1
 8601 007e 196A     		ldr	r1, [r3, #32]
 8602 0080 094A     		ldr	r2, .L607+20
 8603 0082 1142     		tst	r1, r2
 8604 0084 03D1     		bne	.L602
 8605 0086 1A68     		ldr	r2, [r3]
 8606 0088 0121     		mov	r1, #1
 8607 008a 8A43     		bic	r2, r1
 8608 008c 1A60     		str	r2, [r3]
 8609              	.L602:
2214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 8610              		.loc 1 2214 0 is_stmt 1
 8611 008e 0020     		mov	r0, #0
 8612              		@ sp needed
 8613              	.LVL840:
 8614 0090 10BD     		pop	{r4, pc}
 8615              	.L608:
 8616 0092 C046     		.align	2
 8617              	.L607:
 8618 0094 002C0140 		.word	1073818624
 8619 0098 00400140 		.word	1073823744
 8620 009c 00440140 		.word	1073824768
 8621 00a0 00480140 		.word	1073825792
 8622 00a4 11110000 		.word	4369
 8623 00a8 44040000 		.word	1092
 8624 00ac FF7FFFFF 		.word	-32769
 8625              		.cfi_endproc
 8626              	.LFE81:
 8628              		.section	.text.HAL_TIM_Encoder_Start,"ax",%progbits
 8629              		.align	2
 8630              		.global	HAL_TIM_Encoder_Start
 8631              		.code	16
 8632              		.thumb_func
 8634              	HAL_TIM_Encoder_Start:
 8635              	.LFB86:
2403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 8636              		.loc 1 2403 0
 8637              		.cfi_startproc
 8638              	.LVL841:
 8639 0000 10B5     		push	{r4, lr}
 8640              	.LCFI73:
 8641              		.cfi_def_cfa_offset 8
 8642              		.cfi_offset 4, -8
 8643              		.cfi_offset 14, -4
 8644 0002 041C     		mov	r4, r0
2408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
ARM GAS  /tmp/ccNBoJ9q.s 			page 265


 8645              		.loc 1 2408 0
 8646 0004 0029     		cmp	r1, #0
 8647 0006 02D0     		beq	.L611
 8648 0008 0429     		cmp	r1, #4
 8649 000a 06D0     		beq	.L612
 8650 000c 0BE0     		b	.L614
 8651              	.L611:
2412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8652              		.loc 1 2412 0
 8653 000e 0068     		ldr	r0, [r0]
 8654              	.LVL842:
 8655 0010 0021     		mov	r1, #0
 8656              	.LVL843:
 8657 0012 0122     		mov	r2, #1
 8658 0014 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8659              	.LVL844:
2413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
 8660              		.loc 1 2413 0
 8661 0018 0FE0     		b	.L613
 8662              	.LVL845:
 8663              	.L612:
2417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8664              		.loc 1 2417 0
 8665 001a 0068     		ldr	r0, [r0]
 8666              	.LVL846:
 8667 001c 0421     		mov	r1, #4
 8668              	.LVL847:
 8669 001e 0122     		mov	r2, #1
 8670 0020 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8671              	.LVL848:
2418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
 8672              		.loc 1 2418 0
 8673 0024 09E0     		b	.L613
 8674              	.LVL849:
 8675              	.L614:
2422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8676              		.loc 1 2422 0
 8677 0026 0068     		ldr	r0, [r0]
 8678              	.LVL850:
 8679 0028 0021     		mov	r1, #0
 8680              	.LVL851:
 8681 002a 0122     		mov	r2, #1
 8682 002c FFF7FEFF 		bl	TIM_CCxChannelCmd
 8683              	.LVL852:
2423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8684              		.loc 1 2423 0
 8685 0030 2068     		ldr	r0, [r4]
 8686 0032 0421     		mov	r1, #4
 8687 0034 0122     		mov	r2, #1
 8688 0036 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8689              	.LVL853:
 8690              	.L613:
2428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 8691              		.loc 1 2428 0
 8692 003a 2368     		ldr	r3, [r4]
 8693 003c 1968     		ldr	r1, [r3]
 8694 003e 0122     		mov	r2, #1
ARM GAS  /tmp/ccNBoJ9q.s 			page 266


 8695 0040 0A43     		orr	r2, r1
 8696 0042 1A60     		str	r2, [r3]
2432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 8697              		.loc 1 2432 0
 8698 0044 0020     		mov	r0, #0
 8699              		@ sp needed
 8700              	.LVL854:
 8701 0046 10BD     		pop	{r4, pc}
 8702              		.cfi_endproc
 8703              	.LFE86:
 8705              		.section	.text.HAL_TIM_Encoder_Stop,"ax",%progbits
 8706              		.align	2
 8707              		.global	HAL_TIM_Encoder_Stop
 8708              		.code	16
 8709              		.thumb_func
 8711              	HAL_TIM_Encoder_Stop:
 8712              	.LFB87:
2445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 8713              		.loc 1 2445 0
 8714              		.cfi_startproc
 8715              	.LVL855:
 8716 0000 10B5     		push	{r4, lr}
 8717              	.LCFI74:
 8718              		.cfi_def_cfa_offset 8
 8719              		.cfi_offset 4, -8
 8720              		.cfi_offset 14, -4
 8721 0002 041C     		mov	r4, r0
2451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 8722              		.loc 1 2451 0
 8723 0004 0029     		cmp	r1, #0
 8724 0006 02D0     		beq	.L617
 8725 0008 0429     		cmp	r1, #4
 8726 000a 06D0     		beq	.L618
 8727 000c 0BE0     		b	.L621
 8728              	.L617:
2455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 8729              		.loc 1 2455 0
 8730 000e 0068     		ldr	r0, [r0]
 8731              	.LVL856:
 8732 0010 0021     		mov	r1, #0
 8733              	.LVL857:
 8734 0012 0022     		mov	r2, #0
 8735 0014 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8736              	.LVL858:
2456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
 8737              		.loc 1 2456 0
 8738 0018 0FE0     		b	.L619
 8739              	.LVL859:
 8740              	.L618:
2460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 8741              		.loc 1 2460 0
 8742 001a 0068     		ldr	r0, [r0]
 8743              	.LVL860:
 8744 001c 0421     		mov	r1, #4
 8745              	.LVL861:
 8746 001e 0022     		mov	r2, #0
 8747 0020 FFF7FEFF 		bl	TIM_CCxChannelCmd
ARM GAS  /tmp/ccNBoJ9q.s 			page 267


 8748              	.LVL862:
2461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
 8749              		.loc 1 2461 0
 8750 0024 09E0     		b	.L619
 8751              	.LVL863:
 8752              	.L621:
2465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 8753              		.loc 1 2465 0
 8754 0026 0068     		ldr	r0, [r0]
 8755              	.LVL864:
 8756 0028 0021     		mov	r1, #0
 8757              	.LVL865:
 8758 002a 0022     		mov	r2, #0
 8759 002c FFF7FEFF 		bl	TIM_CCxChannelCmd
 8760              	.LVL866:
2466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 8761              		.loc 1 2466 0
 8762 0030 2068     		ldr	r0, [r4]
 8763 0032 0421     		mov	r1, #4
 8764 0034 0022     		mov	r2, #0
 8765 0036 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8766              	.LVL867:
 8767              	.L619:
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8768              		.loc 1 2472 0
 8769 003a 2368     		ldr	r3, [r4]
 8770 003c 196A     		ldr	r1, [r3, #32]
 8771 003e 064A     		ldr	r2, .L622
 8772 0040 1142     		tst	r1, r2
 8773 0042 07D1     		bne	.L620
2472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8774              		.loc 1 2472 0 is_stmt 0 discriminator 1
 8775 0044 196A     		ldr	r1, [r3, #32]
 8776 0046 054A     		ldr	r2, .L622+4
 8777 0048 1142     		tst	r1, r2
 8778 004a 03D1     		bne	.L620
 8779 004c 1A68     		ldr	r2, [r3]
 8780 004e 0121     		mov	r1, #1
 8781 0050 8A43     		bic	r2, r1
 8782 0052 1A60     		str	r2, [r3]
 8783              	.L620:
2476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 8784              		.loc 1 2476 0 is_stmt 1
 8785 0054 0020     		mov	r0, #0
 8786              		@ sp needed
 8787              	.LVL868:
 8788 0056 10BD     		pop	{r4, pc}
 8789              	.L623:
 8790              		.align	2
 8791              	.L622:
 8792 0058 11110000 		.word	4369
 8793 005c 44040000 		.word	1092
 8794              		.cfi_endproc
 8795              	.LFE87:
 8797              		.section	.text.HAL_TIM_Encoder_Start_IT,"ax",%progbits
 8798              		.align	2
 8799              		.global	HAL_TIM_Encoder_Start_IT
ARM GAS  /tmp/ccNBoJ9q.s 			page 268


 8800              		.code	16
 8801              		.thumb_func
 8803              	HAL_TIM_Encoder_Start_IT:
 8804              	.LFB88:
2489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 8805              		.loc 1 2489 0
 8806              		.cfi_startproc
 8807              	.LVL869:
 8808 0000 10B5     		push	{r4, lr}
 8809              	.LCFI75:
 8810              		.cfi_def_cfa_offset 8
 8811              		.cfi_offset 4, -8
 8812              		.cfi_offset 14, -4
 8813 0002 041C     		mov	r4, r0
2495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 8814              		.loc 1 2495 0
 8815 0004 0029     		cmp	r1, #0
 8816 0006 02D0     		beq	.L626
 8817 0008 0429     		cmp	r1, #4
 8818 000a 0BD0     		beq	.L627
 8819 000c 15E0     		b	.L629
 8820              	.L626:
2499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8821              		.loc 1 2499 0
 8822 000e 0068     		ldr	r0, [r0]
 8823              	.LVL870:
 8824 0010 0021     		mov	r1, #0
 8825              	.LVL871:
 8826 0012 0122     		mov	r2, #1
 8827 0014 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8828              	.LVL872:
2500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 8829              		.loc 1 2500 0
 8830 0018 2368     		ldr	r3, [r4]
 8831 001a D968     		ldr	r1, [r3, #12]
 8832 001c 0222     		mov	r2, #2
 8833 001e 0A43     		orr	r2, r1
 8834 0020 DA60     		str	r2, [r3, #12]
2501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
 8835              		.loc 1 2501 0
 8836 0022 1EE0     		b	.L628
 8837              	.LVL873:
 8838              	.L627:
2505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8839              		.loc 1 2505 0
 8840 0024 0068     		ldr	r0, [r0]
 8841              	.LVL874:
 8842 0026 0421     		mov	r1, #4
 8843              	.LVL875:
 8844 0028 0122     		mov	r2, #1
 8845 002a FFF7FEFF 		bl	TIM_CCxChannelCmd
 8846              	.LVL876:
2506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 8847              		.loc 1 2506 0
 8848 002e 2368     		ldr	r3, [r4]
 8849 0030 D968     		ldr	r1, [r3, #12]
 8850 0032 0422     		mov	r2, #4
ARM GAS  /tmp/ccNBoJ9q.s 			page 269


 8851 0034 0A43     		orr	r2, r1
 8852 0036 DA60     		str	r2, [r3, #12]
2507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       break;
 8853              		.loc 1 2507 0
 8854 0038 13E0     		b	.L628
 8855              	.LVL877:
 8856              	.L629:
2511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8857              		.loc 1 2511 0
 8858 003a 0068     		ldr	r0, [r0]
 8859              	.LVL878:
 8860 003c 0021     		mov	r1, #0
 8861              	.LVL879:
 8862 003e 0122     		mov	r2, #1
 8863 0040 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8864              	.LVL880:
2512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8865              		.loc 1 2512 0
 8866 0044 2068     		ldr	r0, [r4]
 8867 0046 0421     		mov	r1, #4
 8868 0048 0122     		mov	r2, #1
 8869 004a FFF7FEFF 		bl	TIM_CCxChannelCmd
 8870              	.LVL881:
2513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 8871              		.loc 1 2513 0
 8872 004e 2368     		ldr	r3, [r4]
 8873 0050 D968     		ldr	r1, [r3, #12]
 8874 0052 0222     		mov	r2, #2
 8875 0054 0A43     		orr	r2, r1
 8876 0056 DA60     		str	r2, [r3, #12]
2514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 8877              		.loc 1 2514 0
 8878 0058 2368     		ldr	r3, [r4]
 8879 005a D968     		ldr	r1, [r3, #12]
 8880 005c 0422     		mov	r2, #4
 8881 005e 0A43     		orr	r2, r1
 8882 0060 DA60     		str	r2, [r3, #12]
 8883              	.L628:
2520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 8884              		.loc 1 2520 0
 8885 0062 2368     		ldr	r3, [r4]
 8886 0064 1968     		ldr	r1, [r3]
 8887 0066 0122     		mov	r2, #1
 8888 0068 0A43     		orr	r2, r1
 8889 006a 1A60     		str	r2, [r3]
2524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 8890              		.loc 1 2524 0
 8891 006c 0020     		mov	r0, #0
 8892              		@ sp needed
 8893              	.LVL882:
 8894 006e 10BD     		pop	{r4, pc}
 8895              		.cfi_endproc
 8896              	.LFE88:
 8898              		.section	.text.HAL_TIM_Encoder_Stop_IT,"ax",%progbits
 8899              		.align	2
 8900              		.global	HAL_TIM_Encoder_Stop_IT
 8901              		.code	16
ARM GAS  /tmp/ccNBoJ9q.s 			page 270


 8902              		.thumb_func
 8904              	HAL_TIM_Encoder_Stop_IT:
 8905              	.LFB89:
2537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 8906              		.loc 1 2537 0
 8907              		.cfi_startproc
 8908              	.LVL883:
 8909 0000 10B5     		push	{r4, lr}
 8910              	.LCFI76:
 8911              		.cfi_def_cfa_offset 8
 8912              		.cfi_offset 4, -8
 8913              		.cfi_offset 14, -4
 8914 0002 041C     		mov	r4, r0
2543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(Channel == TIM_CHANNEL_1)
 8915              		.loc 1 2543 0
 8916 0004 0029     		cmp	r1, #0
 8917 0006 09D1     		bne	.L631
2545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 8918              		.loc 1 2545 0
 8919 0008 0068     		ldr	r0, [r0]
 8920              	.LVL884:
 8921 000a 0022     		mov	r2, #0
 8922 000c FFF7FEFF 		bl	TIM_CCxChannelCmd
 8923              	.LVL885:
2548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 8924              		.loc 1 2548 0
 8925 0010 2368     		ldr	r3, [r4]
 8926 0012 DA68     		ldr	r2, [r3, #12]
 8927 0014 0221     		mov	r1, #2
 8928 0016 8A43     		bic	r2, r1
 8929 0018 DA60     		str	r2, [r3, #12]
 8930 001a 1FE0     		b	.L632
 8931              	.LVL886:
 8932              	.L631:
2550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if(Channel == TIM_CHANNEL_2)
 8933              		.loc 1 2550 0
 8934 001c 0429     		cmp	r1, #4
 8935 001e 09D1     		bne	.L633
2552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 8936              		.loc 1 2552 0
 8937 0020 0068     		ldr	r0, [r0]
 8938              	.LVL887:
 8939 0022 0022     		mov	r2, #0
 8940 0024 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8941              	.LVL888:
2555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 8942              		.loc 1 2555 0
 8943 0028 2368     		ldr	r3, [r4]
 8944 002a DA68     		ldr	r2, [r3, #12]
 8945 002c 0421     		mov	r1, #4
 8946 002e 8A43     		bic	r2, r1
 8947 0030 DA60     		str	r2, [r3, #12]
 8948 0032 13E0     		b	.L632
 8949              	.LVL889:
 8950              	.L633:
2559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 8951              		.loc 1 2559 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 271


 8952 0034 0068     		ldr	r0, [r0]
 8953              	.LVL890:
 8954 0036 0021     		mov	r1, #0
 8955              	.LVL891:
 8956 0038 0022     		mov	r2, #0
 8957 003a FFF7FEFF 		bl	TIM_CCxChannelCmd
 8958              	.LVL892:
2560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 8959              		.loc 1 2560 0
 8960 003e 2068     		ldr	r0, [r4]
 8961 0040 0421     		mov	r1, #4
 8962 0042 0022     		mov	r2, #0
 8963 0044 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8964              	.LVL893:
2563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 8965              		.loc 1 2563 0
 8966 0048 2368     		ldr	r3, [r4]
 8967 004a DA68     		ldr	r2, [r3, #12]
 8968 004c 0221     		mov	r1, #2
 8969 004e 8A43     		bic	r2, r1
 8970 0050 DA60     		str	r2, [r3, #12]
2564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 8971              		.loc 1 2564 0
 8972 0052 2368     		ldr	r3, [r4]
 8973 0054 DA68     		ldr	r2, [r3, #12]
 8974 0056 0421     		mov	r1, #4
 8975 0058 8A43     		bic	r2, r1
 8976 005a DA60     		str	r2, [r3, #12]
 8977              	.L632:
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8978              		.loc 1 2568 0
 8979 005c 2368     		ldr	r3, [r4]
 8980 005e 196A     		ldr	r1, [r3, #32]
 8981 0060 074A     		ldr	r2, .L635
 8982 0062 1142     		tst	r1, r2
 8983 0064 07D1     		bne	.L634
2568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8984              		.loc 1 2568 0 is_stmt 0 discriminator 1
 8985 0066 196A     		ldr	r1, [r3, #32]
 8986 0068 064A     		ldr	r2, .L635+4
 8987 006a 1142     		tst	r1, r2
 8988 006c 03D1     		bne	.L634
 8989 006e 1A68     		ldr	r2, [r3]
 8990 0070 0121     		mov	r1, #1
 8991 0072 8A43     		bic	r2, r1
 8992 0074 1A60     		str	r2, [r3]
 8993              	.L634:
2571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 8994              		.loc 1 2571 0 is_stmt 1
 8995 0076 0122     		mov	r2, #1
 8996 0078 3D23     		mov	r3, #61
 8997 007a E254     		strb	r2, [r4, r3]
2575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 8998              		.loc 1 2575 0
 8999 007c 0020     		mov	r0, #0
 9000              		@ sp needed
 9001              	.LVL894:
ARM GAS  /tmp/ccNBoJ9q.s 			page 272


 9002 007e 10BD     		pop	{r4, pc}
 9003              	.L636:
 9004              		.align	2
 9005              	.L635:
 9006 0080 11110000 		.word	4369
 9007 0084 44040000 		.word	1092
 9008              		.cfi_endproc
 9009              	.LFE89:
 9011              		.section	.text.HAL_TIM_Encoder_Start_DMA,"ax",%progbits
 9012              		.align	2
 9013              		.global	HAL_TIM_Encoder_Start_DMA
 9014              		.code	16
 9015              		.thumb_func
 9017              	HAL_TIM_Encoder_Start_DMA:
 9018              	.LFB90:
2591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 9019              		.loc 1 2591 0
 9020              		.cfi_startproc
 9021              	.LVL895:
 9022 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9023              	.LCFI77:
 9024              		.cfi_def_cfa_offset 20
 9025              		.cfi_offset 4, -20
 9026              		.cfi_offset 5, -16
 9027              		.cfi_offset 6, -12
 9028              		.cfi_offset 7, -8
 9029              		.cfi_offset 14, -4
 9030 0002 4746     		mov	r7, r8
 9031 0004 80B4     		push	{r7}
 9032              	.LCFI78:
 9033              		.cfi_def_cfa_offset 24
 9034              		.cfi_offset 8, -24
 9035 0006 041C     		mov	r4, r0
 9036 0008 1E1C     		mov	r6, r3
 9037 000a 06A8     		add	r0, sp, #24
 9038              	.LVL896:
 9039 000c 0588     		ldrh	r5, [r0]
2595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 9040              		.loc 1 2595 0
 9041 000e 3D20     		mov	r0, #61
 9042              	.LVL897:
 9043 0010 205C     		ldrb	r0, [r4, r0]
 9044 0012 0228     		cmp	r0, #2
 9045 0014 00D1     		bne	.LCB9207
 9046 0016 85E0     		b	.L645	@long jump
 9047              	.LCB9207:
2599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 9048              		.loc 1 2599 0
 9049 0018 3D23     		mov	r3, #61
 9050              	.LVL898:
 9051 001a E35C     		ldrb	r3, [r4, r3]
 9052 001c 012B     		cmp	r3, #1
 9053 001e 08D1     		bne	.L639
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((((pData1 == 0U) || (pData2 == 0U) )) && (Length > 0U))
 9054              		.loc 1 2601 0
 9055 0020 002A     		cmp	r2, #0
 9056 0022 01D0     		beq	.L640
ARM GAS  /tmp/ccNBoJ9q.s 			page 273


2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((((pData1 == 0U) || (pData2 == 0U) )) && (Length > 0U))
 9057              		.loc 1 2601 0 is_stmt 0 discriminator 2
 9058 0024 002E     		cmp	r6, #0
 9059 0026 01D1     		bne	.L641
 9060              	.L640:
2601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     if((((pData1 == 0U) || (pData2 == 0U) )) && (Length > 0U))
 9061              		.loc 1 2601 0 discriminator 1
 9062 0028 002D     		cmp	r5, #0
 9063 002a 7DD1     		bne	.L646
 9064              	.L641:
2607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 9065              		.loc 1 2607 0 is_stmt 1
 9066 002c 0220     		mov	r0, #2
 9067 002e 3D23     		mov	r3, #61
 9068 0030 E054     		strb	r0, [r4, r3]
 9069              	.L639:
2611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   switch (Channel)
 9070              		.loc 1 2611 0
 9071 0032 0429     		cmp	r1, #4
 9072 0034 21D0     		beq	.L642
 9073 0036 1829     		cmp	r1, #24
 9074 0038 3ED0     		beq	.L643
 9075 003a 0029     		cmp	r1, #0
 9076 003c 76D1     		bne	.L648
2616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
 9077              		.loc 1 2616 0
 9078 003e 636A     		ldr	r3, [r4, #36]
 9079 0040 3C49     		ldr	r1, .L649
 9080              	.LVL899:
 9081 0042 9962     		str	r1, [r3, #40]
2619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 9082              		.loc 1 2619 0
 9083 0044 636A     		ldr	r3, [r4, #36]
 9084 0046 3C49     		ldr	r1, .L649+4
 9085 0048 1963     		str	r1, [r3, #48]
2622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t )pDat
 9086              		.loc 1 2622 0
 9087 004a 2168     		ldr	r1, [r4]
 9088 004c 3431     		add	r1, r1, #52
 9089 004e 606A     		ldr	r0, [r4, #36]
 9090 0050 2B1C     		mov	r3, r5
 9091 0052 FFF7FEFF 		bl	HAL_DMA_Start_IT
 9092              	.LVL900:
2625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 9093              		.loc 1 2625 0
 9094 0056 2368     		ldr	r3, [r4]
 9095 0058 D968     		ldr	r1, [r3, #12]
 9096 005a 8022     		mov	r2, #128
 9097 005c 9200     		lsl	r2, r2, #2
 9098 005e 0A43     		orr	r2, r1
 9099 0060 DA60     		str	r2, [r3, #12]
2628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 9100              		.loc 1 2628 0
 9101 0062 2368     		ldr	r3, [r4]
 9102 0064 1968     		ldr	r1, [r3]
 9103 0066 0122     		mov	r2, #1
 9104 0068 0A43     		orr	r2, r1
ARM GAS  /tmp/ccNBoJ9q.s 			page 274


 9105 006a 1A60     		str	r2, [r3]
2631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 9106              		.loc 1 2631 0
 9107 006c 2068     		ldr	r0, [r4]
 9108 006e 0021     		mov	r1, #0
 9109 0070 0122     		mov	r2, #1
 9110 0072 FFF7FEFF 		bl	TIM_CCxChannelCmd
 9111              	.LVL901:
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 9112              		.loc 1 2694 0
 9113 0076 0020     		mov	r0, #0
2633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 9114              		.loc 1 2633 0
 9115 0078 59E0     		b	.L638
 9116              	.LVL902:
 9117              	.L642:
2638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
 9118              		.loc 1 2638 0
 9119 007a A36A     		ldr	r3, [r4, #40]
 9120 007c 2D4A     		ldr	r2, .L649
 9121              	.LVL903:
 9122 007e 9A62     		str	r2, [r3, #40]
2641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError;
 9123              		.loc 1 2641 0
 9124 0080 A36A     		ldr	r3, [r4, #40]
 9125 0082 2D4A     		ldr	r2, .L649+4
 9126 0084 1A63     		str	r2, [r3, #48]
2643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)pData
 9127              		.loc 1 2643 0
 9128 0086 2168     		ldr	r1, [r4]
 9129              	.LVL904:
 9130 0088 3831     		add	r1, r1, #56
 9131 008a A06A     		ldr	r0, [r4, #40]
 9132 008c 321C     		mov	r2, r6
 9133 008e 2B1C     		mov	r3, r5
 9134 0090 FFF7FEFF 		bl	HAL_DMA_Start_IT
 9135              	.LVL905:
2646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 9136              		.loc 1 2646 0
 9137 0094 2368     		ldr	r3, [r4]
 9138 0096 D968     		ldr	r1, [r3, #12]
 9139 0098 8022     		mov	r2, #128
 9140 009a D200     		lsl	r2, r2, #3
 9141 009c 0A43     		orr	r2, r1
 9142 009e DA60     		str	r2, [r3, #12]
2649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 9143              		.loc 1 2649 0
 9144 00a0 2368     		ldr	r3, [r4]
 9145 00a2 1968     		ldr	r1, [r3]
 9146 00a4 0122     		mov	r2, #1
 9147 00a6 0A43     		orr	r2, r1
 9148 00a8 1A60     		str	r2, [r3]
2652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 9149              		.loc 1 2652 0
 9150 00aa 2068     		ldr	r0, [r4]
 9151 00ac 0421     		mov	r1, #4
 9152 00ae 0122     		mov	r2, #1
ARM GAS  /tmp/ccNBoJ9q.s 			page 275


 9153 00b0 FFF7FEFF 		bl	TIM_CCxChannelCmd
 9154              	.LVL906:
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 9155              		.loc 1 2694 0
 9156 00b4 0020     		mov	r0, #0
2654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 9157              		.loc 1 2654 0
 9158 00b6 3AE0     		b	.L638
 9159              	.LVL907:
 9160              	.L643:
2659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
 9161              		.loc 1 2659 0
 9162 00b8 636A     		ldr	r3, [r4, #36]
 9163 00ba 1E49     		ldr	r1, .L649
 9164              	.LVL908:
 9165 00bc 8846     		mov	r8, r1
 9166 00be 9962     		str	r1, [r3, #40]
2662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 9167              		.loc 1 2662 0
 9168 00c0 636A     		ldr	r3, [r4, #36]
 9169 00c2 1D4F     		ldr	r7, .L649+4
 9170 00c4 1F63     		str	r7, [r3, #48]
2665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)pData
 9171              		.loc 1 2665 0
 9172 00c6 2168     		ldr	r1, [r4]
 9173 00c8 3431     		add	r1, r1, #52
 9174 00ca 606A     		ldr	r0, [r4, #36]
 9175 00cc 2B1C     		mov	r3, r5
 9176 00ce FFF7FEFF 		bl	HAL_DMA_Start_IT
 9177              	.LVL909:
2668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
 9178              		.loc 1 2668 0
 9179 00d2 A36A     		ldr	r3, [r4, #40]
 9180 00d4 4246     		mov	r2, r8
 9181 00d6 9A62     		str	r2, [r3, #40]
2671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 9182              		.loc 1 2671 0
 9183 00d8 A36A     		ldr	r3, [r4, #40]
 9184 00da 1F63     		str	r7, [r3, #48]
2674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)pData
 9185              		.loc 1 2674 0
 9186 00dc 2168     		ldr	r1, [r4]
 9187 00de 3831     		add	r1, r1, #56
 9188 00e0 A06A     		ldr	r0, [r4, #40]
 9189 00e2 321C     		mov	r2, r6
 9190 00e4 2B1C     		mov	r3, r5
 9191 00e6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 9192              	.LVL910:
2677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 9193              		.loc 1 2677 0
 9194 00ea 2368     		ldr	r3, [r4]
 9195 00ec 1968     		ldr	r1, [r3]
 9196 00ee 0122     		mov	r2, #1
 9197 00f0 0A43     		orr	r2, r1
 9198 00f2 1A60     		str	r2, [r3]
2680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 9199              		.loc 1 2680 0
ARM GAS  /tmp/ccNBoJ9q.s 			page 276


 9200 00f4 2068     		ldr	r0, [r4]
 9201 00f6 0021     		mov	r1, #0
 9202 00f8 0122     		mov	r2, #1
 9203 00fa FFF7FEFF 		bl	TIM_CCxChannelCmd
 9204              	.LVL911:
2681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 9205              		.loc 1 2681 0
 9206 00fe 2068     		ldr	r0, [r4]
 9207 0100 0421     		mov	r1, #4
 9208 0102 0122     		mov	r2, #1
 9209 0104 FFF7FEFF 		bl	TIM_CCxChannelCmd
 9210              	.LVL912:
2684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 9211              		.loc 1 2684 0
 9212 0108 2368     		ldr	r3, [r4]
 9213 010a D968     		ldr	r1, [r3, #12]
 9214 010c 8022     		mov	r2, #128
 9215 010e 9200     		lsl	r2, r2, #2
 9216 0110 0A43     		orr	r2, r1
 9217 0112 DA60     		str	r2, [r3, #12]
2686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 9218              		.loc 1 2686 0
 9219 0114 2368     		ldr	r3, [r4]
 9220 0116 D968     		ldr	r1, [r3, #12]
 9221 0118 8022     		mov	r2, #128
 9222 011a D200     		lsl	r2, r2, #3
 9223 011c 0A43     		orr	r2, r1
 9224 011e DA60     		str	r2, [r3, #12]
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 9225              		.loc 1 2694 0
 9226 0120 0020     		mov	r0, #0
2688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     break;
 9227              		.loc 1 2688 0
 9228 0122 04E0     		b	.L638
 9229              	.LVL913:
 9230              	.L645:
2597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****      return HAL_BUSY;
 9231              		.loc 1 2597 0
 9232 0124 0220     		mov	r0, #2
 9233 0126 02E0     		b	.L638
 9234              	.LVL914:
 9235              	.L646:
2603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****       return HAL_ERROR;
 9236              		.loc 1 2603 0
 9237 0128 0120     		mov	r0, #1
 9238 012a 00E0     		b	.L638
 9239              	.L648:
2694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   return HAL_OK;
 9240              		.loc 1 2694 0
 9241 012c 0020     		mov	r0, #0
 9242              	.LVL915:
 9243              	.L638:
2695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 9244              		.loc 1 2695 0
 9245              		@ sp needed
 9246              	.LVL916:
 9247              	.LVL917:
ARM GAS  /tmp/ccNBoJ9q.s 			page 277


 9248 012e 04BC     		pop	{r2}
 9249 0130 9046     		mov	r8, r2
 9250 0132 F0BD     		pop	{r4, r5, r6, r7, pc}
 9251              	.L650:
 9252              		.align	2
 9253              	.L649:
 9254 0134 00000000 		.word	TIM_DMACaptureCplt
 9255 0138 00000000 		.word	TIM_DMAError
 9256              		.cfi_endproc
 9257              	.LFE90:
 9259              		.section	.text.HAL_TIM_Encoder_Stop_DMA,"ax",%progbits
 9260              		.align	2
 9261              		.global	HAL_TIM_Encoder_Stop_DMA
 9262              		.code	16
 9263              		.thumb_func
 9265              	HAL_TIM_Encoder_Stop_DMA:
 9266              	.LFB91:
2708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** {
 9267              		.loc 1 2708 0
 9268              		.cfi_startproc
 9269              	.LVL918:
 9270 0000 10B5     		push	{r4, lr}
 9271              	.LCFI79:
 9272              		.cfi_def_cfa_offset 8
 9273              		.cfi_offset 4, -8
 9274              		.cfi_offset 14, -4
 9275 0002 041C     		mov	r4, r0
2714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   if(Channel == TIM_CHANNEL_1)
 9276              		.loc 1 2714 0
 9277 0004 0029     		cmp	r1, #0
 9278 0006 09D1     		bne	.L652
2716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 9279              		.loc 1 2716 0
 9280 0008 0068     		ldr	r0, [r0]
 9281              	.LVL919:
 9282 000a 0022     		mov	r2, #0
 9283 000c FFF7FEFF 		bl	TIM_CCxChannelCmd
 9284              	.LVL920:
2719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 9285              		.loc 1 2719 0
 9286 0010 2368     		ldr	r3, [r4]
 9287 0012 D968     		ldr	r1, [r3, #12]
 9288 0014 1A4A     		ldr	r2, .L656
 9289 0016 0A40     		and	r2, r1
 9290 0018 DA60     		str	r2, [r3, #12]
 9291 001a 1FE0     		b	.L653
 9292              	.LVL921:
 9293              	.L652:
2721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   else if(Channel == TIM_CHANNEL_2)
 9294              		.loc 1 2721 0
 9295 001c 0429     		cmp	r1, #4
 9296 001e 09D1     		bne	.L654
2723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 9297              		.loc 1 2723 0
 9298 0020 0068     		ldr	r0, [r0]
 9299              	.LVL922:
 9300 0022 0022     		mov	r2, #0
ARM GAS  /tmp/ccNBoJ9q.s 			page 278


 9301 0024 FFF7FEFF 		bl	TIM_CCxChannelCmd
 9302              	.LVL923:
2726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 9303              		.loc 1 2726 0
 9304 0028 2368     		ldr	r3, [r4]
 9305 002a D968     		ldr	r1, [r3, #12]
 9306 002c 154A     		ldr	r2, .L656+4
 9307 002e 0A40     		and	r2, r1
 9308 0030 DA60     		str	r2, [r3, #12]
 9309 0032 13E0     		b	.L653
 9310              	.LVL924:
 9311              	.L654:
2730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE);
 9312              		.loc 1 2730 0
 9313 0034 0068     		ldr	r0, [r0]
 9314              	.LVL925:
 9315 0036 0021     		mov	r1, #0
 9316              	.LVL926:
 9317 0038 0022     		mov	r2, #0
 9318 003a FFF7FEFF 		bl	TIM_CCxChannelCmd
 9319              	.LVL927:
2731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE);
 9320              		.loc 1 2731 0
 9321 003e 2068     		ldr	r0, [r4]
 9322 0040 0421     		mov	r1, #4
 9323 0042 0022     		mov	r2, #0
 9324 0044 FFF7FEFF 		bl	TIM_CCxChannelCmd
 9325              	.LVL928:
2734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 9326              		.loc 1 2734 0
 9327 0048 2368     		ldr	r3, [r4]
 9328 004a D968     		ldr	r1, [r3, #12]
 9329 004c 0C4A     		ldr	r2, .L656
 9330 004e 0A40     		and	r2, r1
 9331 0050 DA60     		str	r2, [r3, #12]
2735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 9332              		.loc 1 2735 0
 9333 0052 2368     		ldr	r3, [r4]
 9334 0054 D968     		ldr	r1, [r3, #12]
 9335 0056 0B4A     		ldr	r2, .L656+4
 9336 0058 0A40     		and	r2, r1
 9337 005a DA60     		str	r2, [r3, #12]
 9338              	.L653:
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 9339              		.loc 1 2739 0
 9340 005c 2368     		ldr	r3, [r4]
 9341 005e 196A     		ldr	r1, [r3, #32]
 9342 0060 094A     		ldr	r2, .L656+8
 9343 0062 1142     		tst	r1, r2
 9344 0064 07D1     		bne	.L655
2739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 9345              		.loc 1 2739 0 is_stmt 0 discriminator 1
 9346 0066 196A     		ldr	r1, [r3, #32]
 9347 0068 084A     		ldr	r2, .L656+12
 9348 006a 1142     		tst	r1, r2
 9349 006c 03D1     		bne	.L655
 9350 006e 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccNBoJ9q.s 			page 279


 9351 0070 0121     		mov	r1, #1
 9352 0072 8A43     		bic	r2, r1
 9353 0074 1A60     		str	r2, [r3]
 9354              	.L655:
2742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 9355              		.loc 1 2742 0 is_stmt 1
 9356 0076 0122     		mov	r2, #1
 9357 0078 3D23     		mov	r3, #61
 9358 007a E254     		strb	r2, [r4, r3]
2746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_tim.c **** }
 9359              		.loc 1 2746 0
 9360 007c 0020     		mov	r0, #0
 9361              		@ sp needed
 9362              	.LVL929:
 9363 007e 10BD     		pop	{r4, pc}
 9364              	.L657:
 9365              		.align	2
 9366              	.L656:
 9367 0080 FFFDFFFF 		.word	-513
 9368 0084 FFFBFFFF 		.word	-1025
 9369 0088 11110000 		.word	4369
 9370 008c 44040000 		.word	1092
 9371              		.cfi_endproc
 9372              	.LFE91:
 9374              		.text
 9375              	.Letext0:
 9376              		.file 2 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_defaul
 9377              		.file 3 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 9378              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 9379              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 9380              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 9381              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 9382              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 9383              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
ARM GAS  /tmp/ccNBoJ9q.s 			page 280


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_tim.c
     /tmp/ccNBoJ9q.s:18     .text.TIM_OC1_SetConfig:00000000 $t
     /tmp/ccNBoJ9q.s:22     .text.TIM_OC1_SetConfig:00000000 TIM_OC1_SetConfig
     /tmp/ccNBoJ9q.s:139    .text.TIM_OC1_SetConfig:00000074 $d
     /tmp/ccNBoJ9q.s:148    .text.TIM_OC3_SetConfig:00000000 $t
     /tmp/ccNBoJ9q.s:152    .text.TIM_OC3_SetConfig:00000000 TIM_OC3_SetConfig
     /tmp/ccNBoJ9q.s:262    .text.TIM_OC3_SetConfig:0000006c $d
     /tmp/ccNBoJ9q.s:275    .text.TIM_OC4_SetConfig:00000000 $t
     /tmp/ccNBoJ9q.s:279    .text.TIM_OC4_SetConfig:00000000 TIM_OC4_SetConfig
     /tmp/ccNBoJ9q.s:366    .text.TIM_OC4_SetConfig:00000054 $d
     /tmp/ccNBoJ9q.s:378    .text.TIM_TI1_ConfigInputStage:00000000 $t
     /tmp/ccNBoJ9q.s:382    .text.TIM_TI1_ConfigInputStage:00000000 TIM_TI1_ConfigInputStage
     /tmp/ccNBoJ9q.s:432    .text.TIM_TI2_SetConfig:00000000 $t
     /tmp/ccNBoJ9q.s:436    .text.TIM_TI2_SetConfig:00000000 TIM_TI2_SetConfig
     /tmp/ccNBoJ9q.s:501    .text.TIM_TI2_SetConfig:00000034 $d
     /tmp/ccNBoJ9q.s:507    .text.TIM_TI2_ConfigInputStage:00000000 $t
     /tmp/ccNBoJ9q.s:511    .text.TIM_TI2_ConfigInputStage:00000000 TIM_TI2_ConfigInputStage
     /tmp/ccNBoJ9q.s:562    .text.TIM_TI2_ConfigInputStage:00000024 $d
     /tmp/ccNBoJ9q.s:567    .text.TIM_TI3_SetConfig:00000000 $t
     /tmp/ccNBoJ9q.s:571    .text.TIM_TI3_SetConfig:00000000 TIM_TI3_SetConfig
     /tmp/ccNBoJ9q.s:638    .text.TIM_TI3_SetConfig:00000038 $d
     /tmp/ccNBoJ9q.s:644    .text.TIM_TI4_SetConfig:00000000 $t
     /tmp/ccNBoJ9q.s:648    .text.TIM_TI4_SetConfig:00000000 TIM_TI4_SetConfig
     /tmp/ccNBoJ9q.s:713    .text.TIM_TI4_SetConfig:00000034 $d
     /tmp/ccNBoJ9q.s:721    .text.TIM_ITRx_SetConfig:00000000 $t
     /tmp/ccNBoJ9q.s:725    .text.TIM_ITRx_SetConfig:00000000 TIM_ITRx_SetConfig
     /tmp/ccNBoJ9q.s:752    .text.HAL_TIM_Base_MspInit:00000000 $t
     /tmp/ccNBoJ9q.s:757    .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
     /tmp/ccNBoJ9q.s:769    .text.HAL_TIM_Base_MspDeInit:00000000 $t
     /tmp/ccNBoJ9q.s:774    .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
     /tmp/ccNBoJ9q.s:786    .text.HAL_TIM_Base_DeInit:00000000 $t
     /tmp/ccNBoJ9q.s:791    .text.HAL_TIM_Base_DeInit:00000000 HAL_TIM_Base_DeInit
     /tmp/ccNBoJ9q.s:842    .text.HAL_TIM_Base_DeInit:00000038 $d
     /tmp/ccNBoJ9q.s:848    .text.HAL_TIM_Base_Start:00000000 $t
     /tmp/ccNBoJ9q.s:853    .text.HAL_TIM_Base_Start:00000000 HAL_TIM_Base_Start
     /tmp/ccNBoJ9q.s:884    .text.HAL_TIM_Base_Stop:00000000 $t
     /tmp/ccNBoJ9q.s:889    .text.HAL_TIM_Base_Stop:00000000 HAL_TIM_Base_Stop
     /tmp/ccNBoJ9q.s:926    .text.HAL_TIM_Base_Stop:0000002c $d
     /tmp/ccNBoJ9q.s:932    .text.HAL_TIM_Base_Start_IT:00000000 $t
     /tmp/ccNBoJ9q.s:937    .text.HAL_TIM_Base_Start_IT:00000000 HAL_TIM_Base_Start_IT
     /tmp/ccNBoJ9q.s:962    .text.HAL_TIM_Base_Stop_IT:00000000 $t
     /tmp/ccNBoJ9q.s:967    .text.HAL_TIM_Base_Stop_IT:00000000 HAL_TIM_Base_Stop_IT
     /tmp/ccNBoJ9q.s:1002   .text.HAL_TIM_Base_Stop_IT:00000028 $d
     /tmp/ccNBoJ9q.s:1008   .text.HAL_TIM_Base_Start_DMA:00000000 $t
     /tmp/ccNBoJ9q.s:1013   .text.HAL_TIM_Base_Start_DMA:00000000 HAL_TIM_Base_Start_DMA
     /tmp/ccNBoJ9q.s:1097   .text.HAL_TIM_Base_Start_DMA:0000005c $d
     /tmp/ccNBoJ9q.s:2716   .text.TIM_DMAPeriodElapsedCplt:00000000 TIM_DMAPeriodElapsedCplt
     /tmp/ccNBoJ9q.s:3269   .text.TIM_DMAError:00000000 TIM_DMAError
     /tmp/ccNBoJ9q.s:1103   .text.HAL_TIM_Base_Stop_DMA:00000000 $t
     /tmp/ccNBoJ9q.s:1108   .text.HAL_TIM_Base_Stop_DMA:00000000 HAL_TIM_Base_Stop_DMA
     /tmp/ccNBoJ9q.s:1147   .text.HAL_TIM_Base_Stop_DMA:00000030 $d
     /tmp/ccNBoJ9q.s:1154   .text.HAL_TIM_OC_MspInit:00000000 $t
     /tmp/ccNBoJ9q.s:1159   .text.HAL_TIM_OC_MspInit:00000000 HAL_TIM_OC_MspInit
     /tmp/ccNBoJ9q.s:1171   .text.HAL_TIM_OC_MspDeInit:00000000 $t
     /tmp/ccNBoJ9q.s:1176   .text.HAL_TIM_OC_MspDeInit:00000000 HAL_TIM_OC_MspDeInit
     /tmp/ccNBoJ9q.s:1188   .text.HAL_TIM_OC_DeInit:00000000 $t
ARM GAS  /tmp/ccNBoJ9q.s 			page 281


     /tmp/ccNBoJ9q.s:1193   .text.HAL_TIM_OC_DeInit:00000000 HAL_TIM_OC_DeInit
     /tmp/ccNBoJ9q.s:1244   .text.HAL_TIM_OC_DeInit:00000038 $d
     /tmp/ccNBoJ9q.s:1250   .text.HAL_TIM_PWM_MspInit:00000000 $t
     /tmp/ccNBoJ9q.s:1255   .text.HAL_TIM_PWM_MspInit:00000000 HAL_TIM_PWM_MspInit
     /tmp/ccNBoJ9q.s:1267   .text.HAL_TIM_PWM_MspDeInit:00000000 $t
     /tmp/ccNBoJ9q.s:1272   .text.HAL_TIM_PWM_MspDeInit:00000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccNBoJ9q.s:1284   .text.HAL_TIM_PWM_DeInit:00000000 $t
     /tmp/ccNBoJ9q.s:1289   .text.HAL_TIM_PWM_DeInit:00000000 HAL_TIM_PWM_DeInit
     /tmp/ccNBoJ9q.s:1340   .text.HAL_TIM_PWM_DeInit:00000038 $d
     /tmp/ccNBoJ9q.s:1346   .text.HAL_TIM_IC_MspInit:00000000 $t
     /tmp/ccNBoJ9q.s:1351   .text.HAL_TIM_IC_MspInit:00000000 HAL_TIM_IC_MspInit
     /tmp/ccNBoJ9q.s:1363   .text.HAL_TIM_IC_MspDeInit:00000000 $t
     /tmp/ccNBoJ9q.s:1368   .text.HAL_TIM_IC_MspDeInit:00000000 HAL_TIM_IC_MspDeInit
     /tmp/ccNBoJ9q.s:1380   .text.HAL_TIM_IC_DeInit:00000000 $t
     /tmp/ccNBoJ9q.s:1385   .text.HAL_TIM_IC_DeInit:00000000 HAL_TIM_IC_DeInit
     /tmp/ccNBoJ9q.s:1436   .text.HAL_TIM_IC_DeInit:00000038 $d
     /tmp/ccNBoJ9q.s:1442   .text.HAL_TIM_OnePulse_MspInit:00000000 $t
     /tmp/ccNBoJ9q.s:1447   .text.HAL_TIM_OnePulse_MspInit:00000000 HAL_TIM_OnePulse_MspInit
     /tmp/ccNBoJ9q.s:1459   .text.HAL_TIM_OnePulse_MspDeInit:00000000 $t
     /tmp/ccNBoJ9q.s:1464   .text.HAL_TIM_OnePulse_MspDeInit:00000000 HAL_TIM_OnePulse_MspDeInit
     /tmp/ccNBoJ9q.s:1476   .text.HAL_TIM_OnePulse_DeInit:00000000 $t
     /tmp/ccNBoJ9q.s:1481   .text.HAL_TIM_OnePulse_DeInit:00000000 HAL_TIM_OnePulse_DeInit
     /tmp/ccNBoJ9q.s:1532   .text.HAL_TIM_OnePulse_DeInit:00000038 $d
     /tmp/ccNBoJ9q.s:1538   .text.HAL_TIM_Encoder_MspInit:00000000 $t
     /tmp/ccNBoJ9q.s:1543   .text.HAL_TIM_Encoder_MspInit:00000000 HAL_TIM_Encoder_MspInit
     /tmp/ccNBoJ9q.s:1555   .text.HAL_TIM_Encoder_MspDeInit:00000000 $t
     /tmp/ccNBoJ9q.s:1560   .text.HAL_TIM_Encoder_MspDeInit:00000000 HAL_TIM_Encoder_MspDeInit
     /tmp/ccNBoJ9q.s:1572   .text.HAL_TIM_Encoder_DeInit:00000000 $t
     /tmp/ccNBoJ9q.s:1577   .text.HAL_TIM_Encoder_DeInit:00000000 HAL_TIM_Encoder_DeInit
     /tmp/ccNBoJ9q.s:1628   .text.HAL_TIM_Encoder_DeInit:00000038 $d
     /tmp/ccNBoJ9q.s:1634   .text.HAL_TIM_DMABurst_MultiWriteStart:00000000 $t
     /tmp/ccNBoJ9q.s:1639   .text.HAL_TIM_DMABurst_MultiWriteStart:00000000 HAL_TIM_DMABurst_MultiWriteStart
     /tmp/ccNBoJ9q.s:1909   .text.HAL_TIM_DMABurst_MultiWriteStart:00000154 $d
     /tmp/ccNBoJ9q.s:2872   .text.TIM_DMADelayPulseCplt:00000000 TIM_DMADelayPulseCplt
     /tmp/ccNBoJ9q.s:3220   .text.TIM_DMATriggerCplt:00000000 TIM_DMATriggerCplt
     /tmp/ccNBoJ9q.s:1918   .text.HAL_TIM_DMABurst_WriteStart:00000000 $t
     /tmp/ccNBoJ9q.s:1923   .text.HAL_TIM_DMABurst_WriteStart:00000000 HAL_TIM_DMABurst_WriteStart
     /tmp/ccNBoJ9q.s:1953   .text.HAL_TIM_DMABurst_WriteStop:00000000 $t
     /tmp/ccNBoJ9q.s:1958   .text.HAL_TIM_DMABurst_WriteStop:00000000 HAL_TIM_DMABurst_WriteStop
     /tmp/ccNBoJ9q.s:2084   .text.HAL_TIM_DMABurst_MultiReadStart:00000000 $t
     /tmp/ccNBoJ9q.s:2089   .text.HAL_TIM_DMABurst_MultiReadStart:00000000 HAL_TIM_DMABurst_MultiReadStart
     /tmp/ccNBoJ9q.s:2352   .text.HAL_TIM_DMABurst_MultiReadStart:00000154 $d
     /tmp/ccNBoJ9q.s:2782   .text.TIM_DMACaptureCplt:00000000 TIM_DMACaptureCplt
     /tmp/ccNBoJ9q.s:2361   .text.HAL_TIM_DMABurst_ReadStart:00000000 $t
     /tmp/ccNBoJ9q.s:2366   .text.HAL_TIM_DMABurst_ReadStart:00000000 HAL_TIM_DMABurst_ReadStart
     /tmp/ccNBoJ9q.s:2396   .text.HAL_TIM_DMABurst_ReadStop:00000000 $t
     /tmp/ccNBoJ9q.s:2401   .text.HAL_TIM_DMABurst_ReadStop:00000000 HAL_TIM_DMABurst_ReadStop
     /tmp/ccNBoJ9q.s:2527   .text.HAL_TIM_GenerateEvent:00000000 $t
     /tmp/ccNBoJ9q.s:2532   .text.HAL_TIM_GenerateEvent:00000000 HAL_TIM_GenerateEvent
     /tmp/ccNBoJ9q.s:2573   .text.HAL_TIM_ConfigTI1Input:00000000 $t
     /tmp/ccNBoJ9q.s:2578   .text.HAL_TIM_ConfigTI1Input:00000000 HAL_TIM_ConfigTI1Input
     /tmp/ccNBoJ9q.s:2605   .text.HAL_TIM_ReadCapturedValue:00000000 $t
     /tmp/ccNBoJ9q.s:2610   .text.HAL_TIM_ReadCapturedValue:00000000 HAL_TIM_ReadCapturedValue
     /tmp/ccNBoJ9q.s:2695   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/ccNBoJ9q.s:2700   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccNBoJ9q.s:2712   .text.TIM_DMAPeriodElapsedCplt:00000000 $t
     /tmp/ccNBoJ9q.s:2743   .text.HAL_TIM_OC_DelayElapsedCallback:00000000 $t
ARM GAS  /tmp/ccNBoJ9q.s 			page 282


     /tmp/ccNBoJ9q.s:2748   .text.HAL_TIM_OC_DelayElapsedCallback:00000000 HAL_TIM_OC_DelayElapsedCallback
     /tmp/ccNBoJ9q.s:2760   .text.HAL_TIM_IC_CaptureCallback:00000000 $t
     /tmp/ccNBoJ9q.s:2765   .text.HAL_TIM_IC_CaptureCallback:00000000 HAL_TIM_IC_CaptureCallback
     /tmp/ccNBoJ9q.s:2777   .text.TIM_DMACaptureCplt:00000000 $t
     /tmp/ccNBoJ9q.s:2850   .text.HAL_TIM_PWM_PulseFinishedCallback:00000000 $t
     /tmp/ccNBoJ9q.s:2855   .text.HAL_TIM_PWM_PulseFinishedCallback:00000000 HAL_TIM_PWM_PulseFinishedCallback
     /tmp/ccNBoJ9q.s:2867   .text.TIM_DMADelayPulseCplt:00000000 $t
     /tmp/ccNBoJ9q.s:2940   .text.HAL_TIM_TriggerCallback:00000000 $t
     /tmp/ccNBoJ9q.s:2945   .text.HAL_TIM_TriggerCallback:00000000 HAL_TIM_TriggerCallback
     /tmp/ccNBoJ9q.s:2957   .text.HAL_TIM_IRQHandler:00000000 $t
     /tmp/ccNBoJ9q.s:2962   .text.HAL_TIM_IRQHandler:00000000 HAL_TIM_IRQHandler
     /tmp/ccNBoJ9q.s:3216   .text.TIM_DMATriggerCplt:00000000 $t
     /tmp/ccNBoJ9q.s:3247   .text.HAL_TIM_ErrorCallback:00000000 $t
     /tmp/ccNBoJ9q.s:3252   .text.HAL_TIM_ErrorCallback:00000000 HAL_TIM_ErrorCallback
     /tmp/ccNBoJ9q.s:3264   .text.TIM_DMAError:00000000 $t
     /tmp/ccNBoJ9q.s:3296   .text.HAL_TIM_Base_GetState:00000000 $t
     /tmp/ccNBoJ9q.s:3301   .text.HAL_TIM_Base_GetState:00000000 HAL_TIM_Base_GetState
     /tmp/ccNBoJ9q.s:3318   .text.HAL_TIM_OC_GetState:00000000 $t
     /tmp/ccNBoJ9q.s:3323   .text.HAL_TIM_OC_GetState:00000000 HAL_TIM_OC_GetState
     /tmp/ccNBoJ9q.s:3340   .text.HAL_TIM_PWM_GetState:00000000 $t
     /tmp/ccNBoJ9q.s:3345   .text.HAL_TIM_PWM_GetState:00000000 HAL_TIM_PWM_GetState
     /tmp/ccNBoJ9q.s:3362   .text.HAL_TIM_IC_GetState:00000000 $t
     /tmp/ccNBoJ9q.s:3367   .text.HAL_TIM_IC_GetState:00000000 HAL_TIM_IC_GetState
     /tmp/ccNBoJ9q.s:3384   .text.HAL_TIM_OnePulse_GetState:00000000 $t
     /tmp/ccNBoJ9q.s:3389   .text.HAL_TIM_OnePulse_GetState:00000000 HAL_TIM_OnePulse_GetState
     /tmp/ccNBoJ9q.s:3406   .text.HAL_TIM_Encoder_GetState:00000000 $t
     /tmp/ccNBoJ9q.s:3411   .text.HAL_TIM_Encoder_GetState:00000000 HAL_TIM_Encoder_GetState
     /tmp/ccNBoJ9q.s:3428   .text.TIM_Base_SetConfig:00000000 $t
     /tmp/ccNBoJ9q.s:3433   .text.TIM_Base_SetConfig:00000000 TIM_Base_SetConfig
     /tmp/ccNBoJ9q.s:3542   .text.TIM_Base_SetConfig:00000088 $d
     /tmp/ccNBoJ9q.s:3553   .text.HAL_TIM_Base_Init:00000000 $t
     /tmp/ccNBoJ9q.s:3558   .text.HAL_TIM_Base_Init:00000000 HAL_TIM_Base_Init
     /tmp/ccNBoJ9q.s:3615   .text.HAL_TIM_OC_Init:00000000 $t
     /tmp/ccNBoJ9q.s:3620   .text.HAL_TIM_OC_Init:00000000 HAL_TIM_OC_Init
     /tmp/ccNBoJ9q.s:3677   .text.HAL_TIM_PWM_Init:00000000 $t
     /tmp/ccNBoJ9q.s:3682   .text.HAL_TIM_PWM_Init:00000000 HAL_TIM_PWM_Init
     /tmp/ccNBoJ9q.s:3739   .text.HAL_TIM_IC_Init:00000000 $t
     /tmp/ccNBoJ9q.s:3744   .text.HAL_TIM_IC_Init:00000000 HAL_TIM_IC_Init
     /tmp/ccNBoJ9q.s:3801   .text.HAL_TIM_OnePulse_Init:00000000 $t
     /tmp/ccNBoJ9q.s:3806   .text.HAL_TIM_OnePulse_Init:00000000 HAL_TIM_OnePulse_Init
     /tmp/ccNBoJ9q.s:3877   .text.HAL_TIM_Encoder_Init:00000000 $t
     /tmp/ccNBoJ9q.s:3882   .text.HAL_TIM_Encoder_Init:00000000 HAL_TIM_Encoder_Init
     /tmp/ccNBoJ9q.s:4034   .text.HAL_TIM_Encoder_Init:000000a8 $d
     /tmp/ccNBoJ9q.s:4040   .text.TIM_OC2_SetConfig:00000000 $t
     /tmp/ccNBoJ9q.s:4045   .text.TIM_OC2_SetConfig:00000000 TIM_OC2_SetConfig
     /tmp/ccNBoJ9q.s:4156   .text.TIM_OC2_SetConfig:0000006c $d
     /tmp/ccNBoJ9q.s:4166   .text.HAL_TIM_OC_ConfigChannel:00000000 $t
     /tmp/ccNBoJ9q.s:4171   .text.HAL_TIM_OC_ConfigChannel:00000000 HAL_TIM_OC_ConfigChannel
     /tmp/ccNBoJ9q.s:4264   .text.HAL_TIM_PWM_ConfigChannel:00000000 $t
     /tmp/ccNBoJ9q.s:4269   .text.HAL_TIM_PWM_ConfigChannel:00000000 HAL_TIM_PWM_ConfigChannel
     /tmp/ccNBoJ9q.s:4449   .text.HAL_TIM_PWM_ConfigChannel:000000ec $d
     /tmp/ccNBoJ9q.s:4454   .text.TIM_TI1_SetConfig:00000000 $t
     /tmp/ccNBoJ9q.s:4459   .text.TIM_TI1_SetConfig:00000000 TIM_TI1_SetConfig
     /tmp/ccNBoJ9q.s:4567   .text.TIM_TI1_SetConfig:00000068 $d
     /tmp/ccNBoJ9q.s:4574   .text.HAL_TIM_IC_ConfigChannel:00000000 $t
     /tmp/ccNBoJ9q.s:4579   .text.HAL_TIM_IC_ConfigChannel:00000000 HAL_TIM_IC_ConfigChannel
     /tmp/ccNBoJ9q.s:4737   .text.HAL_TIM_IC_ConfigChannel:000000c4 $d
ARM GAS  /tmp/ccNBoJ9q.s 			page 283


     /tmp/ccNBoJ9q.s:4742   .text.HAL_TIM_OnePulse_ConfigChannel:00000000 $t
     /tmp/ccNBoJ9q.s:4747   .text.HAL_TIM_OnePulse_ConfigChannel:00000000 HAL_TIM_OnePulse_ConfigChannel
     /tmp/ccNBoJ9q.s:4943   .text.HAL_TIM_OnePulse_ConfigChannel:000000f8 $d
     /tmp/ccNBoJ9q.s:4948   .text.TIM_ETR_SetConfig:00000000 $t
     /tmp/ccNBoJ9q.s:4953   .text.TIM_ETR_SetConfig:00000000 TIM_ETR_SetConfig
     /tmp/ccNBoJ9q.s:4989   .text.TIM_ETR_SetConfig:00000014 $d
     /tmp/ccNBoJ9q.s:4994   .text.HAL_TIM_ConfigOCrefClear:00000000 $t
     /tmp/ccNBoJ9q.s:4999   .text.HAL_TIM_ConfigOCrefClear:00000000 HAL_TIM_ConfigOCrefClear
     /tmp/ccNBoJ9q.s:5189   .text.HAL_TIM_ConfigOCrefClear:000000f0 $d
     /tmp/ccNBoJ9q.s:5195   .text.HAL_TIM_ConfigClockSource:00000000 $t
     /tmp/ccNBoJ9q.s:5200   .text.HAL_TIM_ConfigClockSource:00000000 HAL_TIM_ConfigClockSource
     /tmp/ccNBoJ9q.s:5454   .text.HAL_TIM_ConfigClockSource:00000124 $d
     /tmp/ccNBoJ9q.s:5459   .text.TIM_SlaveTimer_SetConfig:00000000 $t
     /tmp/ccNBoJ9q.s:5463   .text.TIM_SlaveTimer_SetConfig:00000000 TIM_SlaveTimer_SetConfig
     /tmp/ccNBoJ9q.s:5590   .text.HAL_TIM_SlaveConfigSynchronization:00000000 $t
     /tmp/ccNBoJ9q.s:5595   .text.HAL_TIM_SlaveConfigSynchronization:00000000 HAL_TIM_SlaveConfigSynchronization
     /tmp/ccNBoJ9q.s:5659   .text.HAL_TIM_SlaveConfigSynchronization:00000040 $d
     /tmp/ccNBoJ9q.s:5664   .text.HAL_TIM_SlaveConfigSynchronization_IT:00000000 $t
     /tmp/ccNBoJ9q.s:5669   .text.HAL_TIM_SlaveConfigSynchronization_IT:00000000 HAL_TIM_SlaveConfigSynchronization_IT
     /tmp/ccNBoJ9q.s:5733   .text.HAL_TIM_SlaveConfigSynchronization_IT:00000040 $d
     /tmp/ccNBoJ9q.s:5738   .text.TIM_CCxChannelCmd:00000000 $t
     /tmp/ccNBoJ9q.s:5743   .text.TIM_CCxChannelCmd:00000000 TIM_CCxChannelCmd
     /tmp/ccNBoJ9q.s:5778   .text.HAL_TIM_OC_Start:00000000 $t
     /tmp/ccNBoJ9q.s:5783   .text.HAL_TIM_OC_Start:00000000 HAL_TIM_OC_Start
     /tmp/ccNBoJ9q.s:5855   .text.HAL_TIM_OC_Start:00000054 $d
     /tmp/ccNBoJ9q.s:5863   .text.HAL_TIM_OC_Stop:00000000 $t
     /tmp/ccNBoJ9q.s:5868   .text.HAL_TIM_OC_Stop:00000000 HAL_TIM_OC_Stop
     /tmp/ccNBoJ9q.s:5958   .text.HAL_TIM_OC_Stop:00000074 $d
     /tmp/ccNBoJ9q.s:5969   .text.HAL_TIM_OC_Start_IT:00000000 $t
     /tmp/ccNBoJ9q.s:5974   .text.HAL_TIM_OC_Start_IT:00000000 HAL_TIM_OC_Start_IT
     /tmp/ccNBoJ9q.s:6100   .text.HAL_TIM_OC_Start_IT:00000098 $d
     /tmp/ccNBoJ9q.s:6108   .text.HAL_TIM_OC_Stop_IT:00000000 $t
     /tmp/ccNBoJ9q.s:6113   .text.HAL_TIM_OC_Stop_IT:00000000 HAL_TIM_OC_Stop_IT
     /tmp/ccNBoJ9q.s:6257   .text.HAL_TIM_OC_Stop_IT:000000b8 $d
     /tmp/ccNBoJ9q.s:6268   .text.HAL_TIM_OC_Start_DMA:00000000 $t
     /tmp/ccNBoJ9q.s:6273   .text.HAL_TIM_OC_Start_DMA:00000000 HAL_TIM_OC_Start_DMA
     /tmp/ccNBoJ9q.s:6513   .text.HAL_TIM_OC_Start_DMA:00000138 $d
     /tmp/ccNBoJ9q.s:6523   .text.HAL_TIM_OC_Stop_DMA:00000000 $t
     /tmp/ccNBoJ9q.s:6528   .text.HAL_TIM_OC_Stop_DMA:00000000 HAL_TIM_OC_Stop_DMA
     /tmp/ccNBoJ9q.s:6676   .text.HAL_TIM_OC_Stop_DMA:000000bc $d
     /tmp/ccNBoJ9q.s:6691   .text.HAL_TIM_PWM_Start:00000000 $t
     /tmp/ccNBoJ9q.s:6696   .text.HAL_TIM_PWM_Start:00000000 HAL_TIM_PWM_Start
     /tmp/ccNBoJ9q.s:6768   .text.HAL_TIM_PWM_Start:00000054 $d
     /tmp/ccNBoJ9q.s:6776   .text.HAL_TIM_PWM_Stop:00000000 $t
     /tmp/ccNBoJ9q.s:6781   .text.HAL_TIM_PWM_Stop:00000000 HAL_TIM_PWM_Stop
     /tmp/ccNBoJ9q.s:6875   .text.HAL_TIM_PWM_Stop:00000078 $d
     /tmp/ccNBoJ9q.s:6886   .text.HAL_TIM_PWM_Start_IT:00000000 $t
     /tmp/ccNBoJ9q.s:6891   .text.HAL_TIM_PWM_Start_IT:00000000 HAL_TIM_PWM_Start_IT
     /tmp/ccNBoJ9q.s:7017   .text.HAL_TIM_PWM_Start_IT:00000098 $d
     /tmp/ccNBoJ9q.s:7025   .text.HAL_TIM_PWM_Stop_IT:00000000 $t
     /tmp/ccNBoJ9q.s:7030   .text.HAL_TIM_PWM_Stop_IT:00000000 HAL_TIM_PWM_Stop_IT
     /tmp/ccNBoJ9q.s:7174   .text.HAL_TIM_PWM_Stop_IT:000000b8 $d
     /tmp/ccNBoJ9q.s:7185   .text.HAL_TIM_PWM_Start_DMA:00000000 $t
     /tmp/ccNBoJ9q.s:7190   .text.HAL_TIM_PWM_Start_DMA:00000000 HAL_TIM_PWM_Start_DMA
     /tmp/ccNBoJ9q.s:7430   .text.HAL_TIM_PWM_Start_DMA:00000138 $d
     /tmp/ccNBoJ9q.s:7440   .text.HAL_TIM_PWM_Stop_DMA:00000000 $t
     /tmp/ccNBoJ9q.s:7445   .text.HAL_TIM_PWM_Stop_DMA:00000000 HAL_TIM_PWM_Stop_DMA
ARM GAS  /tmp/ccNBoJ9q.s 			page 284


     /tmp/ccNBoJ9q.s:7593   .text.HAL_TIM_PWM_Stop_DMA:000000bc $d
     /tmp/ccNBoJ9q.s:7608   .text.HAL_TIM_IC_Start:00000000 $t
     /tmp/ccNBoJ9q.s:7613   .text.HAL_TIM_IC_Start:00000000 HAL_TIM_IC_Start
     /tmp/ccNBoJ9q.s:7645   .text.HAL_TIM_IC_Stop:00000000 $t
     /tmp/ccNBoJ9q.s:7650   .text.HAL_TIM_IC_Stop:00000000 HAL_TIM_IC_Stop
     /tmp/ccNBoJ9q.s:7691   .text.HAL_TIM_IC_Stop:0000002c $d
     /tmp/ccNBoJ9q.s:7697   .text.HAL_TIM_IC_Start_IT:00000000 $t
     /tmp/ccNBoJ9q.s:7702   .text.HAL_TIM_IC_Start_IT:00000000 HAL_TIM_IC_Start_IT
     /tmp/ccNBoJ9q.s:7788   .text.HAL_TIM_IC_Stop_IT:00000000 $t
     /tmp/ccNBoJ9q.s:7793   .text.HAL_TIM_IC_Stop_IT:00000000 HAL_TIM_IC_Stop_IT
     /tmp/ccNBoJ9q.s:7888   .text.HAL_TIM_IC_Stop_IT:00000070 $d
     /tmp/ccNBoJ9q.s:7894   .text.HAL_TIM_IC_Start_DMA:00000000 $t
     /tmp/ccNBoJ9q.s:7899   .text.HAL_TIM_IC_Start_DMA:00000000 HAL_TIM_IC_Start_DMA
     /tmp/ccNBoJ9q.s:8083   .text.HAL_TIM_IC_Start_DMA:000000e8 $d
     /tmp/ccNBoJ9q.s:8089   .text.HAL_TIM_IC_Stop_DMA:00000000 $t
     /tmp/ccNBoJ9q.s:8094   .text.HAL_TIM_IC_Stop_DMA:00000000 HAL_TIM_IC_Stop_DMA
     /tmp/ccNBoJ9q.s:8193   .text.HAL_TIM_IC_Stop_DMA:00000074 $d
     /tmp/ccNBoJ9q.s:8203   .text.HAL_TIM_OnePulse_Start:00000000 $t
     /tmp/ccNBoJ9q.s:8208   .text.HAL_TIM_OnePulse_Start:00000000 HAL_TIM_OnePulse_Start
     /tmp/ccNBoJ9q.s:8282   .text.HAL_TIM_OnePulse_Start:00000058 $d
     /tmp/ccNBoJ9q.s:8290   .text.HAL_TIM_OnePulse_Stop:00000000 $t
     /tmp/ccNBoJ9q.s:8295   .text.HAL_TIM_OnePulse_Stop:00000000 HAL_TIM_OnePulse_Stop
     /tmp/ccNBoJ9q.s:8393   .text.HAL_TIM_OnePulse_Stop:00000080 $d
     /tmp/ccNBoJ9q.s:8404   .text.HAL_TIM_OnePulse_Start_IT:00000000 $t
     /tmp/ccNBoJ9q.s:8409   .text.HAL_TIM_OnePulse_Start_IT:00000000 HAL_TIM_OnePulse_Start_IT
     /tmp/ccNBoJ9q.s:8495   .text.HAL_TIM_OnePulse_Start_IT:0000006c $d
     /tmp/ccNBoJ9q.s:8503   .text.HAL_TIM_OnePulse_Stop_IT:00000000 $t
     /tmp/ccNBoJ9q.s:8508   .text.HAL_TIM_OnePulse_Stop_IT:00000000 HAL_TIM_OnePulse_Stop_IT
     /tmp/ccNBoJ9q.s:8618   .text.HAL_TIM_OnePulse_Stop_IT:00000094 $d
     /tmp/ccNBoJ9q.s:8629   .text.HAL_TIM_Encoder_Start:00000000 $t
     /tmp/ccNBoJ9q.s:8634   .text.HAL_TIM_Encoder_Start:00000000 HAL_TIM_Encoder_Start
     /tmp/ccNBoJ9q.s:8706   .text.HAL_TIM_Encoder_Stop:00000000 $t
     /tmp/ccNBoJ9q.s:8711   .text.HAL_TIM_Encoder_Stop:00000000 HAL_TIM_Encoder_Stop
     /tmp/ccNBoJ9q.s:8792   .text.HAL_TIM_Encoder_Stop:00000058 $d
     /tmp/ccNBoJ9q.s:8798   .text.HAL_TIM_Encoder_Start_IT:00000000 $t
     /tmp/ccNBoJ9q.s:8803   .text.HAL_TIM_Encoder_Start_IT:00000000 HAL_TIM_Encoder_Start_IT
     /tmp/ccNBoJ9q.s:8899   .text.HAL_TIM_Encoder_Stop_IT:00000000 $t
     /tmp/ccNBoJ9q.s:8904   .text.HAL_TIM_Encoder_Stop_IT:00000000 HAL_TIM_Encoder_Stop_IT
     /tmp/ccNBoJ9q.s:9006   .text.HAL_TIM_Encoder_Stop_IT:00000080 $d
     /tmp/ccNBoJ9q.s:9012   .text.HAL_TIM_Encoder_Start_DMA:00000000 $t
     /tmp/ccNBoJ9q.s:9017   .text.HAL_TIM_Encoder_Start_DMA:00000000 HAL_TIM_Encoder_Start_DMA
     /tmp/ccNBoJ9q.s:9254   .text.HAL_TIM_Encoder_Start_DMA:00000134 $d
     /tmp/ccNBoJ9q.s:9260   .text.HAL_TIM_Encoder_Stop_DMA:00000000 $t
     /tmp/ccNBoJ9q.s:9265   .text.HAL_TIM_Encoder_Stop_DMA:00000000 HAL_TIM_Encoder_Stop_DMA
     /tmp/ccNBoJ9q.s:9367   .text.HAL_TIM_Encoder_Stop_DMA:00000080 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
TIMEx_DMACommutationCplt
HAL_DMA_Abort
HAL_TIMEx_BreakCallback
HAL_TIMEx_CommutationCallback
